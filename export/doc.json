[
    {
        "defines": [
            {
                "extends": {
                    "finish": 700007,
                    "start": 700005,
                    "type": "table",
                    "view": "_G"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 700002,
                "start": 700000,
                "type": "setglobal"
            }
        ],
        "desc": "\nA global variable (not a function) that holds the global environment (see [ยง2.2](http://www.lua.org/manual/5.4/manual.html#2.2)). Lua itself does not use this variable; changing its value does not affect any environment, nor vice versa.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-_G)\n",
        "name": "_G",
        "rawdesc": "\nA global variable (not a function) that holds the global environment (see [ยง2.2](http://www.lua.org/manual/5.4/manual.html#2.2)). Lua itself does not use this variable; changing its value does not affect any environment, nor vice versa.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-_G)\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 4040020,
                    "start": 4040011,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 4040008,
                "start": 4040000,
                "type": "setglobal"
            }
        ],
        "desc": "\nA global variable (not a function) that holds a string containing the running Lua version.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-_VERSION)\n",
        "name": "_VERSION",
        "rawdesc": "\nA global variable (not a function) that holds a string containing the running Lua version.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-_VERSION)\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 2150013,
                    "start": 2020020,
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": 2020027,
                            "start": 2020020,
                            "type": "doc.type.string",
                            "view": "\"rdram\""
                        },
                        {
                            "finish": 2030020,
                            "start": 2030004,
                            "type": "doc.type.string",
                            "view": "\"rdram_register\""
                        },
                        {
                            "finish": 2040017,
                            "start": 2040004,
                            "type": "doc.type.string",
                            "view": "\"MI_register\""
                        },
                        {
                            "finish": 2050017,
                            "start": 2050004,
                            "type": "doc.type.string",
                            "view": "\"pi_register\""
                        },
                        {
                            "finish": 2060017,
                            "start": 2060004,
                            "type": "doc.type.string",
                            "view": "\"sp_register\""
                        },
                        {
                            "finish": 2070018,
                            "start": 2070004,
                            "type": "doc.type.string",
                            "view": "\"rsp_register\""
                        },
                        {
                            "finish": 2080017,
                            "start": 2080004,
                            "type": "doc.type.string",
                            "view": "\"si_register\""
                        },
                        {
                            "finish": 2090017,
                            "start": 2090004,
                            "type": "doc.type.string",
                            "view": "\"vi_register\""
                        },
                        {
                            "finish": 2100017,
                            "start": 2100004,
                            "type": "doc.type.string",
                            "view": "\"ri_register\""
                        },
                        {
                            "finish": 2110017,
                            "start": 2110004,
                            "type": "doc.type.string",
                            "view": "\"ai_register\""
                        },
                        {
                            "finish": 2120018,
                            "start": 2120004,
                            "type": "doc.type.string",
                            "view": "\"dpc_register\""
                        },
                        {
                            "finish": 2130018,
                            "start": 2130004,
                            "type": "doc.type.string",
                            "view": "\"dps_register\""
                        },
                        {
                            "finish": 2140013,
                            "start": 2140004,
                            "type": "doc.type.string",
                            "view": "\"SP_DMEM\""
                        },
                        {
                            "finish": 2150013,
                            "start": 2150004,
                            "type": "doc.type.string",
                            "view": "\"PIF_RAM\""
                        }
                    ],
                    "view": "\"MI_register\"|\"PIF_RAM\"|\"SP_DMEM\"|\"ai_register\"|\"dpc_register\"...(+9)"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 2150013,
                "start": 2020010,
                "type": "doc.alias"
            }
        ],
        "desc": "```lua\naddresses:\n    | \"rdram\"\n    | \"rdram_register\"\n    | \"MI_register\"\n    | \"pi_register\"\n    | \"sp_register\"\n    | \"rsp_register\"\n    | \"si_register\"\n    | \"vi_register\"\n    | \"ri_register\"\n    | \"ai_register\"\n    | \"dpc_register\"\n    | \"dps_register\"\n    | \"SP_DMEM\"\n    | \"PIF_RAM\"\n```",
        "fields": [],
        "name": "addresses",
        "rawdesc": "```lua\naddresses:\n    | \"rdram\"\n    | \"rdram_register\"\n    | \"MI_register\"\n    | \"pi_register\"\n    | \"sp_register\"\n    | \"rsp_register\"\n    | \"si_register\"\n    | \"vi_register\"\n    | \"ri_register\"\n    | \"ai_register\"\n    | \"dpc_register\"\n    | \"dps_register\"\n    | \"SP_DMEM\"\n    | \"PIF_RAM\"\n```",
        "type": "type"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 80008,
                    "start": 80006,
                    "type": "table",
                    "view": "string[]"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 80003,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\nCommand-line arguments of Lua Standalone.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-arg)\n",
        "name": "arg",
        "rawdesc": "\nCommand-line arguments of Lua Standalone.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-arg)\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 210017,
                            "name": "v",
                            "start": 210016,
                            "type": "local",
                            "view": "<T>?"
                        },
                        {
                            "finish": 210026,
                            "name": "message",
                            "start": 210019,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 210031,
                            "start": 210028,
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nRaises an error if the value of its argument v is false (i.e., `nil` or `false`); otherwise, returns all its arguments. In case of error, `message` is the error object; when absent, it defaults to `\"assertion failed!\"`\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-assert)",
                    "finish": 210036,
                    "rawdesc": "\nRaises an error if the value of its argument v is false (i.e., `nil` or `false`); otherwise, returns all its arguments. In case of error, `message` is the error object; when absent, it defaults to `\"assertion failed!\"`\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-assert)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T>"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 210000,
                    "type": "function",
                    "view": "function assert(v?: <T>, message?: any, ...any)\n  -> <T>\n  2. ...any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 210015,
                "start": 210009,
                "type": "setglobal"
            }
        ],
        "desc": "\nRaises an error if the value of its argument v is false (i.e., `nil` or `false`); otherwise, returns all its arguments. In case of error, `message` is the error object; when absent, it defaults to `\"assertion failed!\"`\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-assert)",
        "name": "assert",
        "rawdesc": "\nRaises an error if the value of its argument v is false (i.e., `nil` or `false`); otherwise, returns all its arguments. In case of error, `message` is the error object; when absent, it defaults to `\"assertion failed!\"`\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-assert)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 190008,
                    "start": 190006,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 190003,
                "start": 190000,
                "type": "setglobal"
            }
        ],
        "name": "avi",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 9300034,
                            "name": "filename",
                            "start": 9300026,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Begins an avi recording using the previously saved encoding settings. It is\nsaved to `filename`.",
                    "finish": 9300039,
                    "rawdesc": "Begins an avi recording using the previously saved encoding settings. It is\nsaved to `filename`.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 9300000,
                    "type": "function",
                    "view": "function avi.startcapture(filename: string)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 9300025,
                "start": 9300009,
                "type": "setfield"
            }
        ],
        "desc": "Begins an avi recording using the previously saved encoding settings. It is\nsaved to `filename`.",
        "name": "avi.startcapture",
        "rawdesc": "Begins an avi recording using the previously saved encoding settings. It is\nsaved to `filename`.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Stops avi recording.",
                    "finish": 9340030,
                    "rawdesc": "Stops avi recording.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 9340000,
                    "type": "function",
                    "view": "function avi.stopcapture()\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 9340024,
                "start": 9340009,
                "type": "setfield"
            }
        ],
        "desc": "Stops avi recording.",
        "name": "avi.stopcapture",
        "rawdesc": "Stops avi recording.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 6140023,
                    "start": 6140016,
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": 6140023,
                            "start": 6140016,
                            "type": "doc.type.name",
                            "view": "integer"
                        }
                    ],
                    "view": "integer"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 6140023,
                "start": 6140010,
                "type": "doc.alias"
            }
        ],
        "fields": [],
        "name": "brush",
        "type": "type"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 410027,
                            "name": "opt",
                            "start": 410024,
                            "type": "local",
                            "view": "(\"collect\"|\"count\"|\"generational\"|\"incremental\"|\"isrunning\"...(+3))?"
                        },
                        {
                            "finish": 410032,
                            "start": 410029,
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nThis function is a generic interface to the garbage collector. It performs different functions according to its first argument, `opt`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-collectgarbage)\n\n\n```lua\nopt:\n   -> \"collect\" -- Performs a full garbage-collection cycle.\n    | \"stop\" -- Stops automatic execution.\n    | \"restart\" -- Restarts automatic execution.\n    | \"count\" -- Returns the total memory in Kbytes.\n    | \"step\" -- Performs a garbage-collection step.\n    | \"isrunning\" -- Returns whether the collector is running.\n    | \"incremental\" -- Change the collector mode to incremental.\n    | \"generational\" -- Change the collector mode to generational.\n```",
                    "finish": 410037,
                    "rawdesc": "\nThis function is a generic interface to the garbage collector. It performs different functions according to its first argument, `opt`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-collectgarbage)\n\n\n```lua\nopt:\n   -> \"collect\" -- Performs a full garbage-collection cycle.\n    | \"stop\" -- Stops automatic execution.\n    | \"restart\" -- Restarts automatic execution.\n    | \"count\" -- Returns the total memory in Kbytes.\n    | \"step\" -- Performs a garbage-collection step.\n    | \"isrunning\" -- Returns whether the collector is running.\n    | \"incremental\" -- Change the collector mode to incremental.\n    | \"generational\" -- Change the collector mode to generational.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 410000,
                    "type": "function",
                    "view": "function collectgarbage(opt?: \"collect\"|\"count\"|\"generational\"|\"incremental\"|\"isrunning\"...(+3), ...any)\n  -> any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 410023,
                "start": 410009,
                "type": "setglobal"
            }
        ],
        "desc": "\nThis function is a generic interface to the garbage collector. It performs different functions according to its first argument, `opt`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-collectgarbage)\n\n\n```lua\nopt:\n   -> \"collect\" -- Performs a full garbage-collection cycle.\n    | \"stop\" -- Stops automatic execution.\n    | \"restart\" -- Restarts automatic execution.\n    | \"count\" -- Returns the total memory in Kbytes.\n    | \"step\" -- Performs a garbage-collection step.\n    | \"isrunning\" -- Returns whether the collector is running.\n    | \"incremental\" -- Change the collector mode to incremental.\n    | \"generational\" -- Change the collector mode to generational.\n```",
        "name": "collectgarbage",
        "rawdesc": "\nThis function is a generic interface to the garbage collector. It performs different functions according to its first argument, `opt`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-collectgarbage)\n\n\n```lua\nopt:\n   -> \"collect\" -- Performs a full garbage-collection cycle.\n    | \"stop\" -- Stops automatic execution.\n    | \"restart\" -- Restarts automatic execution.\n    | \"count\" -- Returns the total memory in Kbytes.\n    | \"step\" -- Performs a garbage-collection step.\n    | \"isrunning\" -- Returns whether the collector is running.\n    | \"incremental\" -- Change the collector mode to incremental.\n    | \"generational\" -- Change the collector mode to generational.\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 4240013,
                    "start": 4100015,
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": 4110011,
                            "start": 4110005,
                            "type": "doc.type.name",
                            "view": "string"
                        },
                        {
                            "finish": 4120012,
                            "start": 4120005,
                            "type": "doc.type.string",
                            "view": "\"white\""
                        },
                        {
                            "finish": 4130012,
                            "start": 4130005,
                            "type": "doc.type.string",
                            "view": "\"black\""
                        },
                        {
                            "finish": 4140012,
                            "start": 4140005,
                            "type": "doc.type.string",
                            "view": "\"clear\""
                        },
                        {
                            "finish": 4150011,
                            "start": 4150005,
                            "type": "doc.type.string",
                            "view": "\"gray\""
                        },
                        {
                            "finish": 4160010,
                            "start": 4160005,
                            "type": "doc.type.string",
                            "view": "\"red\""
                        },
                        {
                            "finish": 4170013,
                            "start": 4170005,
                            "type": "doc.type.string",
                            "view": "\"orange\""
                        },
                        {
                            "finish": 4180013,
                            "start": 4180005,
                            "type": "doc.type.string",
                            "view": "\"yellow\""
                        },
                        {
                            "finish": 4190017,
                            "start": 4190005,
                            "type": "doc.type.string",
                            "view": "\"chartreuse\""
                        },
                        {
                            "finish": 4200012,
                            "start": 4200005,
                            "type": "doc.type.string",
                            "view": "\"green\""
                        },
                        {
                            "finish": 4210011,
                            "start": 4210005,
                            "type": "doc.type.string",
                            "view": "\"teal\""
                        },
                        {
                            "finish": 4220011,
                            "start": 4220005,
                            "type": "doc.type.string",
                            "view": "\"cyan\""
                        },
                        {
                            "finish": 4230011,
                            "start": 4230005,
                            "type": "doc.type.string",
                            "view": "\"blue\""
                        },
                        {
                            "finish": 4240013,
                            "start": 4240005,
                            "type": "doc.type.string",
                            "view": "\"purple\""
                        }
                    ],
                    "view": "string|\"black\"|\"blue\"|\"chartreuse\"|\"clear\"...(+9)"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 4240013,
                "start": 4100010,
                "type": "doc.alias"
            }
        ],
        "desc": "```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "fields": [],
        "name": "color",
        "rawdesc": "```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "type": "type"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 80014,
                    "start": 80012,
                    "type": "table",
                    "view": "coroutinelib"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 80009,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine)\n",
        "name": "coroutine",
        "rawdesc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine)\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 390027,
                            "name": "co",
                            "start": 390025,
                            "type": "local",
                            "view": "thread"
                        }
                    ],
                    "desc": "\nCloses coroutine `co` , closing all its pending to-be-closed variables and putting the coroutine in a dead state.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.close)",
                    "finish": 390032,
                    "rawdesc": "\nCloses coroutine `co` , closing all its pending to-be-closed variables and putting the coroutine in a dead state.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.close)",
                    "returns": [
                        {
                            "name": "noerror",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "errorobject",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 390000,
                    "type": "function",
                    "view": "function coroutine.close(co: thread)\n  -> noerror: boolean\n  2. errorobject: any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 390024,
                "start": 390009,
                "type": "setfield"
            }
        ],
        "desc": "\nCloses coroutine `co` , closing all its pending to-be-closed variables and putting the coroutine in a dead state.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.close)",
        "name": "coroutine.close",
        "rawdesc": "\nCloses coroutine `co` , closing all its pending to-be-closed variables and putting the coroutine in a dead state.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.close)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 180027,
                            "name": "f",
                            "start": 180026,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        }
                    ],
                    "desc": "\nCreates a new coroutine, with body `f`. `f` must be a function. Returns this new coroutine, an object with type `\"thread\"`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.create)",
                    "finish": 180032,
                    "rawdesc": "\nCreates a new coroutine, with body `f`. `f` must be a function. Returns this new coroutine, an object with type `\"thread\"`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.create)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "thread"
                        }
                    ],
                    "start": 180000,
                    "type": "function",
                    "view": "function coroutine.create(f: fun(...any):...unknown)\n  -> thread"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 180025,
                "start": 180009,
                "type": "setfield"
            }
        ],
        "desc": "\nCreates a new coroutine, with body `f`. `f` must be a function. Returns this new coroutine, an object with type `\"thread\"`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.create)",
        "name": "coroutine.create",
        "rawdesc": "\nCreates a new coroutine, with body `f`. `f` must be a function. Returns this new coroutine, an object with type `\"thread\"`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.create)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 280033,
                            "name": "co",
                            "start": 280031,
                            "type": "local",
                            "view": "thread?"
                        }
                    ],
                    "desc": "\nReturns true when the coroutine `co` can yield. The default for `co` is the running coroutine.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.isyieldable)",
                    "finish": 280038,
                    "rawdesc": "\nReturns true when the coroutine `co` can yield. The default for `co` is the running coroutine.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.isyieldable)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 280000,
                    "type": "function",
                    "view": "function coroutine.isyieldable(co?: thread)\n  -> boolean"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 280030,
                "start": 280009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns true when the coroutine `co` can yield. The default for `co` is the running coroutine.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.isyieldable)",
        "name": "coroutine.isyieldable",
        "rawdesc": "\nReturns true when the coroutine `co` can yield. The default for `co` is the running coroutine.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.isyieldable)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 500028,
                            "name": "co",
                            "start": 500026,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 500034,
                            "name": "val1",
                            "start": 500030,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 500039,
                            "start": 500036,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nStarts or continues the execution of coroutine `co`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.resume)",
                    "finish": 500044,
                    "rawdesc": "\nStarts or continues the execution of coroutine `co`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.resume)",
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 500000,
                    "type": "function",
                    "view": "function coroutine.resume(co: thread, val1?: any, ...any)\n  -> success: boolean\n  2. ...any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 500025,
                "start": 500009,
                "type": "setfield"
            }
        ],
        "desc": "\nStarts or continues the execution of coroutine `co`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.resume)",
        "name": "coroutine.resume",
        "rawdesc": "\nStarts or continues the execution of coroutine `co`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.resume)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nReturns the running coroutine plus a boolean, true when the running coroutine is the main one.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.running)",
                    "finish": 600032,
                    "rawdesc": "\nReturns the running coroutine plus a boolean, true when the running coroutine is the main one.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.running)",
                    "returns": [
                        {
                            "name": "running",
                            "type": "function.return",
                            "view": "thread"
                        },
                        {
                            "name": "ismain",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 600000,
                    "type": "function",
                    "view": "function coroutine.running()\n  -> running: thread\n  2. ismain: boolean"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 600026,
                "start": 600009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the running coroutine plus a boolean, true when the running coroutine is the main one.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.running)",
        "name": "coroutine.running",
        "rawdesc": "\nReturns the running coroutine plus a boolean, true when the running coroutine is the main one.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.running)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 740028,
                            "name": "co",
                            "start": 740026,
                            "type": "local",
                            "view": "thread"
                        }
                    ],
                    "desc": "\nReturns the status of coroutine `co`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.status)\n\n\n```lua\nreturn #1:\n    | \"running\" -- Is running.\n    | \"suspended\" -- Is suspended or not started.\n    | \"normal\" -- Is active but not running.\n    | \"dead\" -- Has finished or stopped with an error.\n```",
                    "finish": 740033,
                    "rawdesc": "\nReturns the status of coroutine `co`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.status)\n\n\n```lua\nreturn #1:\n    | \"running\" -- Is running.\n    | \"suspended\" -- Is suspended or not started.\n    | \"normal\" -- Is active but not running.\n    | \"dead\" -- Has finished or stopped with an error.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "\"dead\"|\"normal\"|\"running\"|\"suspended\""
                        }
                    ],
                    "start": 740000,
                    "type": "function",
                    "view": "function coroutine.status(co: thread)\n  -> \"dead\"|\"normal\"|\"running\"|\"suspended\""
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 740025,
                "start": 740009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the status of coroutine `co`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.status)\n\n\n```lua\nreturn #1:\n    | \"running\" -- Is running.\n    | \"suspended\" -- Is suspended or not started.\n    | \"normal\" -- Is active but not running.\n    | \"dead\" -- Has finished or stopped with an error.\n```",
        "name": "coroutine.status",
        "rawdesc": "\nReturns the status of coroutine `co`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.status)\n\n\n```lua\nreturn #1:\n    | \"running\" -- Is running.\n    | \"suspended\" -- Is suspended or not started.\n    | \"normal\" -- Is active but not running.\n    | \"dead\" -- Has finished or stopped with an error.\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 840025,
                            "name": "f",
                            "start": 840024,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        }
                    ],
                    "desc": "\nCreates a new coroutine, with body `f`; `f` must be a function. Returns a function that resumes the coroutine each time it is called.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.wrap)",
                    "finish": 840030,
                    "rawdesc": "\nCreates a new coroutine, with body `f`; `f` must be a function. Returns a function that resumes the coroutine each time it is called.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.wrap)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun(...any):...unknown"
                        }
                    ],
                    "start": 840000,
                    "type": "function",
                    "view": "function coroutine.wrap(f: fun(...any):...unknown)\n  -> fun(...any):...unknown"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 840023,
                "start": 840009,
                "type": "setfield"
            }
        ],
        "desc": "\nCreates a new coroutine, with body `f`; `f` must be a function. Returns a function that resumes the coroutine each time it is called.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.wrap)",
        "name": "coroutine.wrap",
        "rawdesc": "\nCreates a new coroutine, with body `f`; `f` must be a function. Returns a function that resumes the coroutine each time it is called.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.wrap)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 930028,
                            "start": 930025,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nSuspends the execution of the calling coroutine.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.yield)",
                    "finish": 930033,
                    "rawdesc": "\nSuspends the execution of the calling coroutine.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.yield)",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 930000,
                    "type": "function",
                    "view": "(async) function coroutine.yield(...any)\n  -> ...any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 930024,
                "start": 930009,
                "type": "setfield"
            }
        ],
        "desc": "\nSuspends the execution of the calling coroutine.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.yield)",
        "name": "coroutine.yield",
        "rawdesc": "\nSuspends the execution of the calling coroutine.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-coroutine.yield)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 130008,
                    "start": 130006,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 130003,
                "start": 130000,
                "type": "setglobal"
            }
        ],
        "name": "d2d",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 6220027,
                            "name": "r",
                            "start": 6220026,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 6220030,
                            "name": "g",
                            "start": 6220029,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 6220033,
                            "name": "b",
                            "start": 6220032,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 6220036,
                            "name": "a",
                            "start": 6220035,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Creates a brush from a color and returns it. D2D colors range from 0 to 1",
                    "finish": 6220041,
                    "rawdesc": "Creates a brush from a color and returns it. D2D colors range from 0 to 1",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 6220000,
                    "type": "function",
                    "view": "function d2d.create_brush(r: number, g: number, b: number, a: number)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 6220025,
                "start": 6220009,
                "type": "setfield"
            }
        ],
        "desc": "Creates a brush from a color and returns it. D2D colors range from 0 to 1",
        "name": "d2d.create_brush",
        "rawdesc": "Creates a brush from a color and returns it. D2D colors range from 0 to 1",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 6650027,
                            "name": "x",
                            "start": 6650026,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6650030,
                            "name": "y",
                            "start": 6650029,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6650039,
                            "name": "radiusX",
                            "start": 6650032,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6650048,
                            "name": "radiusY",
                            "start": 6650041,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6650059,
                            "name": "thickness",
                            "start": 6650050,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 6650066,
                            "name": "brush",
                            "start": 6650061,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Draws the border of an ellipse at the specified coordinates and color.",
                    "finish": 6650071,
                    "rawdesc": "Draws the border of an ellipse at the specified coordinates and color.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 6650000,
                    "type": "function",
                    "view": "function d2d.draw_ellipse(x: integer, y: integer, radiusX: integer, radiusY: integer, thickness: number, brush: integer)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 6650025,
                "start": 6650009,
                "type": "setfield"
            }
        ],
        "desc": "Draws the border of an ellipse at the specified coordinates and color.",
        "name": "d2d.draw_ellipse",
        "rawdesc": "Draws the border of an ellipse at the specified coordinates and color.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 7680030,
                            "name": "destx1",
                            "start": 7680024,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 7680038,
                            "name": "desty1",
                            "start": 7680032,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 7680046,
                            "name": "destx2",
                            "start": 7680040,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 7680054,
                            "name": "desty2",
                            "start": 7680048,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 7680061,
                            "name": "srcx1",
                            "start": 7680056,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 7680068,
                            "name": "srcy1",
                            "start": 7680063,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 7680075,
                            "name": "srcx2",
                            "start": 7680070,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 7680082,
                            "name": "srcy2",
                            "start": 7680077,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 7680091,
                            "name": "opacity",
                            "start": 7680084,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "0: nearest neighbor, 1: linear, -1: don't use.",
                            "finish": 7680106,
                            "name": "interpolation",
                            "rawdesc": "0: nearest neighbor, 1: linear, -1: don't use.",
                            "start": 7680093,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 7680118,
                            "name": "identifier",
                            "start": 7680108,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Draws an image by taking the pixels in the source rectangle of the image, and\ndrawing them to the destination rectangle on the screen.\n\n@*param* `interpolation` โ 0: nearest neighbor, 1: linear, -1: don't use.",
                    "finish": 7680123,
                    "rawdesc": "Draws an image by taking the pixels in the source rectangle of the image, and\ndrawing them to the destination rectangle on the screen.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 7680000,
                    "type": "function",
                    "view": "function d2d.draw_image(destx1: integer, desty1: integer, destx2: integer, desty2: integer, srcx1: integer, srcy1: integer, srcx2: integer, srcy2: integer, opacity: number, interpolation: integer, identifier: number)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 7680023,
                "start": 7680009,
                "type": "setfield"
            }
        ],
        "desc": "Draws an image by taking the pixels in the source rectangle of the image, and\ndrawing them to the destination rectangle on the screen.\n\n@*param* `interpolation` โ 0: nearest neighbor, 1: linear, -1: don't use.",
        "name": "d2d.draw_image",
        "rawdesc": "Draws an image by taking the pixels in the source rectangle of the image, and\ndrawing them to the destination rectangle on the screen.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 6750025,
                            "name": "x1",
                            "start": 6750023,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6750029,
                            "name": "y1",
                            "start": 6750027,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6750033,
                            "name": "x2",
                            "start": 6750031,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6750037,
                            "name": "y2",
                            "start": 6750035,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6750048,
                            "name": "thickness",
                            "start": 6750039,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 6750055,
                            "name": "brush",
                            "start": 6750050,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Draws a line from `(x1, y1)` to `(x2, y2)` in the specified color.",
                    "finish": 6750060,
                    "rawdesc": "Draws a line from `(x1, y1)` to `(x2, y2)` in the specified color.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 6750000,
                    "type": "function",
                    "view": "function d2d.draw_line(x1: integer, y1: integer, x2: integer, y2: integer, thickness: number, brush: integer)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 6750022,
                "start": 6750009,
                "type": "setfield"
            }
        ],
        "desc": "Draws a line from `(x1, y1)` to `(x2, y2)` in the specified color.",
        "name": "d2d.draw_line",
        "rawdesc": "Draws a line from `(x1, y1)` to `(x2, y2)` in the specified color.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 6460030,
                            "name": "x1",
                            "start": 6460028,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6460034,
                            "name": "y1",
                            "start": 6460032,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6460038,
                            "name": "x2",
                            "start": 6460036,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6460042,
                            "name": "y2",
                            "start": 6460040,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6460053,
                            "name": "thickness",
                            "start": 6460044,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 6460060,
                            "name": "brush",
                            "start": 6460055,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Draws the border of a rectangle at the specified coordinates and color.",
                    "finish": 6460065,
                    "rawdesc": "Draws the border of a rectangle at the specified coordinates and color.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 6460000,
                    "type": "function",
                    "view": "function d2d.draw_rectangle(x1: integer, y1: integer, x2: integer, y2: integer, thickness: number, brush: integer)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 6460027,
                "start": 6460009,
                "type": "setfield"
            }
        ],
        "desc": "Draws the border of a rectangle at the specified coordinates and color.",
        "name": "d2d.draw_rectangle",
        "rawdesc": "Draws the border of a rectangle at the specified coordinates and color.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 7410038,
                            "name": "x1",
                            "start": 7410036,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 7410042,
                            "name": "y1",
                            "start": 7410040,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 7410046,
                            "name": "x2",
                            "start": 7410044,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 7410050,
                            "name": "y2",
                            "start": 7410048,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 7410059,
                            "name": "radiusX",
                            "start": 7410052,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 7410068,
                            "name": "radiusY",
                            "start": 7410061,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 7410079,
                            "name": "thickness",
                            "start": 7410070,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 7410086,
                            "name": "brush",
                            "start": 7410081,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Draws the border of a rounded rectangle at the specified coordinates, color\nand radius.",
                    "finish": 7410091,
                    "rawdesc": "Draws the border of a rounded rectangle at the specified coordinates, color\nand radius.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 7410000,
                    "type": "function",
                    "view": "function d2d.draw_rounded_rectangle(x1: integer, y1: integer, x2: integer, y2: integer, radiusX: number, radiusY: number, thickness: number, brush: integer)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 7410035,
                "start": 7410009,
                "type": "setfield"
            }
        ],
        "desc": "Draws the border of a rounded rectangle at the specified coordinates, color\nand radius.",
        "name": "d2d.draw_rounded_rectangle",
        "rawdesc": "Draws the border of a rounded rectangle at the specified coordinates, color\nand radius.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 6930025,
                            "name": "x1",
                            "start": 6930023,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6930029,
                            "name": "y1",
                            "start": 6930027,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6930033,
                            "name": "x2",
                            "start": 6930031,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6930037,
                            "name": "y2",
                            "start": 6930035,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6930043,
                            "name": "text",
                            "start": 6930039,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 6930053,
                            "name": "fontname",
                            "start": 6930045,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 6930063,
                            "name": "fontsize",
                            "start": 6930055,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 6930075,
                            "name": "fontweight",
                            "start": 6930065,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "0: normal, 1: bold, 2: italic, 3: bold + italic.",
                            "finish": 6930086,
                            "name": "fontstyle",
                            "rawdesc": "0: normal, 1: bold, 2: italic, 3: bold + italic.",
                            "start": 6930077,
                            "type": "local",
                            "view": "0|1|2|3"
                        },
                        {
                            "finish": 6930098,
                            "name": "horizalign",
                            "start": 6930088,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6930109,
                            "name": "vertalign",
                            "start": 6930100,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6930118,
                            "name": "options",
                            "start": 6930111,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "pass 0 if you don't know what you're doing",
                            "finish": 6930125,
                            "name": "brush",
                            "rawdesc": "pass 0 if you don't know what you're doing",
                            "start": 6930120,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Draws the text `text` at the specified coordinates, color, font, and\nalignment.\n\n@*param* `fontstyle` โ 0: normal, 1: bold, 2: italic, 3: bold + italic.\n\n@*param* `brush` โ pass 0 if you don't know what you're doing\n\n```lua\nfontstyle:\n    | 0\n    | 1\n    | 2\n    | 3\n```",
                    "finish": 6930130,
                    "rawdesc": "Draws the text `text` at the specified coordinates, color, font, and\nalignment.\n\n```lua\nfontstyle:\n    | 0\n    | 1\n    | 2\n    | 3\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 6930000,
                    "type": "function",
                    "view": "function d2d.draw_text(x1: integer, y1: integer, x2: integer, y2: integer, text: string, fontname: string, fontsize: number, fontweight: number, fontstyle: 0|1|2|3, horizalign: integer, vertalign: integer, options: integer, brush: integer)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 6930022,
                "start": 6930009,
                "type": "setfield"
            }
        ],
        "desc": "Draws the text `text` at the specified coordinates, color, font, and\nalignment.\n\n@*param* `fontstyle` โ 0: normal, 1: bold, 2: italic, 3: bold + italic.\n\n@*param* `brush` โ pass 0 if you don't know what you're doing\n\n```lua\nfontstyle:\n    | 0\n    | 1\n    | 2\n    | 3\n```",
        "name": "d2d.draw_text",
        "rawdesc": "Draws the text `text` at the specified coordinates, color, font, and\nalignment.\n\n```lua\nfontstyle:\n    | 0\n    | 1\n    | 2\n    | 3\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 7910032,
                            "name": "width",
                            "start": 7910027,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 7910040,
                            "name": "height",
                            "start": 7910034,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 7910050,
                            "name": "callback",
                            "start": 7910042,
                            "type": "local",
                            "view": "fun()"
                        }
                    ],
                    "desc": "Draws to an image and returns its identifier",
                    "finish": 7910055,
                    "rawdesc": "Draws to an image and returns its identifier",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 7910000,
                    "type": "function",
                    "view": "function d2d.draw_to_image(width: integer, height: integer, callback: fun())\n  -> number"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 7910026,
                "start": 7910009,
                "type": "setfield"
            }
        ],
        "desc": "Draws to an image and returns its identifier",
        "name": "d2d.draw_to_image",
        "rawdesc": "Draws to an image and returns its identifier",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 6550027,
                            "name": "x",
                            "start": 6550026,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6550030,
                            "name": "y",
                            "start": 6550029,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6550039,
                            "name": "radiusX",
                            "start": 6550032,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6550048,
                            "name": "radiusY",
                            "start": 6550041,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6550055,
                            "name": "brush",
                            "start": 6550050,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Draws a filled in ellipse at the specified coordinates and color.",
                    "finish": 6550060,
                    "rawdesc": "Draws a filled in ellipse at the specified coordinates and color.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 6550000,
                    "type": "function",
                    "view": "function d2d.fill_ellipse(x: integer, y: integer, radiusX: integer, radiusY: integer, brush: integer)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 6550025,
                "start": 6550009,
                "type": "setfield"
            }
        ],
        "desc": "Draws a filled in ellipse at the specified coordinates and color.",
        "name": "d2d.fill_ellipse",
        "rawdesc": "Draws a filled in ellipse at the specified coordinates and color.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 6360030,
                            "name": "x1",
                            "start": 6360028,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6360034,
                            "name": "y1",
                            "start": 6360032,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6360038,
                            "name": "x2",
                            "start": 6360036,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6360042,
                            "name": "y2",
                            "start": 6360040,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6360049,
                            "name": "brush",
                            "start": 6360044,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Draws a filled in rectangle at the specified coordinates and color.",
                    "finish": 6360054,
                    "rawdesc": "Draws a filled in rectangle at the specified coordinates and color.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 6360000,
                    "type": "function",
                    "view": "function d2d.fill_rectangle(x1: integer, y1: integer, x2: integer, y2: integer, brush: integer)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 6360027,
                "start": 6360009,
                "type": "setfield"
            }
        ],
        "desc": "Draws a filled in rectangle at the specified coordinates and color.",
        "name": "d2d.fill_rectangle",
        "rawdesc": "Draws a filled in rectangle at the specified coordinates and color.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 7280038,
                            "name": "x1",
                            "start": 7280036,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 7280042,
                            "name": "y1",
                            "start": 7280040,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 7280046,
                            "name": "x2",
                            "start": 7280044,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 7280050,
                            "name": "y2",
                            "start": 7280048,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 7280059,
                            "name": "radiusX",
                            "start": 7280052,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 7280068,
                            "name": "radiusY",
                            "start": 7280061,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 7280075,
                            "name": "brush",
                            "start": 7280070,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Draws a filled in rounded rectangle at the specified coordinates, color and\nradius.",
                    "finish": 7280080,
                    "rawdesc": "Draws a filled in rounded rectangle at the specified coordinates, color and\nradius.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 7280000,
                    "type": "function",
                    "view": "function d2d.fill_rounded_rectangle(x1: integer, y1: integer, x2: integer, y2: integer, radiusX: number, radiusY: number, brush: integer)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 7280035,
                "start": 7280009,
                "type": "setfield"
            }
        ],
        "desc": "Draws a filled in rounded rectangle at the specified coordinates, color and\nradius.",
        "name": "d2d.fill_rounded_rectangle",
        "rawdesc": "Draws a filled in rounded rectangle at the specified coordinates, color and\nradius.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 6270029,
                            "name": "brush",
                            "start": 6270024,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Frees a brush. It is a good practice to free all brushes after you are done\nusing them",
                    "finish": 6270034,
                    "rawdesc": "Frees a brush. It is a good practice to free all brushes after you are done\nusing them",
                    "start": 6270000,
                    "type": "function",
                    "view": "function d2d.free_brush(brush: integer)"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 6270023,
                "start": 6270009,
                "type": "setfield"
            }
        ],
        "desc": "Frees a brush. It is a good practice to free all brushes after you are done\nusing them",
        "name": "d2d.free_brush",
        "rawdesc": "Frees a brush. It is a good practice to free all brushes after you are done\nusing them",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 7520034,
                            "name": "identifier",
                            "start": 7520024,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Frees the image at `identifier`.",
                    "finish": 7520039,
                    "rawdesc": "Frees the image at `identifier`.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 7520000,
                    "type": "function",
                    "view": "function d2d.free_image(identifier: number)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 7520023,
                "start": 7520009,
                "type": "setfield"
            }
        ],
        "desc": "Frees the image at `identifier`.",
        "name": "d2d.free_image",
        "rawdesc": "Frees the image at `identifier`.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 7740038,
                            "name": "identifier",
                            "start": 7740028,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Returns the width and height of the image at `identifier`.",
                    "finish": 7740043,
                    "rawdesc": "Returns the width and height of the image at `identifier`.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "{ width: integer, height: integer }"
                        }
                    ],
                    "start": 7740000,
                    "type": "function",
                    "view": "function d2d.get_image_info(identifier: number)\n  -> { width: integer, height: integer }"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 7740027,
                "start": 7740009,
                "type": "setfield"
            }
        ],
        "desc": "Returns the width and height of the image at `identifier`.",
        "name": "d2d.get_image_info",
        "rawdesc": "Returns the width and height of the image at `identifier`.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 7020031,
                            "name": "text",
                            "start": 7020027,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 7020041,
                            "name": "fontname",
                            "start": 7020033,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 7020051,
                            "name": "fontsize",
                            "start": 7020043,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 7020062,
                            "name": "max_width",
                            "start": 7020053,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 7020074,
                            "name": "max_height",
                            "start": 7020064,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Returns the width and height of the specified text.",
                    "finish": 7020079,
                    "rawdesc": "Returns the width and height of the specified text.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "{ width: integer, height: integer }"
                        }
                    ],
                    "start": 7020000,
                    "type": "function",
                    "view": "function d2d.get_text_size(text: string, fontname: string, fontsize: number, max_width: number, max_height: number)\n  -> { width: integer, height: integer }"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 7020026,
                "start": 7020009,
                "type": "setfield"
            }
        ],
        "desc": "Returns the width and height of the specified text.",
        "name": "d2d.get_text_size",
        "rawdesc": "Returns the width and height of the specified text.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 7470028,
                            "name": "path",
                            "start": 7470024,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Loads an image file from `path` which you can then access through\n`identifier`.",
                    "finish": 7470033,
                    "rawdesc": "Loads an image file from `path` which you can then access through\n`identifier`.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 7470000,
                    "type": "function",
                    "view": "function d2d.load_image(path: string)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 7470023,
                "start": 7470009,
                "type": "setfield"
            }
        ],
        "desc": "Loads an image file from `path` which you can then access through\n`identifier`.",
        "name": "d2d.load_image",
        "rawdesc": "Loads an image file from `path` which you can then access through\n`identifier`.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Pops the most recent clip off the clip stack.",
                    "finish": 7160027,
                    "rawdesc": "Pops the most recent clip off the clip stack.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 7160000,
                    "type": "function",
                    "view": "function d2d.pop_clip()\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 7160021,
                "start": 7160009,
                "type": "setfield"
            }
        ],
        "desc": "Pops the most recent clip off the clip stack.",
        "name": "d2d.pop_clip",
        "rawdesc": "Pops the most recent clip off the clip stack.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 7120025,
                            "name": "x1",
                            "start": 7120023,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 7120029,
                            "name": "y1",
                            "start": 7120027,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 7120033,
                            "name": "x2",
                            "start": 7120031,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 7120037,
                            "name": "y2",
                            "start": 7120035,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Specifies a rectangle to which all subsequent drawing operations are clipped.\nThis clip is put onto a stack. It can then be popped off the stack with\n`wgui.d2d_pop_clip`.",
                    "finish": 7120042,
                    "rawdesc": "Specifies a rectangle to which all subsequent drawing operations are clipped.\nThis clip is put onto a stack. It can then be popped off the stack with\n`wgui.d2d_pop_clip`.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 7120000,
                    "type": "function",
                    "view": "function d2d.push_clip(x1: integer, y1: integer, x2: integer, y2: integer)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 7120022,
                "start": 7120009,
                "type": "setfield"
            }
        ],
        "desc": "Specifies a rectangle to which all subsequent drawing operations are clipped.\nThis clip is put onto a stack. It can then be popped off the stack with\n`wgui.d2d_pop_clip`.",
        "name": "d2d.push_clip",
        "rawdesc": "Specifies a rectangle to which all subsequent drawing operations are clipped.\nThis clip is put onto a stack. It can then be popped off the stack with\n`wgui.d2d_pop_clip`.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 7840036,
                            "name": "mode",
                            "start": 7840032,
                            "type": "local",
                            "view": "0|1|4294967295"
                        }
                    ],
                    "desc": "Sets the antialiasing mode. More info\n[here](https://learn.microsoft.com/en-us/windows/win32/api/d2d1/ne-d2d1-d2d1_antialias_mode).\n\n```lua\nmode:\n    | 0\n    | 1\n    | 4294967295\n```",
                    "finish": 7840041,
                    "rawdesc": "Sets the antialiasing mode. More info\n[here](https://learn.microsoft.com/en-us/windows/win32/api/d2d1/ne-d2d1-d2d1_antialias_mode).\n\n```lua\nmode:\n    | 0\n    | 1\n    | 4294967295\n```",
                    "start": 7840000,
                    "type": "function",
                    "view": "function d2d.set_antialias_mode(mode: 0|1|4294967295)"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 7840031,
                "start": 7840009,
                "type": "setfield"
            }
        ],
        "desc": "Sets the antialiasing mode. More info\n[here](https://learn.microsoft.com/en-us/windows/win32/api/d2d1/ne-d2d1-d2d1_antialias_mode).\n\n```lua\nmode:\n    | 0\n    | 1\n    | 4294967295\n```",
        "name": "d2d.set_antialias_mode",
        "rawdesc": "Sets the antialiasing mode. More info\n[here](https://learn.microsoft.com/en-us/windows/win32/api/d2d1/ne-d2d1-d2d1_antialias_mode).\n\n```lua\nmode:\n    | 0\n    | 1\n    | 4294967295\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 7790041,
                            "name": "mode",
                            "start": 7790037,
                            "type": "local",
                            "view": "0|1|2|3|4294967295"
                        }
                    ],
                    "desc": "Sets the text antialiasing mode. More info\n[here](https://learn.microsoft.com/en-us/windows/win32/api/d2d1/ne-d2d1-d2d1_text_antialias_mode).\n\n```lua\nmode:\n    | 0\n    | 1\n    | 2\n    | 3\n    | 4294967295\n```",
                    "finish": 7790046,
                    "rawdesc": "Sets the text antialiasing mode. More info\n[here](https://learn.microsoft.com/en-us/windows/win32/api/d2d1/ne-d2d1-d2d1_text_antialias_mode).\n\n```lua\nmode:\n    | 0\n    | 1\n    | 2\n    | 3\n    | 4294967295\n```",
                    "start": 7790000,
                    "type": "function",
                    "view": "function d2d.set_text_antialias_mode(mode: 0|1|2|3|4294967295)"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 7790036,
                "start": 7790009,
                "type": "setfield"
            }
        ],
        "desc": "Sets the text antialiasing mode. More info\n[here](https://learn.microsoft.com/en-us/windows/win32/api/d2d1/ne-d2d1-d2d1_text_antialias_mode).\n\n```lua\nmode:\n    | 0\n    | 1\n    | 2\n    | 3\n    | 4294967295\n```",
        "name": "d2d.set_text_antialias_mode",
        "rawdesc": "Sets the text antialiasing mode. More info\n[here](https://learn.microsoft.com/en-us/windows/win32/api/d2d1/ne-d2d1-d2d1_text_antialias_mode).\n\n```lua\nmode:\n    | 0\n    | 1\n    | 2\n    | 3\n    | 4294967295\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 80010,
                    "start": 80008,
                    "type": "table",
                    "view": "debuglib"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 80005,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug)\n",
        "name": "debug",
        "rawdesc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug)\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nEnters an interactive mode with the user, running each string that the user enters.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.debug)",
                    "finish": 330026,
                    "rawdesc": "\nEnters an interactive mode with the user, running each string that the user enters.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.debug)",
                    "start": 330000,
                    "type": "function",
                    "view": "function debug.debug()"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 330020,
                "start": 330009,
                "type": "setfield"
            }
        ],
        "desc": "\nEnters an interactive mode with the user, running each string that the user enters.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.debug)",
        "name": "debug.debug",
        "rawdesc": "\nEnters an interactive mode with the user, running each string that the user enters.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.debug)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 440024,
                            "name": "o",
                            "start": 440023,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns the environment of object `o` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getfenv)",
                    "finish": 440029,
                    "rawdesc": "\nReturns the environment of object `o` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getfenv)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 440000,
                    "type": "function",
                    "view": "function debug.getfenv(o: any)\n  -> table"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 440022,
                "start": 440009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the environment of object `o` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getfenv)",
        "name": "debug.getfenv",
        "rawdesc": "\nReturns the environment of object `o` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getfenv)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 560025,
                            "name": "co",
                            "start": 560023,
                            "type": "local",
                            "view": "thread?"
                        }
                    ],
                    "desc": "\nReturns the current hook settings of the thread.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.gethook)",
                    "finish": 560030,
                    "rawdesc": "\nReturns the current hook settings of the thread.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.gethook)",
                    "returns": [
                        {
                            "name": "hook",
                            "type": "function.return",
                            "view": "function"
                        },
                        {
                            "name": "mask",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "count",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 560000,
                    "type": "function",
                    "view": "function debug.gethook(co?: thread)\n  -> hook: function\n  2. mask: string\n  3. count: integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 560022,
                "start": 560009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the current hook settings of the thread.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.gethook)",
        "name": "debug.gethook",
        "rawdesc": "\nReturns the current hook settings of the thread.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.gethook)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 790029,
                            "name": "thread",
                            "start": 790023,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 790032,
                            "name": "f",
                            "start": 790031,
                            "type": "local",
                            "view": "integer|fun(...any):...unknown"
                        },
                        {
                            "finish": 790038,
                            "name": "what",
                            "start": 790034,
                            "type": "local",
                            "view": "(string|\"L\"|\"S\"|\"f\"|\"l\"...(+4))?"
                        }
                    ],
                    "desc": "\nReturns a table with information about a function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getinfo)\n\n\n---\n\n```lua\nwhat:\n   +> \"n\" -- `name` and `namewhat`\n   +> \"S\" -- `source`, `short_src`, `linedefined`, `lastlinedefined`, and `what`\n   +> \"l\" -- `currentline`\n   +> \"t\" -- `istailcall`\n   +> \"u\" -- `nups`, `nparams`, and `isvararg`\n   +> \"f\" -- `func`\n   +> \"r\" -- `ftransfer` and `ntransfer`\n   +> \"L\" -- `activelines`\n```",
                    "finish": 790043,
                    "rawdesc": "\nReturns a table with information about a function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getinfo)\n\n\n---\n\n```lua\nwhat:\n   +> \"n\" -- `name` and `namewhat`\n   +> \"S\" -- `source`, `short_src`, `linedefined`, `lastlinedefined`, and `what`\n   +> \"l\" -- `currentline`\n   +> \"t\" -- `istailcall`\n   +> \"u\" -- `nups`, `nparams`, and `isvararg`\n   +> \"f\" -- `func`\n   +> \"r\" -- `ftransfer` and `ntransfer`\n   +> \"L\" -- `activelines`\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "debuginfo"
                        }
                    ],
                    "start": 790000,
                    "type": "function",
                    "view": "function debug.getinfo(thread: thread, f: integer|fun(...any):...unknown, what?: string|\"L\"|\"S\"|\"f\"|\"l\"...(+4))\n  -> debuginfo"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 790022,
                "start": 790009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a table with information about a function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getinfo)\n\n\n---\n\n```lua\nwhat:\n   +> \"n\" -- `name` and `namewhat`\n   +> \"S\" -- `source`, `short_src`, `linedefined`, `lastlinedefined`, and `what`\n   +> \"l\" -- `currentline`\n   +> \"t\" -- `istailcall`\n   +> \"u\" -- `nups`, `nparams`, and `isvararg`\n   +> \"f\" -- `func`\n   +> \"r\" -- `ftransfer` and `ntransfer`\n   +> \"L\" -- `activelines`\n```",
        "name": "debug.getinfo",
        "rawdesc": "\nReturns a table with information about a function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getinfo)\n\n\n---\n\n```lua\nwhat:\n   +> \"n\" -- `name` and `namewhat`\n   +> \"S\" -- `source`, `short_src`, `linedefined`, `lastlinedefined`, and `what`\n   +> \"l\" -- `currentline`\n   +> \"t\" -- `istailcall`\n   +> \"u\" -- `nups`, `nparams`, and `isvararg`\n   +> \"f\" -- `func`\n   +> \"r\" -- `ftransfer` and `ntransfer`\n   +> \"L\" -- `activelines`\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 930030,
                            "name": "thread",
                            "start": 930024,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 930033,
                            "name": "f",
                            "start": 930032,
                            "type": "local",
                            "view": "integer|fun(...any):...unknown"
                        },
                        {
                            "finish": 930040,
                            "name": "index",
                            "start": 930035,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns the name and the value of the local variable with index `local` of the function at level `f` of the stack.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getlocal)",
                    "finish": 930045,
                    "rawdesc": "\nReturns the name and the value of the local variable with index `local` of the function at level `f` of the stack.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getlocal)",
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "value",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 930000,
                    "type": "function",
                    "view": "function debug.getlocal(thread: thread, f: integer|fun(...any):...unknown, index: integer)\n  -> name: string\n  2. value: any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 930023,
                "start": 930009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the name and the value of the local variable with index `local` of the function at level `f` of the stack.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getlocal)",
        "name": "debug.getlocal",
        "rawdesc": "\nReturns the name and the value of the local variable with index `local` of the function at level `f` of the stack.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getlocal)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1030034,
                            "name": "object",
                            "start": 1030028,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns the metatable of the given value.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getmetatable)",
                    "finish": 1030039,
                    "rawdesc": "\nReturns the metatable of the given value.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getmetatable)",
                    "returns": [
                        {
                            "name": "metatable",
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 1030000,
                    "type": "function",
                    "view": "function debug.getmetatable(object: any)\n  -> metatable: table"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1030027,
                "start": 1030009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the metatable of the given value.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getmetatable)",
        "name": "debug.getmetatable",
        "rawdesc": "\nReturns the metatable of the given value.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getmetatable)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nReturns the registry table.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getregistry)",
                    "finish": 1120032,
                    "rawdesc": "\nReturns the registry table.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getregistry)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 1120000,
                    "type": "function",
                    "view": "function debug.getregistry()\n  -> table"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1120026,
                "start": 1120009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the registry table.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getregistry)",
        "name": "debug.getregistry",
        "rawdesc": "\nReturns the registry table.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getregistry)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1240027,
                            "name": "f",
                            "start": 1240026,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 1240031,
                            "name": "up",
                            "start": 1240029,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns the name and the value of the upvalue with index `up` of the function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getupvalue)",
                    "finish": 1240036,
                    "rawdesc": "\nReturns the name and the value of the upvalue with index `up` of the function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getupvalue)",
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "value",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 1240000,
                    "type": "function",
                    "view": "function debug.getupvalue(f: fun(...any):...unknown, up: integer)\n  -> name: string\n  2. value: any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1240025,
                "start": 1240009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the name and the value of the upvalue with index `up` of the function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getupvalue)",
        "name": "debug.getupvalue",
        "rawdesc": "\nReturns the name and the value of the upvalue with index `up` of the function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getupvalue)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1390029,
                            "name": "u",
                            "start": 1390028,
                            "type": "local",
                            "view": "userdata"
                        },
                        {
                            "finish": 1390032,
                            "name": "n",
                            "start": 1390031,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the `n`-th user value associated\nto the userdata `u` plus a boolean,\n`false` if the userdata does not have that value.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getuservalue)",
                    "finish": 1390037,
                    "rawdesc": "\nReturns the `n`-th user value associated\nto the userdata `u` plus a boolean,\n`false` if the userdata does not have that value.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getuservalue)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 1390000,
                    "type": "function",
                    "view": "function debug.getuservalue(u: userdata, n?: integer)\n  -> any\n  2. boolean"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1390027,
                "start": 1390009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the `n`-th user value associated\nto the userdata `u` plus a boolean,\n`false` if the userdata does not have that value.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getuservalue)",
        "name": "debug.getuservalue",
        "rawdesc": "\nReturns the `n`-th user value associated\nto the userdata `u` plus a boolean,\n`false` if the userdata does not have that value.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.getuservalue)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1540035,
                            "name": "limit",
                            "start": 1540030,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\n### **Deprecated in `Lua 5.4.2`**\n\nSets a new limit for the C stack. This limit controls how deeply nested calls can go in Lua, with the intent of avoiding a stack overflow.\n\nIn case of success, this function returns the old limit. In case of error, it returns `false`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setcstacklimit)",
                    "finish": 1540040,
                    "rawdesc": "\n### **Deprecated in `Lua 5.4.2`**\n\nSets a new limit for the C stack. This limit controls how deeply nested calls can go in Lua, with the intent of avoiding a stack overflow.\n\nIn case of success, this function returns the old limit. In case of error, it returns `false`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setcstacklimit)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean|integer"
                        }
                    ],
                    "start": 1540000,
                    "type": "function",
                    "view": "function debug.setcstacklimit(limit: integer)\n  -> boolean|integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1540029,
                "start": 1540009,
                "type": "setfield"
            }
        ],
        "desc": "\n### **Deprecated in `Lua 5.4.2`**\n\nSets a new limit for the C stack. This limit controls how deeply nested calls can go in Lua, with the intent of avoiding a stack overflow.\n\nIn case of success, this function returns the old limit. In case of error, it returns `false`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setcstacklimit)",
        "name": "debug.setcstacklimit",
        "rawdesc": "\n### **Deprecated in `Lua 5.4.2`**\n\nSets a new limit for the C stack. This limit controls how deeply nested calls can go in Lua, with the intent of avoiding a stack overflow.\n\nIn case of success, this function returns the old limit. In case of error, it returns `false`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setcstacklimit)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1660029,
                            "name": "object",
                            "start": 1660023,
                            "type": "local",
                            "view": "<T>"
                        },
                        {
                            "finish": 1660034,
                            "name": "env",
                            "start": 1660031,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nSets the environment of the given `object` to the given `table` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setfenv)",
                    "finish": 1660039,
                    "rawdesc": "\nSets the environment of the given `object` to the given `table` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setfenv)",
                    "returns": [
                        {
                            "name": "object",
                            "type": "function.return",
                            "view": "<T>"
                        }
                    ],
                    "start": 1660000,
                    "type": "function",
                    "view": "function debug.setfenv(object: <T>, env: table)\n  -> object: <T>"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1660022,
                "start": 1660009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets the environment of the given `object` to the given `table` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setfenv)",
        "name": "debug.setfenv",
        "rawdesc": "\nSets the environment of the given `object` to the given `table` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setfenv)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1850029,
                            "name": "thread",
                            "start": 1850023,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 1850035,
                            "name": "hook",
                            "start": 1850031,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 1850041,
                            "name": "mask",
                            "start": 1850037,
                            "type": "local",
                            "view": "string|\"c\"|\"l\"|\"r\""
                        },
                        {
                            "finish": 1850048,
                            "name": "count",
                            "start": 1850043,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nSets the given function as a hook.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.sethook)\n\n\n---\n\n```lua\nmask:\n   +> \"c\" -- Calls hook when Lua calls a function.\n   +> \"r\" -- Calls hook when Lua returns from a function.\n   +> \"l\" -- Calls hook when Lua enters a new line of code.\n```",
                    "finish": 1850053,
                    "rawdesc": "\nSets the given function as a hook.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.sethook)\n\n\n---\n\n```lua\nmask:\n   +> \"c\" -- Calls hook when Lua calls a function.\n   +> \"r\" -- Calls hook when Lua returns from a function.\n   +> \"l\" -- Calls hook when Lua enters a new line of code.\n```",
                    "start": 1850000,
                    "type": "function",
                    "view": "function debug.sethook(thread: thread, hook: fun(...any):...unknown, mask: string|\"c\"|\"l\"|\"r\", count?: integer)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1850022,
                "start": 1850009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets the given function as a hook.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.sethook)\n\n\n---\n\n```lua\nmask:\n   +> \"c\" -- Calls hook when Lua calls a function.\n   +> \"r\" -- Calls hook when Lua returns from a function.\n   +> \"l\" -- Calls hook when Lua enters a new line of code.\n```",
        "name": "debug.sethook",
        "rawdesc": "\nSets the given function as a hook.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.sethook)\n\n\n---\n\n```lua\nmask:\n   +> \"c\" -- Calls hook when Lua calls a function.\n   +> \"r\" -- Calls hook when Lua returns from a function.\n   +> \"l\" -- Calls hook when Lua enters a new line of code.\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1980030,
                            "name": "thread",
                            "start": 1980024,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 1980037,
                            "name": "level",
                            "start": 1980032,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 1980044,
                            "name": "index",
                            "start": 1980039,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 1980051,
                            "name": "value",
                            "start": 1980046,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nAssigns the `value` to the local variable with index `local` of the function at `level` of the stack.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setlocal)",
                    "finish": 1980056,
                    "rawdesc": "\nAssigns the `value` to the local variable with index `local` of the function at `level` of the stack.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setlocal)",
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1980000,
                    "type": "function",
                    "view": "function debug.setlocal(thread: thread, level: integer, index: integer, value: any)\n  -> name: string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1980023,
                "start": 1980009,
                "type": "setfield"
            }
        ],
        "desc": "\nAssigns the `value` to the local variable with index `local` of the function at `level` of the stack.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setlocal)",
        "name": "debug.setlocal",
        "rawdesc": "\nAssigns the `value` to the local variable with index `local` of the function at `level` of the stack.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setlocal)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2090033,
                            "name": "value",
                            "start": 2090028,
                            "type": "local",
                            "view": "<T>"
                        },
                        {
                            "finish": 2090039,
                            "name": "meta",
                            "start": 2090035,
                            "type": "local",
                            "view": "table?"
                        }
                    ],
                    "desc": "\nSets the metatable for the given value to the given table (which can be `nil`).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setmetatable)",
                    "finish": 2090044,
                    "rawdesc": "\nSets the metatable for the given value to the given table (which can be `nil`).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setmetatable)",
                    "returns": [
                        {
                            "name": "value",
                            "type": "function.return",
                            "view": "<T>"
                        }
                    ],
                    "start": 2090000,
                    "type": "function",
                    "view": "function debug.setmetatable(value: <T>, meta?: table)\n  -> value: <T>"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 2090027,
                "start": 2090009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets the metatable for the given value to the given table (which can be `nil`).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setmetatable)",
        "name": "debug.setmetatable",
        "rawdesc": "\nSets the metatable for the given value to the given table (which can be `nil`).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setmetatable)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2200027,
                            "name": "f",
                            "start": 2200026,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 2200031,
                            "name": "up",
                            "start": 2200029,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 2200038,
                            "name": "value",
                            "start": 2200033,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nAssigns the `value` to the upvalue with index `up` of the function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setupvalue)",
                    "finish": 2200043,
                    "rawdesc": "\nAssigns the `value` to the upvalue with index `up` of the function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setupvalue)",
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 2200000,
                    "type": "function",
                    "view": "function debug.setupvalue(f: fun(...any):...unknown, up: integer, value: any)\n  -> name: string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 2200025,
                "start": 2200009,
                "type": "setfield"
            }
        ],
        "desc": "\nAssigns the `value` to the upvalue with index `up` of the function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setupvalue)",
        "name": "debug.setupvalue",
        "rawdesc": "\nAssigns the `value` to the upvalue with index `up` of the function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setupvalue)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2340033,
                            "name": "udata",
                            "start": 2340028,
                            "type": "local",
                            "view": "userdata"
                        },
                        {
                            "finish": 2340040,
                            "name": "value",
                            "start": 2340035,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2340043,
                            "name": "n",
                            "start": 2340042,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nSets the given `value` as\nthe `n`-th user value associated to the given `udata`.\n`udata` must be a full userdata.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setuservalue)",
                    "finish": 2340048,
                    "rawdesc": "\nSets the given `value` as\nthe `n`-th user value associated to the given `udata`.\n`udata` must be a full userdata.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setuservalue)",
                    "returns": [
                        {
                            "name": "udata",
                            "type": "function.return",
                            "view": "userdata"
                        }
                    ],
                    "start": 2340000,
                    "type": "function",
                    "view": "function debug.setuservalue(udata: userdata, value: any, n?: integer)\n  -> udata: userdata"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 2340027,
                "start": 2340009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets the given `value` as\nthe `n`-th user value associated to the given `udata`.\n`udata` must be a full userdata.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setuservalue)",
        "name": "debug.setuservalue",
        "rawdesc": "\nSets the given `value` as\nthe `n`-th user value associated to the given `udata`.\n`udata` must be a full userdata.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.setuservalue)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2470031,
                            "name": "thread",
                            "start": 2470025,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 2470040,
                            "name": "message",
                            "start": 2470033,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2470047,
                            "name": "level",
                            "start": 2470042,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns a string with a traceback of the call stack. The optional message string is appended at the beginning of the traceback.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.traceback)",
                    "finish": 2470052,
                    "rawdesc": "\nReturns a string with a traceback of the call stack. The optional message string is appended at the beginning of the traceback.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.traceback)",
                    "returns": [
                        {
                            "name": "message",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 2470000,
                    "type": "function",
                    "view": "function debug.traceback(thread: thread, message?: any, level?: integer)\n  -> message: string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 2470024,
                "start": 2470009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string with a traceback of the call stack. The optional message string is appended at the beginning of the traceback.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.traceback)",
        "name": "debug.traceback",
        "rawdesc": "\nReturns a string with a traceback of the call stack. The optional message string is appended at the beginning of the traceback.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.traceback)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2590026,
                            "name": "f",
                            "start": 2590025,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 2590029,
                            "name": "n",
                            "start": 2590028,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns a unique identifier (as a light userdata) for the upvalue numbered `n` from the given function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.upvalueid)",
                    "finish": 2590034,
                    "rawdesc": "\nReturns a unique identifier (as a light userdata) for the upvalue numbered `n` from the given function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.upvalueid)",
                    "returns": [
                        {
                            "name": "id",
                            "type": "function.return",
                            "view": "lightuserdata"
                        }
                    ],
                    "start": 2590000,
                    "type": "function",
                    "view": "function debug.upvalueid(f: fun(...any):...unknown, n: integer)\n  -> id: lightuserdata"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 2590024,
                "start": 2590009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a unique identifier (as a light userdata) for the upvalue numbered `n` from the given function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.upvalueid)",
        "name": "debug.upvalueid",
        "rawdesc": "\nReturns a unique identifier (as a light userdata) for the upvalue numbered `n` from the given function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.upvalueid)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2710029,
                            "name": "f1",
                            "start": 2710027,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 2710033,
                            "name": "n1",
                            "start": 2710031,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 2710037,
                            "name": "f2",
                            "start": 2710035,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 2710041,
                            "name": "n2",
                            "start": 2710039,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nMake the `n1`-th upvalue of the Lua closure `f1` refer to the `n2`-th upvalue of the Lua closure `f2`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.upvaluejoin)",
                    "finish": 2710046,
                    "rawdesc": "\nMake the `n1`-th upvalue of the Lua closure `f1` refer to the `n2`-th upvalue of the Lua closure `f2`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.upvaluejoin)",
                    "start": 2710000,
                    "type": "function",
                    "view": "function debug.upvaluejoin(f1: fun(...any):...unknown, n1: integer, f2: fun(...any):...unknown, n2: integer)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 2710026,
                "start": 2710009,
                "type": "setfield"
            }
        ],
        "desc": "\nMake the `n1`-th upvalue of the Lua closure `f1` refer to the `n2`-th upvalue of the Lua closure `f2`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.upvaluejoin)",
        "name": "debug.upvaluejoin",
        "rawdesc": "\nMake the `n1`-th upvalue of the Lua closure `f1` refer to the `n2`-th upvalue of the Lua closure `f2`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-debug.upvaluejoin)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 500024,
                            "name": "filename",
                            "start": 500016,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nOpens the named file and executes its content as a Lua chunk. When called without arguments, `dofile` executes the content of the standard input (`stdin`). Returns all values returned by the chunk. In case of errors, `dofile` propagates the error to its caller. (That is, `dofile` does not run in protected mode.)\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-dofile)",
                    "finish": 500029,
                    "rawdesc": "\nOpens the named file and executes its content as a Lua chunk. When called without arguments, `dofile` executes the content of the standard input (`stdin`). Returns all values returned by the chunk. In case of errors, `dofile` propagates the error to its caller. (That is, `dofile` does not run in protected mode.)\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-dofile)",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 500000,
                    "type": "function",
                    "view": "function dofile(filename?: string)\n  -> ...any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 500015,
                "start": 500009,
                "type": "setglobal"
            }
        ],
        "desc": "\nOpens the named file and executes its content as a Lua chunk. When called without arguments, `dofile` executes the content of the standard input (`stdin`). Returns all values returned by the chunk. In case of errors, `dofile` propagates the error to its caller. (That is, `dofile` does not run in protected mode.)\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-dofile)",
        "name": "dofile",
        "rawdesc": "\nOpens the named file and executes its content as a Lua chunk. When called without arguments, `dofile` executes the content of the standard input (`stdin`). Returns all values returned by the chunk. In case of errors, `dofile` propagates the error to its caller. (That is, `dofile` does not run in protected mode.)\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-dofile)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 100008,
                    "start": 100006,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 100003,
                "start": 100000,
                "type": "setglobal"
            }
        ],
        "name": "emu",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The function to be called every input frame. It receives an argument that seems to always be `0`.",
                            "finish": 800022,
                            "name": "f",
                            "rawdesc": "The function to be called every input frame. It receives an argument that seems to always be `0`.",
                            "start": 800021,
                            "type": "local",
                            "view": "fun(a?: integer):nil"
                        },
                        {
                            "desc": "If true, then unregister the function `f`.",
                            "finish": 800034,
                            "name": "unregister",
                            "rawdesc": "If true, then unregister the function `f`.",
                            "start": 800024,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Calls the function `f` every input frame. The function `f` receives an\nargument that seems to always be `0`. If `unregister` is set to true, the\nfunction `f` will no longer be called when this event occurs, but it will\nerror if you never registered the function. Alias for `joypad.register`.\n\n@*param* `f` โ The function to be called every input frame. It receives an argument that seems to always be `0`.\n\n@*param* `unregister` โ If true, then unregister the function `f`.",
                    "finish": 800039,
                    "rawdesc": "Calls the function `f` every input frame. The function `f` receives an\nargument that seems to always be `0`. If `unregister` is set to true, the\nfunction `f` will no longer be called when this event occurs, but it will\nerror if you never registered the function. Alias for `joypad.register`.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 800000,
                    "type": "function",
                    "view": "function emu.atinput(f: fun(a?: integer):nil, unregister?: boolean)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 800020,
                "start": 800009,
                "type": "setfield"
            }
        ],
        "desc": "Calls the function `f` every input frame. The function `f` receives an\nargument that seems to always be `0`. If `unregister` is set to true, the\nfunction `f` will no longer be called when this event occurs, but it will\nerror if you never registered the function. Alias for `joypad.register`.\n\n@*param* `f` โ The function to be called every input frame. It receives an argument that seems to always be `0`.\n\n@*param* `unregister` โ If true, then unregister the function `f`.",
        "name": "emu.atinput",
        "rawdesc": "Calls the function `f` every input frame. The function `f` receives an\nargument that seems to always be `0`. If `unregister` is set to true, the\nfunction `f` will no longer be called when this event occurs, but it will\nerror if you never registered the function. Alias for `joypad.register`.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The function to be called constantly.",
                            "finish": 1050025,
                            "name": "f",
                            "rawdesc": "The function to be called constantly.",
                            "start": 1050024,
                            "type": "local",
                            "view": "fun():nil"
                        },
                        {
                            "desc": "If true, then unregister the function `f`.",
                            "finish": 1050037,
                            "name": "unregister",
                            "rawdesc": "If true, then unregister the function `f`.",
                            "start": 1050027,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Calls the function `f` constantly, even when the emulator is paused. If\n`unregister` is set to true, the function `f` will no longer be called when\nthis event occurs, but it will error if you never registered the function.\n\n@*param* `f` โ The function to be called constantly.\n\n@*param* `unregister` โ If true, then unregister the function `f`.",
                    "finish": 1050042,
                    "rawdesc": "Calls the function `f` constantly, even when the emulator is paused. If\n`unregister` is set to true, the function `f` will no longer be called when\nthis event occurs, but it will error if you never registered the function.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 1050000,
                    "type": "function",
                    "view": "function emu.atinterval(f: fun():nil, unregister?: boolean)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 1050023,
                "start": 1050009,
                "type": "setfield"
            }
        ],
        "desc": "Calls the function `f` constantly, even when the emulator is paused. If\n`unregister` is set to true, the function `f` will no longer be called when\nthis event occurs, but it will error if you never registered the function.\n\n@*param* `f` โ The function to be called constantly.\n\n@*param* `unregister` โ If true, then unregister the function `f`.",
        "name": "emu.atinterval",
        "rawdesc": "Calls the function `f` constantly, even when the emulator is paused. If\n`unregister` is set to true, the function `f` will no longer be called when\nthis event occurs, but it will error if you never registered the function.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The function to be called when a savestate is loaded.",
                            "finish": 1290026,
                            "name": "f",
                            "rawdesc": "The function to be called when a savestate is loaded.",
                            "start": 1290025,
                            "type": "local",
                            "view": "fun():nil"
                        },
                        {
                            "desc": "If true, then unregister the function `f`.",
                            "finish": 1290038,
                            "name": "unregister",
                            "rawdesc": "If true, then unregister the function `f`.",
                            "start": 1290028,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Calls the function `f` when a savestate is loaded. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.\n\n@*param* `f` โ The function to be called when a savestate is loaded.\n\n@*param* `unregister` โ If true, then unregister the function `f`.",
                    "finish": 1290043,
                    "rawdesc": "Calls the function `f` when a savestate is loaded. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 1290000,
                    "type": "function",
                    "view": "function emu.atloadstate(f: fun():nil, unregister?: boolean)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 1290024,
                "start": 1290009,
                "type": "setfield"
            }
        ],
        "desc": "Calls the function `f` when a savestate is loaded. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.\n\n@*param* `f` โ The function to be called when a savestate is loaded.\n\n@*param* `unregister` โ If true, then unregister the function `f`.",
        "name": "emu.atloadstate",
        "rawdesc": "Calls the function `f` when a savestate is loaded. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The function to be called when a movie is played.",
                            "finish": 1130026,
                            "name": "f",
                            "rawdesc": "The function to be called when a movie is played.",
                            "start": 1130025,
                            "type": "local",
                            "view": "fun():nil"
                        },
                        {
                            "desc": "If true, then unregister the function `f`.",
                            "finish": 1130038,
                            "name": "unregister",
                            "rawdesc": "If true, then unregister the function `f`.",
                            "start": 1130028,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Calls the function `f` when a movie is played. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.\n\n@*param* `f` โ The function to be called when a movie is played.\n\n@*param* `unregister` โ If true, then unregister the function `f`.",
                    "finish": 1130043,
                    "rawdesc": "Calls the function `f` when a movie is played. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 1130000,
                    "type": "function",
                    "view": "function emu.atplaymovie(f: fun():nil, unregister?: boolean)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 1130024,
                "start": 1130009,
                "type": "setfield"
            }
        ],
        "desc": "Calls the function `f` when a movie is played. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.\n\n@*param* `f` โ The function to be called when a movie is played.\n\n@*param* `unregister` โ If true, then unregister the function `f`.",
        "name": "emu.atplaymovie",
        "rawdesc": "Calls the function `f` when a movie is played. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The function to be called when the emulator is reset.",
                            "finish": 1450022,
                            "name": "f",
                            "rawdesc": "The function to be called when the emulator is reset.",
                            "start": 1450021,
                            "type": "local",
                            "view": "fun():nil"
                        },
                        {
                            "desc": "If true, then unregister the function `f`.",
                            "finish": 1450034,
                            "name": "unregister",
                            "rawdesc": "If true, then unregister the function `f`.",
                            "start": 1450024,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Calls the function `f` when the emulator is reset. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.\n\n@*param* `f` โ The function to be called when the emulator is reset.\n\n@*param* `unregister` โ If true, then unregister the function `f`.",
                    "finish": 1450039,
                    "rawdesc": "Calls the function `f` when the emulator is reset. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 1450000,
                    "type": "function",
                    "view": "function emu.atreset(f: fun():nil, unregister?: boolean)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 1450020,
                "start": 1450009,
                "type": "setfield"
            }
        ],
        "desc": "Calls the function `f` when the emulator is reset. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.\n\n@*param* `f` โ The function to be called when the emulator is reset.\n\n@*param* `unregister` โ If true, then unregister the function `f`.",
        "name": "emu.atreset",
        "rawdesc": "Calls the function `f` when the emulator is reset. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The function to be called when a savestate is saved.",
                            "finish": 1370026,
                            "name": "f",
                            "rawdesc": "The function to be called when a savestate is saved.",
                            "start": 1370025,
                            "type": "local",
                            "view": "fun():nil"
                        },
                        {
                            "desc": "If true, then unregister the function `f`.",
                            "finish": 1370038,
                            "name": "unregister",
                            "rawdesc": "If true, then unregister the function `f`.",
                            "start": 1370028,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Calls the function `f` when a savestate is saved. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.\n\n@*param* `f` โ The function to be called when a savestate is saved.\n\n@*param* `unregister` โ If true, then unregister the function `f`.",
                    "finish": 1370043,
                    "rawdesc": "Calls the function `f` when a savestate is saved. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 1370000,
                    "type": "function",
                    "view": "function emu.atsavestate(f: fun():nil, unregister?: boolean)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 1370024,
                "start": 1370009,
                "type": "setfield"
            }
        ],
        "desc": "Calls the function `f` when a savestate is saved. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.\n\n@*param* `f` โ The function to be called when a savestate is saved.\n\n@*param* `unregister` โ If true, then unregister the function `f`.",
        "name": "emu.atsavestate",
        "rawdesc": "Calls the function `f` when a savestate is saved. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The function to be called when the script is stopped.",
                            "finish": 880021,
                            "name": "f",
                            "rawdesc": "The function to be called when the script is stopped.",
                            "start": 880020,
                            "type": "local",
                            "view": "fun():nil"
                        },
                        {
                            "desc": "If true, then unregister the function `f`.",
                            "finish": 880033,
                            "name": "unregister",
                            "rawdesc": "If true, then unregister the function `f`.",
                            "start": 880023,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Calls the function `f` when the script is stopped. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.\n\n@*param* `f` โ The function to be called when the script is stopped.\n\n@*param* `unregister` โ If true, then unregister the function `f`.",
                    "finish": 880038,
                    "rawdesc": "Calls the function `f` when the script is stopped. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 880000,
                    "type": "function",
                    "view": "function emu.atstop(f: fun():nil, unregister?: boolean)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 880019,
                "start": 880009,
                "type": "setfield"
            }
        ],
        "desc": "Calls the function `f` when the script is stopped. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.\n\n@*param* `f` โ The function to be called when the script is stopped.\n\n@*param* `unregister` โ If true, then unregister the function `f`.",
        "name": "emu.atstop",
        "rawdesc": "Calls the function `f` when the script is stopped. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The function to be called when a movie is stopped.",
                            "finish": 1210026,
                            "name": "f",
                            "rawdesc": "The function to be called when a movie is stopped.",
                            "start": 1210025,
                            "type": "local",
                            "view": "fun():nil"
                        },
                        {
                            "desc": "If true, then unregister the function `f`.",
                            "finish": 1210038,
                            "name": "unregister",
                            "rawdesc": "If true, then unregister the function `f`.",
                            "start": 1210028,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Calls the function `f` when a movie is stopped. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.\n\n@*param* `f` โ The function to be called when a movie is stopped.\n\n@*param* `unregister` โ If true, then unregister the function `f`.",
                    "finish": 1210043,
                    "rawdesc": "Calls the function `f` when a movie is stopped. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 1210000,
                    "type": "function",
                    "view": "function emu.atstopmovie(f: fun():nil, unregister?: boolean)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 1210024,
                "start": 1210009,
                "type": "setfield"
            }
        ],
        "desc": "Calls the function `f` when a movie is stopped. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.\n\n@*param* `f` โ The function to be called when a movie is stopped.\n\n@*param* `unregister` โ If true, then unregister the function `f`.",
        "name": "emu.atstopmovie",
        "rawdesc": "Calls the function `f` when a movie is stopped. If `unregister` is set to\ntrue, the function `f` will no longer be called when this event occurs, but\nit will error if you never registered the function.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The function to be called after every VI frame.",
                            "finish": 710029,
                            "name": "f",
                            "rawdesc": "The function to be called after every VI frame.",
                            "start": 710028,
                            "type": "local",
                            "view": "fun():nil"
                        },
                        {
                            "desc": "If true, then unregister the function `f`.",
                            "finish": 710041,
                            "name": "unregister",
                            "rawdesc": "If true, then unregister the function `f`.",
                            "start": 710031,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Similar to `emu.atvi`, except that it is called after. If `unregister` is set\nto true, the function `f` will no longer be called when this event occurs,\nbut it will error if you never registered the function.\n\n@*param* `f` โ The function to be called after every VI frame.\n\n@*param* `unregister` โ If true, then unregister the function `f`.",
                    "finish": 710046,
                    "rawdesc": "Similar to `emu.atvi`, except that it is called after. If `unregister` is set\nto true, the function `f` will no longer be called when this event occurs,\nbut it will error if you never registered the function.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 710000,
                    "type": "function",
                    "view": "function emu.atupdatescreen(f: fun():nil, unregister?: boolean)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 710027,
                "start": 710009,
                "type": "setfield"
            }
        ],
        "desc": "Similar to `emu.atvi`, except that it is called after. If `unregister` is set\nto true, the function `f` will no longer be called when this event occurs,\nbut it will error if you never registered the function.\n\n@*param* `f` โ The function to be called after every VI frame.\n\n@*param* `unregister` โ If true, then unregister the function `f`.",
        "name": "emu.atupdatescreen",
        "rawdesc": "Similar to `emu.atvi`, except that it is called after. If `unregister` is set\nto true, the function `f` will no longer be called when this event occurs,\nbut it will error if you never registered the function.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The function to be called every VI frame.",
                            "finish": 630019,
                            "name": "f",
                            "rawdesc": "The function to be called every VI frame.",
                            "start": 630018,
                            "type": "local",
                            "view": "fun():nil"
                        },
                        {
                            "desc": "If true, then unregister the function `f`.",
                            "finish": 630031,
                            "name": "unregister",
                            "rawdesc": "If true, then unregister the function `f`.",
                            "start": 630021,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Calls the function `f` every VI frame. For example, in Super Mario 64, the\nfunction will be called twice when you advance by one frame, whereas it will\nbe called once in Ocarina of Time. If `unregister` is set to true, the\nfunction `f` will no longer be called when this event occurs, but it will\nerror if you never registered the function.\n\n@*param* `f` โ The function to be called every VI frame.\n\n@*param* `unregister` โ If true, then unregister the function `f`.",
                    "finish": 630036,
                    "rawdesc": "Calls the function `f` every VI frame. For example, in Super Mario 64, the\nfunction will be called twice when you advance by one frame, whereas it will\nbe called once in Ocarina of Time. If `unregister` is set to true, the\nfunction `f` will no longer be called when this event occurs, but it will\nerror if you never registered the function.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 630000,
                    "type": "function",
                    "view": "function emu.atvi(f: fun():nil, unregister?: boolean)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 630017,
                "start": 630009,
                "type": "setfield"
            }
        ],
        "desc": "Calls the function `f` every VI frame. For example, in Super Mario 64, the\nfunction will be called twice when you advance by one frame, whereas it will\nbe called once in Ocarina of Time. If `unregister` is set to true, the\nfunction `f` will no longer be called when this event occurs, but it will\nerror if you never registered the function.\n\n@*param* `f` โ The function to be called every VI frame.\n\n@*param* `unregister` โ If true, then unregister the function `f`.",
        "name": "emu.atvi",
        "rawdesc": "Calls the function `f` every VI frame. For example, in Super Mario 64, the\nfunction will be called twice when you advance by one frame, whereas it will\nbe called once in Ocarina of Time. If `unregister` is set to true, the\nfunction `f` will no longer be called when this event occurs, but it will\nerror if you never registered the function.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The function to be called when a window message is received. a: wnd, b: msg, c: wParam, d: lParam.",
                            "finish": 970030,
                            "name": "f",
                            "rawdesc": "The function to be called when a window message is received. a: wnd, b: msg, c: wParam, d: lParam.",
                            "start": 970029,
                            "type": "local",
                            "view": "fun(a: integer, b: integer, c: integer, d: integer):nil"
                        },
                        {
                            "desc": "If true, then unregister the function `f`.",
                            "finish": 970042,
                            "name": "unregister",
                            "rawdesc": "If true, then unregister the function `f`.",
                            "start": 970032,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Defines a handler function that is called when a window receives a message.\nThe message data is given to the function in 4 parameters. If `unregister`\nis set to true, the function `f` will no longer be called when this event\noccurs, but it will error if you never registered the function.\n\n@*param* `f` โ The function to be called when a window message is received. a: wnd, b: msg, c: wParam, d: lParam.\n\n@*param* `unregister` โ If true, then unregister the function `f`.",
                    "finish": 970047,
                    "rawdesc": "Defines a handler function that is called when a window receives a message.\nThe message data is given to the function in 4 parameters. If `unregister`\nis set to true, the function `f` will no longer be called when this event\noccurs, but it will error if you never registered the function.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 970000,
                    "type": "function",
                    "view": "function emu.atwindowmessage(f: fun(a: integer, b: integer, c: integer, d: integer):nil, unregister?: boolean)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 970028,
                "start": 970009,
                "type": "setfield"
            }
        ],
        "desc": "Defines a handler function that is called when a window receives a message.\nThe message data is given to the function in 4 parameters. If `unregister`\nis set to true, the function `f` will no longer be called when this event\noccurs, but it will error if you never registered the function.\n\n@*param* `f` โ The function to be called when a window message is received. a: wnd, b: msg, c: wParam, d: lParam.\n\n@*param* `unregister` โ If true, then unregister the function `f`.",
        "name": "emu.atwindowmessage",
        "rawdesc": "Defines a handler function that is called when a window receives a message.\nThe message data is given to the function in 4 parameters. If `unregister`\nis set to true, the function `f` will no longer be called when this event\noccurs, but it will error if you never registered the function.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The string to print to the console.",
                            "finish": 470028,
                            "name": "message",
                            "rawdesc": "The string to print to the console.",
                            "start": 470021,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Displays the text `message` in the console. Similar to `print`, but only\naccepts strings. Because of this, `print` should be used instead.\n\n@*param* `message` โ The string to print to the console.",
                    "finish": 470033,
                    "rawdesc": "Displays the text `message` in the console. Similar to `print`, but only\naccepts strings. Because of this, `print` should be used instead.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 470000,
                    "type": "function",
                    "view": "function emu.console(message: string)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 470020,
                "start": 470009,
                "type": "setfield"
            }
        ],
        "desc": "Displays the text `message` in the console. Similar to `print`, but only\naccepts strings. Because of this, `print` should be used instead.\n\n@*param* `message` โ The string to print to the console.",
        "name": "emu.console",
        "rawdesc": "Displays the text `message` in the console. Similar to `print`, but only\naccepts strings. Because of this, `print` should be used instead.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Returns the number of VIs since the last movie was played. This should match\nthe statusbar (assuming you have `0-index statusbar` off). If no movie has\nbeen played, it returns the number of VIs since the emulator was started, not\nreset.\n\n@*return* `framecount` โ The number of VIs since the last movie was played.",
                    "finish": 1530029,
                    "rawdesc": "Returns the number of VIs since the last movie was played. This should match\nthe statusbar (assuming you have `0-index statusbar` off). If no movie has\nbeen played, it returns the number of VIs since the emulator was started, not\nreset.",
                    "returns": [
                        {
                            "desc": "The number of VIs since the last movie was played.",
                            "name": "framecount",
                            "rawdesc": "The number of VIs since the last movie was played.",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1530000,
                    "type": "function",
                    "view": "function emu.framecount()\n  -> framecount: integer"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 1530023,
                "start": 1530009,
                "type": "setfield"
            }
        ],
        "desc": "Returns the number of VIs since the last movie was played. This should match\nthe statusbar (assuming you have `0-index statusbar` off). If no movie has\nbeen played, it returns the number of VIs since the emulator was started, not\nreset.\n\n@*return* `framecount` โ The number of VIs since the last movie was played.",
        "name": "emu.framecount",
        "rawdesc": "Returns the number of VIs since the last movie was played. This should match\nthe statusbar (assuming you have `0-index statusbar` off). If no movie has\nbeen played, it returns the number of VIs since the emulator was started, not\nreset.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2220031,
                            "name": "address",
                            "start": 2220024,
                            "type": "local",
                            "view": "\"MI_register\"|\"PIF_RAM\"|\"SP_DMEM\"|\"ai_register\"|\"dpc_register\"...(+9)"
                        }
                    ],
                    "desc": "Gets the address of an internal mupen variable. For example, \"rdram\" is the\nsame as mupen's ram start\n\n```lua\naddress:\n    | \"rdram\"\n    | \"rdram_register\"\n    | \"MI_register\"\n    | \"pi_register\"\n    | \"sp_register\"\n    | \"rsp_register\"\n    | \"si_register\"\n    | \"vi_register\"\n    | \"ri_register\"\n    | \"ai_register\"\n    | \"dpc_register\"\n    | \"dps_register\"\n    | \"SP_DMEM\"\n    | \"PIF_RAM\"\n```",
                    "finish": 2220036,
                    "rawdesc": "Gets the address of an internal mupen variable. For example, \"rdram\" is the\nsame as mupen's ram start\n\n```lua\naddress:\n    | \"rdram\"\n    | \"rdram_register\"\n    | \"MI_register\"\n    | \"pi_register\"\n    | \"sp_register\"\n    | \"rsp_register\"\n    | \"si_register\"\n    | \"vi_register\"\n    | \"ri_register\"\n    | \"ai_register\"\n    | \"dpc_register\"\n    | \"dps_register\"\n    | \"SP_DMEM\"\n    | \"PIF_RAM\"\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 2220000,
                    "type": "function",
                    "view": "function emu.getaddress(address: \"MI_register\"|\"PIF_RAM\"|\"SP_DMEM\"|\"ai_register\"|\"dpc_register\"...(+9))\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 2220023,
                "start": 2220009,
                "type": "setfield"
            }
        ],
        "desc": "Gets the address of an internal mupen variable. For example, \"rdram\" is the\nsame as mupen's ram start\n\n```lua\naddress:\n    | \"rdram\"\n    | \"rdram_register\"\n    | \"MI_register\"\n    | \"pi_register\"\n    | \"sp_register\"\n    | \"rsp_register\"\n    | \"si_register\"\n    | \"vi_register\"\n    | \"ri_register\"\n    | \"ai_register\"\n    | \"dpc_register\"\n    | \"dps_register\"\n    | \"SP_DMEM\"\n    | \"PIF_RAM\"\n```",
        "name": "emu.getaddress",
        "rawdesc": "Gets the address of an internal mupen variable. For example, \"rdram\" is the\nsame as mupen's ram start\n\n```lua\naddress:\n    | \"rdram\"\n    | \"rdram_register\"\n    | \"MI_register\"\n    | \"pi_register\"\n    | \"sp_register\"\n    | \"rsp_register\"\n    | \"si_register\"\n    | \"vi_register\"\n    | \"ri_register\"\n    | \"ai_register\"\n    | \"dpc_register\"\n    | \"dps_register\"\n    | \"SP_DMEM\"\n    | \"PIF_RAM\"\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Returns `true` if the emulator is paused and `false` if it is not.\n\n@*return* `emu_paused` โ `true` if the emulator is paused and `false` if it is not.",
                    "finish": 1850027,
                    "rawdesc": "Returns `true` if the emulator is paused and `false` if it is not.",
                    "returns": [
                        {
                            "desc": "`true` if the emulator is paused and `false` if it is not.",
                            "name": "emu_paused",
                            "rawdesc": "`true` if the emulator is paused and `false` if it is not.",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 1850000,
                    "type": "function",
                    "view": "function emu.getpause()\n  -> emu_paused: boolean"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 1850021,
                "start": 1850009,
                "type": "setfield"
            }
        ],
        "desc": "Returns `true` if the emulator is paused and `false` if it is not.\n\n@*return* `emu_paused` โ `true` if the emulator is paused and `false` if it is not.",
        "name": "emu.getpause",
        "rawdesc": "Returns `true` if the emulator is paused and `false` if it is not.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Returns the current speed limit (not the current speed) of the emulator.\n\n@*return* `speed_limit` โ The current speed limit of the emulator.",
                    "finish": 1900027,
                    "rawdesc": "Returns the current speed limit (not the current speed) of the emulator.",
                    "returns": [
                        {
                            "desc": "The current speed limit of the emulator.",
                            "name": "speed_limit",
                            "rawdesc": "The current speed limit of the emulator.",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1900000,
                    "type": "function",
                    "view": "function emu.getspeed()\n  -> speed_limit: integer"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 1900021,
                "start": 1900009,
                "type": "setfield"
            }
        ],
        "desc": "Returns the current speed limit (not the current speed) of the emulator.\n\n@*return* `speed_limit` โ The current speed limit of the emulator.",
        "name": "emu.getspeed",
        "rawdesc": "Returns the current speed limit (not the current speed) of the emulator.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2350035,
                            "name": "param",
                            "start": 2350030,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Gets a system metric using the windows\n[GetSystemMetrics](https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getsystemmetrics)\nfunction.",
                    "finish": 2350040,
                    "rawdesc": "Gets a system metric using the windows\n[GetSystemMetrics](https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getsystemmetrics)\nfunction.",
                    "returns": [
                        {
                            "name": "metric",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 2350000,
                    "type": "function",
                    "view": "function emu.getsystemmetrics(param: integer)\n  -> metric: integer"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 2350029,
                "start": 2350009,
                "type": "setfield"
            }
        ],
        "desc": "Gets a system metric using the windows\n[GetSystemMetrics](https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getsystemmetrics)\nfunction.",
        "name": "emu.getsystemmetrics",
        "rawdesc": "Gets a system metric using the windows\n[GetSystemMetrics](https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getsystemmetrics)\nfunction.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "Whether to get the full version (`0`) or the short version (`1`).",
                            "finish": 1750028,
                            "name": "type",
                            "rawdesc": "Whether to get the full version (`0`) or the short version (`1`).",
                            "start": 1750024,
                            "type": "local",
                            "view": "0|1"
                        }
                    ],
                    "desc": "Returns the current mupen version. If `type` is 0, it will return the full\nversion name (Mupen 64 0.0.0). If `type` is 1, it will return only the\nversion number (0.0.0).\n\n@*param* `type` โ Whether to get the full version (`0`) or the short version (`1`).\n\n@*return* `version` โ The Mupen version.\n\n```lua\ntype:\n    | 0\n    | 1\n```",
                    "finish": 1750033,
                    "rawdesc": "Returns the current mupen version. If `type` is 0, it will return the full\nversion name (Mupen 64 0.0.0). If `type` is 1, it will return only the\nversion number (0.0.0).\n\n```lua\ntype:\n    | 0\n    | 1\n```",
                    "returns": [
                        {
                            "desc": "The Mupen version.",
                            "name": "version",
                            "rawdesc": "The Mupen version.",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1750000,
                    "type": "function",
                    "view": "function emu.getversion(type: 0|1)\n  -> version: string"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 1750023,
                "start": 1750009,
                "type": "setfield"
            }
        ],
        "desc": "Returns the current mupen version. If `type` is 0, it will return the full\nversion name (Mupen 64 0.0.0). If `type` is 1, it will return only the\nversion number (0.0.0).\n\n@*param* `type` โ Whether to get the full version (`0`) or the short version (`1`).\n\n@*return* `version` โ The Mupen version.\n\n```lua\ntype:\n    | 0\n    | 1\n```",
        "name": "emu.getversion",
        "rawdesc": "Returns the current mupen version. If `type` is 0, it will return the full\nversion name (Mupen 64 0.0.0). If `type` is 1, it will return only the\nversion number (0.0.0).\n\n```lua\ntype:\n    | 0\n    | 1\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Returns the number of input frames that have happened since the emulator was\nstarted. It does not reset when a movie is started. Alias for `joypad.count`.\n\n@*return* `inputcount` โ The number of input frames that have happened since the emulator was started.",
                    "finish": 1670029,
                    "rawdesc": "Returns the number of input frames that have happened since the emulator was\nstarted. It does not reset when a movie is started. Alias for `joypad.count`.",
                    "returns": [
                        {
                            "desc": "The number of input frames that have happened since the emulator was started.",
                            "name": "inputcount",
                            "rawdesc": "The number of input frames that have happened since the emulator was started.",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1670000,
                    "type": "function",
                    "view": "function emu.inputcount()\n  -> inputcount: integer"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 1670023,
                "start": 1670009,
                "type": "setfield"
            }
        ],
        "desc": "Returns the number of input frames that have happened since the emulator was\nstarted. It does not reset when a movie is started. Alias for `joypad.count`.\n\n@*return* `inputcount` โ The number of input frames that have happened since the emulator was started.",
        "name": "emu.inputcount",
        "rawdesc": "Returns the number of input frames that have happened since the emulator was\nstarted. It does not reset when a movie is started. Alias for `joypad.count`.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Returns `true` if the main mupen window is focused and false if it is not.",
                    "finish": 2400043,
                    "rawdesc": "Returns `true` if the main mupen window is focused and false if it is not.",
                    "returns": [
                        {
                            "name": "focused",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 2400000,
                    "type": "function",
                    "view": "function emu.ismainwindowinforeground()\n  -> focused: boolean"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 2400037,
                "start": 2400009,
                "type": "setfield"
            }
        ],
        "desc": "Returns `true` if the main mupen window is focused and false if it is not.",
        "name": "emu.ismainwindowinforeground",
        "rawdesc": "Returns `true` if the main mupen window is focused and false if it is not.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "True pauses the emulator and false resumes it.",
                            "finish": 1800024,
                            "name": "pause",
                            "rawdesc": "True pauses the emulator and false resumes it.",
                            "start": 1800019,
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "Pauses or unpauses the emulator.\n\n@*param* `pause` โ True pauses the emulator and false resumes it.",
                    "finish": 1800029,
                    "rawdesc": "Pauses or unpauses the emulator.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 1800000,
                    "type": "function",
                    "view": "function emu.pause(pause: boolean)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 1800018,
                "start": 1800009,
                "type": "setfield"
            }
        ],
        "desc": "Pauses or unpauses the emulator.\n\n@*param* `pause` โ True pauses the emulator and false resumes it.",
        "name": "emu.pause",
        "rawdesc": "Pauses or unpauses the emulator.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2450033,
                            "name": "file_path",
                            "start": 2450024,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Played the sound file at `file_path`",
                    "finish": 2450038,
                    "rawdesc": "Played the sound file at `file_path`",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 2450000,
                    "type": "function",
                    "view": "function emu.play_sound(file_path: string)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 2450023,
                "start": 2450009,
                "type": "setfield"
            }
        ],
        "desc": "Played the sound file at `file_path`",
        "name": "emu.play_sound",
        "rawdesc": "Played the sound file at `file_path`",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Returns the number of input frames since the last movie was played. This\nshould match the statusbar (assuming you have `0-index statusbar` off). If no\nmovie is playing, it will return the last value when a movie was playing. If\nno movie has been played yet, it will return `-1`.\n\n@*return* `samplecount` โ The number of input frames since the last movie was played.",
                    "finish": 1610030,
                    "rawdesc": "Returns the number of input frames since the last movie was played. This\nshould match the statusbar (assuming you have `0-index statusbar` off). If no\nmovie is playing, it will return the last value when a movie was playing. If\nno movie has been played yet, it will return `-1`.",
                    "returns": [
                        {
                            "desc": "The number of input frames since the last movie was played.",
                            "name": "samplecount",
                            "rawdesc": "The number of input frames since the last movie was played.",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1610000,
                    "type": "function",
                    "view": "function emu.samplecount()\n  -> samplecount: integer"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 1610024,
                "start": 1610009,
                "type": "setfield"
            }
        ],
        "desc": "Returns the number of input frames since the last movie was played. This\nshould match the statusbar (assuming you have `0-index statusbar` off). If no\nmovie is playing, it will return the last value when a movie was playing. If\nno movie has been played yet, it will return `-1`.\n\n@*return* `samplecount` โ The number of input frames since the last movie was played.",
        "name": "emu.samplecount",
        "rawdesc": "Returns the number of input frames since the last movie was played. This\nshould match the statusbar (assuming you have `0-index statusbar` off). If no\nmovie is playing, it will return the last value when a movie was playing. If\nno movie has been played yet, it will return `-1`.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The directory to save the screenshot to.",
                            "finish": 2270027,
                            "name": "dir",
                            "rawdesc": "The directory to save the screenshot to.",
                            "start": 2270024,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Takes a screenshot and saves it to the directory `dir`.\n\n@*param* `dir` โ The directory to save the screenshot to.",
                    "finish": 2270032,
                    "rawdesc": "Takes a screenshot and saves it to the directory `dir`.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 2270000,
                    "type": "function",
                    "view": "function emu.screenshot(dir: string)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 2270023,
                "start": 2270009,
                "type": "setfield"
            }
        ],
        "desc": "Takes a screenshot and saves it to the directory `dir`.\n\n@*param* `dir` โ The directory to save the screenshot to.",
        "name": "emu.screenshot",
        "rawdesc": "Takes a screenshot and saves it to the directory `dir`.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The new speed limit of the emulator.",
                            "finish": 1950030,
                            "name": "speed_limit",
                            "rawdesc": "The new speed limit of the emulator.",
                            "start": 1950019,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Sets the speed limit of the emulator.\n\n@*param* `speed_limit` โ The new speed limit of the emulator.",
                    "finish": 1950035,
                    "rawdesc": "Sets the speed limit of the emulator.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 1950000,
                    "type": "function",
                    "view": "function emu.speed(speed_limit: integer)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 1950018,
                "start": 1950009,
                "type": "setfield"
            }
        ],
        "desc": "Sets the speed limit of the emulator.\n\n@*param* `speed_limit` โ The new speed limit of the emulator.",
        "name": "emu.speed",
        "rawdesc": "Sets the speed limit of the emulator.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2000027,
                            "name": "mode",
                            "start": 2000023,
                            "type": "local",
                            "view": "\"maximum\"|\"normal\""
                        }
                    ],
                    "desc": "Sets the speed mode of the emulator.\n\n```lua\nmode:\n    | \"normal\"\n    | \"maximum\"\n```",
                    "finish": 2000032,
                    "rawdesc": "Sets the speed mode of the emulator.\n\n```lua\nmode:\n    | \"normal\"\n    | \"maximum\"\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 2000000,
                    "type": "function",
                    "view": "function emu.speedmode(mode: \"maximum\"|\"normal\")\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 2000022,
                "start": 2000009,
                "type": "setfield"
            }
        ],
        "desc": "Sets the speed mode of the emulator.\n\n```lua\nmode:\n    | \"normal\"\n    | \"maximum\"\n```",
        "name": "emu.speedmode",
        "rawdesc": "Sets the speed mode of the emulator.\n\n```lua\nmode:\n    | \"normal\"\n    | \"maximum\"\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The string to display on the status bar.",
                            "finish": 530030,
                            "name": "message",
                            "rawdesc": "The string to display on the status bar.",
                            "start": 530023,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Displays the text `message` in the status bar on the bottom while replacing\nany other text. The message will only display until the next frame.\n\n@*param* `message` โ The string to display on the status bar.",
                    "finish": 530035,
                    "rawdesc": "Displays the text `message` in the status bar on the bottom while replacing\nany other text. The message will only display until the next frame.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 530000,
                    "type": "function",
                    "view": "function emu.statusbar(message: string)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 530022,
                "start": 530009,
                "type": "setfield"
            }
        ],
        "desc": "Displays the text `message` in the status bar on the bottom while replacing\nany other text. The message will only display until the next frame.\n\n@*param* `message` โ The string to display on the status bar.",
        "name": "emu.statusbar",
        "rawdesc": "Displays the text `message` in the status bar on the bottom while replacing\nany other text. The message will only display until the next frame.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 620022,
                            "name": "message",
                            "start": 620015,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 620029,
                            "name": "level",
                            "start": 620024,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nTerminates the last protected function called and returns message as the error object.\n\nUsually, `error` adds some information about the error position at the beginning of the message, if the message is a string.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-error)",
                    "finish": 620034,
                    "rawdesc": "\nTerminates the last protected function called and returns message as the error object.\n\nUsually, `error` adds some information about the error position at the beginning of the message, if the message is a string.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-error)",
                    "start": 620000,
                    "type": "function",
                    "view": "function error(message: any, level?: integer)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 620014,
                "start": 620009,
                "type": "setglobal"
            }
        ],
        "desc": "\nTerminates the last protected function called and returns message as the error object.\n\nUsually, `error` adds some information about the error position at the beginning of the message, if the message is a string.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-error)",
        "name": "error",
        "rawdesc": "\nTerminates the last protected function called and returns message as the error object.\n\nUsually, `error` adds some information about the error position at the beginning of the message, if the message is a string.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-error)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 810018,
                            "name": "f",
                            "start": 810017,
                            "type": "local",
                            "view": "(integer|fun(...any):...unknown)?"
                        }
                    ],
                    "desc": "\nReturns the current environment in use by the function. `f` can be a Lua function or a number that specifies the function at that stack level.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-getfenv)",
                    "finish": 810023,
                    "rawdesc": "\nReturns the current environment in use by the function. `f` can be a Lua function or a number that specifies the function at that stack level.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-getfenv)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 810000,
                    "type": "function",
                    "view": "function getfenv(f?: integer|fun(...any):...unknown)\n  -> table"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 810016,
                "start": 810009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReturns the current environment in use by the function. `f` can be a Lua function or a number that specifies the function at that stack level.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-getfenv)",
        "name": "getfenv",
        "rawdesc": "\nReturns the current environment in use by the function. `f` can be a Lua function or a number that specifies the function at that stack level.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-getfenv)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 910028,
                            "name": "object",
                            "start": 910022,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nIf object does not have a metatable, returns nil. Otherwise, if the object's metatable has a __metatable field, returns the associated value. Otherwise, returns the metatable of the given object.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-getmetatable)",
                    "finish": 910033,
                    "rawdesc": "\nIf object does not have a metatable, returns nil. Otherwise, if the object's metatable has a __metatable field, returns the associated value. Otherwise, returns the metatable of the given object.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-getmetatable)",
                    "returns": [
                        {
                            "name": "metatable",
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 910000,
                    "type": "function",
                    "view": "function getmetatable(object: any)\n  -> metatable: table"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 910021,
                "start": 910009,
                "type": "setglobal"
            }
        ],
        "desc": "\nIf object does not have a metatable, returns nil. Otherwise, if the object's metatable has a __metatable field, returns the associated value. Otherwise, returns the metatable of the given object.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-getmetatable)",
        "name": "getmetatable",
        "rawdesc": "\nIf object does not have a metatable, returns nil. Otherwise, if the object's metatable has a __metatable field, returns the associated value. Otherwise, returns the metatable of the given object.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-getmetatable)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 140010,
                    "start": 140008,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 140005,
                "start": 140000,
                "type": "setglobal"
            }
        ],
        "name": "input",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 8120022,
                            "name": "t1",
                            "start": 8120020,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 8120026,
                            "name": "t2",
                            "start": 8120024,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "Returns the differences between `t1` and `t2`. For example, if `t1` is the\ninputs for this frame, and `t2` is the inputs for last frame, it would return\nwhich buttons were pressed this frame, not which buttons are active.",
                    "finish": 8120031,
                    "rawdesc": "Returns the differences between `t1` and `t2`. For example, if `t1` is the\ninputs for this frame, and `t2` is the inputs for last frame, it would return\nwhich buttons were pressed this frame, not which buttons are active.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 8120000,
                    "type": "function",
                    "view": "function input.diff(t1: table, t2: table)\n  -> table"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 8120019,
                "start": 8120009,
                "type": "setfield"
            }
        ],
        "desc": "Returns the differences between `t1` and `t2`. For example, if `t1` is the\ninputs for this frame, and `t2` is the inputs for last frame, it would return\nwhich buttons were pressed this frame, not which buttons are active.",
        "name": "input.diff",
        "rawdesc": "Returns the differences between `t1` and `t2`. For example, if `t1` is the\ninputs for this frame, and `t2` is the inputs for last frame, it would return\nwhich buttons were pressed this frame, not which buttons are active.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Returns the state of all keyboard keys and the mouse position in a table. Ex:\n`input.get() -> {xmouse=297, ymouse=120, A=true, B=true}`.",
                    "finish": 8030024,
                    "rawdesc": "Returns the state of all keyboard keys and the mouse position in a table. Ex:\n`input.get() -> {xmouse=297, ymouse=120, A=true, B=true}`.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 8030000,
                    "type": "function",
                    "view": "function input.get()\n  -> table"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 8030018,
                "start": 8030009,
                "type": "setfield"
            }
        ],
        "desc": "Returns the state of all keyboard keys and the mouse position in a table. Ex:\n`input.get() -> {xmouse=297, ymouse=120, A=true, B=true}`.",
        "name": "input.get",
        "rawdesc": "Returns the state of all keyboard keys and the mouse position in a table. Ex:\n`input.get() -> {xmouse=297, ymouse=120, A=true, B=true}`.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 8270036,
                            "name": "key",
                            "start": 8270033,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Gets the name of a key",
                    "finish": 8270041,
                    "rawdesc": "Gets the name of a key",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 8270000,
                    "type": "function",
                    "view": "function input.get_key_name_text(key: integer)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 8270032,
                "start": 8270009,
                "type": "setfield"
            }
        ],
        "desc": "Gets the name of a key",
        "name": "input.get_key_name_text",
        "rawdesc": "Gets the name of a key",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 8350038,
                            "name": "code",
                            "start": 8350034,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 8350048,
                            "name": "map_type",
                            "start": 8350040,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Translates a virtual-key code into a scan code. More info\n[here](https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-mapvirtualkeyexa).",
                    "finish": 8350053,
                    "rawdesc": "Translates a virtual-key code into a scan code. More info\n[here](https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-mapvirtualkeyexa).",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 8350000,
                    "type": "function",
                    "view": "function input.map_virtual_key_ex(code: integer, map_type: integer)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 8350033,
                "start": 8350009,
                "type": "setfield"
            }
        ],
        "desc": "Translates a virtual-key code into a scan code. More info\n[here](https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-mapvirtualkeyexa).",
        "name": "input.map_virtual_key_ex",
        "rawdesc": "Translates a virtual-key code into a scan code. More info\n[here](https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-mapvirtualkeyexa).",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The title of the text box. Defaults to \"input:\".",
                            "finish": 8210027,
                            "name": "title",
                            "rawdesc": "The title of the text box. Defaults to \"input:\".",
                            "start": 8210022,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "desc": "The text box is filled with this string when it opens. Defaults to \"\".",
                            "finish": 8210040,
                            "name": "placeholder",
                            "rawdesc": "The text box is filled with this string when it opens. Defaults to \"\".",
                            "start": 8210029,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "Opens a window where the user can input text. If `OK` is clicked, that text\nis returned. If `Cancel` is clicked or the window is closed, `nil` is\nreturned.\n\n@*param* `title` โ The title of the text box. Defaults to \"input:\".\n\n@*param* `placeholder` โ The text box is filled with this string when it opens. Defaults to \"\".",
                    "finish": 8210045,
                    "rawdesc": "Opens a window where the user can input text. If `OK` is clicked, that text\nis returned. If `Cancel` is clicked or the window is closed, `nil` is\nreturned.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string|nil"
                        }
                    ],
                    "start": 8210000,
                    "type": "function",
                    "view": "function input.prompt(title?: string, placeholder?: string)\n  -> string|nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 8210021,
                "start": 8210009,
                "type": "setfield"
            }
        ],
        "desc": "Opens a window where the user can input text. If `OK` is clicked, that text\nis returned. If `Cancel` is clicked or the window is closed, `nil` is\nreturned.\n\n@*param* `title` โ The title of the text box. Defaults to \"input:\".\n\n@*param* `placeholder` โ The text box is filled with this string when it opens. Defaults to \"\".",
        "name": "input.prompt",
        "rawdesc": "Opens a window where the user can input text. If `OK` is clicked, that text\nis returned. If `Cancel` is clicked or the window is closed, `nil` is\nreturned.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 260007,
                    "start": 260005,
                    "type": "table",
                    "view": "iolib"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 260002,
                "start": 260000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io)\n",
        "name": "io",
        "rawdesc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io)\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-file)\n",
                            "finish": 510022,
                            "name": "file",
                            "rawdesc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-file)\n",
                            "start": 510018,
                            "type": "local",
                            "view": "file*?"
                        }
                    ],
                    "desc": "\nClose `file` or default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.close)\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                    "finish": 510027,
                    "rawdesc": "\nClose `file` or default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.close)\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                    "returns": [
                        {
                            "name": "suc",
                            "type": "function.return",
                            "view": "boolean?"
                        },
                        {
                            "name": "exitcode",
                            "type": "function.return",
                            "view": "(\"exit\"|\"signal\")?"
                        },
                        {
                            "name": "code",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": 510000,
                    "type": "function",
                    "view": "function io.close(file?: file*)\n  -> suc: boolean?\n  2. exitcode: (\"exit\"|\"signal\")?\n  3. code: integer?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 510017,
                "start": 510009,
                "type": "setfield"
            }
        ],
        "desc": "\nClose `file` or default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.close)\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
        "name": "io.close",
        "rawdesc": "\nClose `file` or default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.close)\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nSaves any written data to default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.flush)",
                    "finish": 580023,
                    "rawdesc": "\nSaves any written data to default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.flush)",
                    "start": 580000,
                    "type": "function",
                    "view": "function io.flush()"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 580017,
                "start": 580009,
                "type": "setfield"
            }
        ],
        "desc": "\nSaves any written data to default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.flush)",
        "name": "io.flush",
        "rawdesc": "\nSaves any written data to default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.flush)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-file)\n",
                            "finish": 670022,
                            "name": "file",
                            "rawdesc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-file)\n",
                            "start": 670018,
                            "type": "local",
                            "view": "string|file*"
                        }
                    ],
                    "desc": "\nSets `file` as the default input file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.input)",
                    "finish": 670027,
                    "rawdesc": "\nSets `file` as the default input file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.input)",
                    "start": 670000,
                    "type": "function",
                    "view": "function io.input(file: string|file*)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 670017,
                "start": 670009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets `file` as the default input file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.input)",
        "name": "io.input",
        "rawdesc": "\nSets `file` as the default input file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.input)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 830026,
                            "name": "filename",
                            "start": 830018,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": 830031,
                            "start": 830028,
                            "type": "...",
                            "view": "string|integer|\"L\"|\"a\"|\"l\"...(+1)"
                        }
                    ],
                    "desc": "\n------\n```lua\nfor c in io.lines(filename, ...) do\n    body\nend\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.lines)\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                    "finish": 830036,
                    "rawdesc": "\n------\n```lua\nfor c in io.lines(filename, ...) do\n    body\nend\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.lines)\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun():any, ...unknown"
                        }
                    ],
                    "start": 830000,
                    "type": "function",
                    "view": "function io.lines(filename?: string, ...string|integer|\"L\"|\"a\"|\"l\"...(+1))\n  -> fun():any, ...unknown"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 830017,
                "start": 830009,
                "type": "setfield"
            }
        ],
        "desc": "\n------\n```lua\nfor c in io.lines(filename, ...) do\n    body\nend\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.lines)\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
        "name": "io.lines",
        "rawdesc": "\n------\n```lua\nfor c in io.lines(filename, ...) do\n    body\nend\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.lines)\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 950025,
                            "name": "filename",
                            "start": 950017,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 950031,
                            "name": "mode",
                            "start": 950027,
                            "type": "local",
                            "view": "(\"a\"|\"a+\"|\"a+b\"|\"ab\"|\"r\"...(+7))?"
                        }
                    ],
                    "desc": "\nOpens a file, in the mode specified in the string `mode`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.open)\n\n\n```lua\nmode:\n   -> \"r\" -- Read mode.\n    | \"w\" -- Write mode.\n    | \"a\" -- Append mode.\n    | \"r+\" -- Update mode, all previous data is preserved.\n    | \"w+\" -- Update mode, all previous data is erased.\n    | \"a+\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file.\n    | \"rb\" -- Read mode. (in binary mode.)\n    | \"wb\" -- Write mode. (in binary mode.)\n    | \"ab\" -- Append mode. (in binary mode.)\n    | \"r+b\" -- Update mode, all previous data is preserved. (in binary mode.)\n    | \"w+b\" -- Update mode, all previous data is erased. (in binary mode.)\n    | \"a+b\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file. (in binary mode.)\n```",
                    "finish": 950036,
                    "rawdesc": "\nOpens a file, in the mode specified in the string `mode`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.open)\n\n\n```lua\nmode:\n   -> \"r\" -- Read mode.\n    | \"w\" -- Write mode.\n    | \"a\" -- Append mode.\n    | \"r+\" -- Update mode, all previous data is preserved.\n    | \"w+\" -- Update mode, all previous data is erased.\n    | \"a+\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file.\n    | \"rb\" -- Read mode. (in binary mode.)\n    | \"wb\" -- Write mode. (in binary mode.)\n    | \"ab\" -- Append mode. (in binary mode.)\n    | \"r+b\" -- Update mode, all previous data is preserved. (in binary mode.)\n    | \"w+b\" -- Update mode, all previous data is erased. (in binary mode.)\n    | \"a+b\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file. (in binary mode.)\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*?"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 950000,
                    "type": "function",
                    "view": "function io.open(filename: string, mode?: \"a\"|\"a+\"|\"a+b\"|\"ab\"|\"r\"...(+7))\n  -> file*?\n  2. errmsg: string?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 950016,
                "start": 950009,
                "type": "setfield"
            }
        ],
        "desc": "\nOpens a file, in the mode specified in the string `mode`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.open)\n\n\n```lua\nmode:\n   -> \"r\" -- Read mode.\n    | \"w\" -- Write mode.\n    | \"a\" -- Append mode.\n    | \"r+\" -- Update mode, all previous data is preserved.\n    | \"w+\" -- Update mode, all previous data is erased.\n    | \"a+\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file.\n    | \"rb\" -- Read mode. (in binary mode.)\n    | \"wb\" -- Write mode. (in binary mode.)\n    | \"ab\" -- Append mode. (in binary mode.)\n    | \"r+b\" -- Update mode, all previous data is preserved. (in binary mode.)\n    | \"w+b\" -- Update mode, all previous data is erased. (in binary mode.)\n    | \"a+b\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file. (in binary mode.)\n```",
        "name": "io.open",
        "rawdesc": "\nOpens a file, in the mode specified in the string `mode`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.open)\n\n\n```lua\nmode:\n   -> \"r\" -- Read mode.\n    | \"w\" -- Write mode.\n    | \"a\" -- Append mode.\n    | \"r+\" -- Update mode, all previous data is preserved.\n    | \"w+\" -- Update mode, all previous data is erased.\n    | \"a+\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file.\n    | \"rb\" -- Read mode. (in binary mode.)\n    | \"wb\" -- Write mode. (in binary mode.)\n    | \"ab\" -- Append mode. (in binary mode.)\n    | \"r+b\" -- Update mode, all previous data is preserved. (in binary mode.)\n    | \"w+b\" -- Update mode, all previous data is erased. (in binary mode.)\n    | \"a+b\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file. (in binary mode.)\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-file)\n",
                            "finish": 1040023,
                            "name": "file",
                            "rawdesc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-file)\n",
                            "start": 1040019,
                            "type": "local",
                            "view": "string|file*"
                        }
                    ],
                    "desc": "\nSets `file` as the default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.output)",
                    "finish": 1040028,
                    "rawdesc": "\nSets `file` as the default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.output)",
                    "start": 1040000,
                    "type": "function",
                    "view": "function io.output(file: string|file*)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 1040018,
                "start": 1040009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets `file` as the default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.output)",
        "name": "io.output",
        "rawdesc": "\nSets `file` as the default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.output)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1190022,
                            "name": "prog",
                            "start": 1190018,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 1190028,
                            "name": "mode",
                            "start": 1190024,
                            "type": "local",
                            "view": "(\"r\"|\"w\")?"
                        }
                    ],
                    "desc": "\nStarts program prog in a separated process.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.popen)\n\n\n```lua\nmode:\n    | \"r\" -- Read data from this program by `file`.\n    | \"w\" -- Write data to this program by `file`.\n```",
                    "finish": 1190033,
                    "rawdesc": "\nStarts program prog in a separated process.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.popen)\n\n\n```lua\nmode:\n    | \"r\" -- Read data from this program by `file`.\n    | \"w\" -- Write data to this program by `file`.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*?"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1190000,
                    "type": "function",
                    "view": "function io.popen(prog: string, mode?: \"r\"|\"w\")\n  -> file*?\n  2. errmsg: string?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 1190017,
                "start": 1190009,
                "type": "setfield"
            }
        ],
        "desc": "\nStarts program prog in a separated process.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.popen)\n\n\n```lua\nmode:\n    | \"r\" -- Read data from this program by `file`.\n    | \"w\" -- Write data to this program by `file`.\n```",
        "name": "io.popen",
        "rawdesc": "\nStarts program prog in a separated process.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.popen)\n\n\n```lua\nmode:\n    | \"r\" -- Read data from this program by `file`.\n    | \"w\" -- Write data to this program by `file`.\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1300020,
                            "start": 1300017,
                            "type": "...",
                            "view": "string|integer|\"L\"|\"a\"|\"l\"...(+1)"
                        }
                    ],
                    "desc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.read)\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                    "finish": 1300025,
                    "rawdesc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.read)\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 1300000,
                    "type": "function",
                    "view": "function io.read(...string|integer|\"L\"|\"a\"|\"l\"...(+1))\n  -> any\n  2. ...any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 1300016,
                "start": 1300009,
                "type": "setfield"
            }
        ],
        "desc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.read)\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
        "name": "io.read",
        "rawdesc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.read)\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nIn case of success, returns a handle for a temporary file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.tmpfile)",
                    "finish": 1390025,
                    "rawdesc": "\nIn case of success, returns a handle for a temporary file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.tmpfile)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*"
                        }
                    ],
                    "start": 1390000,
                    "type": "function",
                    "view": "function io.tmpfile()\n  -> file*"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 1390019,
                "start": 1390009,
                "type": "setfield"
            }
        ],
        "desc": "\nIn case of success, returns a handle for a temporary file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.tmpfile)",
        "name": "io.tmpfile",
        "rawdesc": "\nIn case of success, returns a handle for a temporary file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.tmpfile)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-file)\n",
                            "finish": 1540021,
                            "name": "file",
                            "rawdesc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-file)\n",
                            "start": 1540017,
                            "type": "local",
                            "view": "file*"
                        }
                    ],
                    "desc": "\nChecks whether `obj` is a valid file handle.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.type)\n\n\n```lua\nreturn #1:\n    | \"file\" -- Is an open file handle.\n    | \"closed file\" -- Is a closed file handle.\n    | `nil` -- Is not a file handle.\n```",
                    "finish": 1540026,
                    "rawdesc": "\nChecks whether `obj` is a valid file handle.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.type)\n\n\n```lua\nreturn #1:\n    | \"file\" -- Is an open file handle.\n    | \"closed file\" -- Is a closed file handle.\n    | `nil` -- Is not a file handle.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "\"closed file\"|\"file\"|`nil`"
                        }
                    ],
                    "start": 1540000,
                    "type": "function",
                    "view": "function io.type(file: file*)\n  -> \"closed file\"|\"file\"|`nil`"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 1540016,
                "start": 1540009,
                "type": "setfield"
            }
        ],
        "desc": "\nChecks whether `obj` is a valid file handle.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.type)\n\n\n```lua\nreturn #1:\n    | \"file\" -- Is an open file handle.\n    | \"closed file\" -- Is a closed file handle.\n    | `nil` -- Is not a file handle.\n```",
        "name": "io.type",
        "rawdesc": "\nChecks whether `obj` is a valid file handle.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.type)\n\n\n```lua\nreturn #1:\n    | \"file\" -- Is an open file handle.\n    | \"closed file\" -- Is a closed file handle.\n    | `nil` -- Is not a file handle.\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1630021,
                            "start": 1630018,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nWrites the value of each of its arguments to default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.write)",
                    "finish": 1630026,
                    "rawdesc": "\nWrites the value of each of its arguments to default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.write)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1630000,
                    "type": "function",
                    "view": "function io.write(...any)\n  -> file*\n  2. errmsg: string?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 1630017,
                "start": 1630009,
                "type": "setfield"
            }
        ],
        "desc": "\nWrites the value of each of its arguments to default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.write)",
        "name": "io.write",
        "rawdesc": "\nWrites the value of each of its arguments to default output file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-io.write)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 180013,
                    "start": 180011,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 180008,
                "start": 180000,
                "type": "setglobal"
            }
        ],
        "name": "ioHelper",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "This string acts as a filter for what files can be chosen. For example `*.*` selects all files, where `*.txt` selects only text files.",
                            "finish": 9180033,
                            "name": "filter",
                            "rawdesc": "This string acts as a filter for what files can be chosen. For example `*.*` selects all files, where `*.txt` selects only text files.",
                            "start": 9180027,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "desc": "Unknown.",
                            "finish": 9180039,
                            "name": "type",
                            "rawdesc": "Unknown.",
                            "start": 9180035,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Opens a file dialouge and returns the file path of the file chosen.\n\n@*param* `filter` โ This string acts as a filter for what files can be chosen. For example `*.*` selects all files, where `*.txt` selects only text files.\n\n@*param* `type` โ Unknown.",
                    "finish": 9180044,
                    "rawdesc": "Opens a file dialouge and returns the file path of the file chosen.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 9180000,
                    "type": "function",
                    "view": "function ioHelper.filediag(filter: string, type: integer)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 9180026,
                "start": 9180009,
                "type": "setfield"
            }
        ],
        "desc": "Opens a file dialouge and returns the file path of the file chosen.\n\n@*param* `filter` โ This string acts as a filter for what files can be chosen. For example `*.*` selects all files, where `*.txt` selects only text files.\n\n@*param* `type` โ Unknown.",
        "name": "ioHelper.filediag",
        "rawdesc": "Opens a file dialouge and returns the file path of the file chosen.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1080017,
                            "name": "t",
                            "start": 1080016,
                            "type": "local",
                            "view": "<T:table>"
                        }
                    ],
                    "desc": "\nReturns three values (an iterator function, the table `t`, and `0`) so that the construction\n```lua\n    for i,v in ipairs(t) do body end\n```\nwill iterate over the keyโvalue pairs `(1,t[1]), (2,t[2]), ...`, up to the first absent index.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-ipairs)",
                    "finish": 1080022,
                    "rawdesc": "\nReturns three values (an iterator function, the table `t`, and `0`) so that the construction\n```lua\n    for i,v in ipairs(t) do body end\n```\nwill iterate over the keyโvalue pairs `(1,t[1]), (2,t[2]), ...`, up to the first absent index.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-ipairs)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun(table: <V>[], i?: integer):integer, <V>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T:table>"
                        },
                        {
                            "name": "i",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1080000,
                    "type": "function",
                    "view": "function ipairs(t: <T:table>)\n  -> fun(table: <V>[], i?: integer):integer, <V>\n  2. <T:table>\n  3. i: integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 1080015,
                "start": 1080009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReturns three values (an iterator function, the table `t`, and `0`) so that the construction\n```lua\n    for i,v in ipairs(t) do body end\n```\nwill iterate over the keyโvalue pairs `(1,t[1]), (2,t[2]), ...`, up to the first absent index.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-ipairs)",
        "name": "ipairs",
        "rawdesc": "\nReturns three values (an iterator function, the table `t`, and `0`) so that the construction\n```lua\n    for i,v in ipairs(t) do body end\n```\nwill iterate over the keyโvalue pairs `(1,t[1]), (2,t[2]), ...`, up to the first absent index.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-ipairs)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 150011,
                    "start": 150009,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 150006,
                "start": 150000,
                "type": "setglobal"
            }
        ],
        "name": "joypad",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Returns the number of input frames that have happened since the emulator was\nstarted. It does not reset when a movie is started. Alias for\n`emu.inputcount`.\n\n@*return* `inputcount` โ The number of input frames that have happened since the emulator was started.",
                    "finish": 8630027,
                    "rawdesc": "Returns the number of input frames that have happened since the emulator was\nstarted. It does not reset when a movie is started. Alias for\n`emu.inputcount`.",
                    "returns": [
                        {
                            "desc": "The number of input frames that have happened since the emulator was started.",
                            "name": "inputcount",
                            "rawdesc": "The number of input frames that have happened since the emulator was started.",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 8630000,
                    "type": "function",
                    "view": "function joypad.count()\n  -> inputcount: integer"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 8630021,
                "start": 8630009,
                "type": "setfield"
            }
        ],
        "desc": "Returns the number of input frames that have happened since the emulator was\nstarted. It does not reset when a movie is started. Alias for\n`emu.inputcount`.\n\n@*return* `inputcount` โ The number of input frames that have happened since the emulator was started.",
        "name": "joypad.count",
        "rawdesc": "Returns the number of input frames that have happened since the emulator was\nstarted. It does not reset when a movie is started. Alias for\n`emu.inputcount`.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 8490024,
                            "name": "port",
                            "start": 8490020,
                            "type": "local",
                            "view": "1|2|3|4"
                        }
                    ],
                    "desc": "Gets the currently pressed game buttons and stick direction for a given port.\nNote that the `y` coordinate of the stick is the opposite of what is shown on\nTAS Input.\n\n```lua\nport:\n    | 1\n    | 2\n    | 3\n    | 4\n```",
                    "finish": 8490029,
                    "rawdesc": "Gets the currently pressed game buttons and stick direction for a given port.\nNote that the `y` coordinate of the stick is the opposite of what is shown on\nTAS Input.\n\n```lua\nport:\n    | 1\n    | 2\n    | 3\n    | 4\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 8490000,
                    "type": "function",
                    "view": "function joypad.get(port: 1|2|3|4)\n  -> table"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 8490019,
                "start": 8490009,
                "type": "setfield"
            }
        ],
        "desc": "Gets the currently pressed game buttons and stick direction for a given port.\nNote that the `y` coordinate of the stick is the opposite of what is shown on\nTAS Input.\n\n```lua\nport:\n    | 1\n    | 2\n    | 3\n    | 4\n```",
        "name": "joypad.get",
        "rawdesc": "Gets the currently pressed game buttons and stick direction for a given port.\nNote that the `y` coordinate of the stick is the opposite of what is shown on\nTAS Input.\n\n```lua\nport:\n    | 1\n    | 2\n    | 3\n    | 4\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 8560024,
                            "name": "port",
                            "start": 8560020,
                            "type": "local",
                            "view": "1|2|3|4"
                        },
                        {
                            "finish": 8560032,
                            "name": "inputs",
                            "start": 8560026,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "Sets the current joypad to `inputs`. If you do not specify one or more\ninputs, they will be set to `false` for buttons or `0` for stick coordinates.\n\n```lua\nport:\n    | 1\n    | 2\n    | 3\n    | 4\n```",
                    "finish": 8560037,
                    "rawdesc": "Sets the current joypad to `inputs`. If you do not specify one or more\ninputs, they will be set to `false` for buttons or `0` for stick coordinates.\n\n```lua\nport:\n    | 1\n    | 2\n    | 3\n    | 4\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 8560000,
                    "type": "function",
                    "view": "function joypad.set(port: 1|2|3|4, inputs: table)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 8560019,
                "start": 8560009,
                "type": "setfield"
            }
        ],
        "desc": "Sets the current joypad to `inputs`. If you do not specify one or more\ninputs, they will be set to `false` for buttons or `0` for stick coordinates.\n\n```lua\nport:\n    | 1\n    | 2\n    | 3\n    | 4\n```",
        "name": "joypad.set",
        "rawdesc": "Sets the current joypad to `inputs`. If you do not specify one or more\ninputs, they will be set to `false` for buttons or `0` for stick coordinates.\n\n```lua\nport:\n    | 1\n    | 2\n    | 3\n    | 4\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1300019,
                            "name": "chunk",
                            "start": 1300014,
                            "type": "local",
                            "view": "string|function"
                        },
                        {
                            "finish": 1300030,
                            "name": "chunkname",
                            "start": 1300021,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": 1300036,
                            "name": "mode",
                            "start": 1300032,
                            "type": "local",
                            "view": "(\"b\"|\"bt\"|\"t\")?"
                        },
                        {
                            "finish": 1300041,
                            "name": "env",
                            "start": 1300038,
                            "type": "local",
                            "view": "table?"
                        }
                    ],
                    "desc": "\nLoads a chunk.\n\nIf `chunk` is a string, the chunk is this string. If `chunk` is a function, `load` calls it repeatedly to get the chunk pieces. Each call to `chunk` must return a string that concatenates with previous results. A return of an empty string, `nil`, or no value signals the end of the chunk.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-load)\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
                    "finish": 1300046,
                    "rawdesc": "\nLoads a chunk.\n\nIf `chunk` is a string, the chunk is this string. If `chunk` is a function, `load` calls it repeatedly to get the chunk pieces. Each call to `chunk` must return a string that concatenates with previous results. A return of an empty string, `nil`, or no value signals the end of the chunk.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-load)\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function?"
                        },
                        {
                            "name": "error_message",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1300000,
                    "type": "function",
                    "view": "function load(chunk: string|function, chunkname?: string, mode?: \"b\"|\"bt\"|\"t\", env?: table)\n  -> function?\n  2. error_message: string?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 1300013,
                "start": 1300009,
                "type": "setglobal"
            }
        ],
        "desc": "\nLoads a chunk.\n\nIf `chunk` is a string, the chunk is this string. If `chunk` is a function, `load` calls it repeatedly to get the chunk pieces. Each call to `chunk` must return a string that concatenates with previous results. A return of an empty string, `nil`, or no value signals the end of the chunk.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-load)\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
        "name": "load",
        "rawdesc": "\nLoads a chunk.\n\nIf `chunk` is a string, the chunk is this string. If `chunk` is a function, `load` calls it repeatedly to get the chunk pieces. Each call to `chunk` must return a string that concatenates with previous results. A return of an empty string, `nil`, or no value signals the end of the chunk.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-load)\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1430026,
                            "name": "filename",
                            "start": 1430018,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": 1430032,
                            "name": "mode",
                            "start": 1430028,
                            "type": "local",
                            "view": "(\"b\"|\"bt\"|\"t\")?"
                        },
                        {
                            "finish": 1430037,
                            "name": "env",
                            "start": 1430034,
                            "type": "local",
                            "view": "table?"
                        }
                    ],
                    "desc": "\nLoads a chunk from file `filename` or from the standard input, if no file name is given.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-loadfile)\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
                    "finish": 1430042,
                    "rawdesc": "\nLoads a chunk from file `filename` or from the standard input, if no file name is given.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-loadfile)\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function?"
                        },
                        {
                            "name": "error_message",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1430000,
                    "type": "function",
                    "view": "function loadfile(filename?: string, mode?: \"b\"|\"bt\"|\"t\", env?: table)\n  -> function?\n  2. error_message: string?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 1430017,
                "start": 1430009,
                "type": "setglobal"
            }
        ],
        "desc": "\nLoads a chunk from file `filename` or from the standard input, if no file name is given.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-loadfile)\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
        "name": "loadfile",
        "rawdesc": "\nLoads a chunk from file `filename` or from the standard input, if no file name is given.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-loadfile)\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1560024,
                            "name": "text",
                            "start": 1560020,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 1560035,
                            "name": "chunkname",
                            "start": 1560026,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nLoads a chunk from the given string.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-loadstring)",
                    "finish": 1560040,
                    "rawdesc": "\nLoads a chunk from the given string.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-loadstring)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function?"
                        },
                        {
                            "name": "error_message",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1560000,
                    "type": "function",
                    "view": "function loadstring(text: string, chunkname?: string)\n  -> function?\n  2. error_message: string?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 1560019,
                "start": 1560009,
                "type": "setglobal"
            }
        ],
        "desc": "\nLoads a chunk from the given string.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-loadstring)",
        "name": "loadstring",
        "rawdesc": "\nLoads a chunk from the given string.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-loadstring)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 320009,
                    "start": 320007,
                    "type": "table",
                    "view": "mathlib"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 320004,
                "start": 320000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math)\n",
        "name": "math",
        "rawdesc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math)\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 430019,
                            "name": "x",
                            "start": 430018,
                            "type": "local",
                            "view": "<Number:number>"
                        }
                    ],
                    "desc": "\nReturns the absolute value of `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.abs)",
                    "finish": 430024,
                    "rawdesc": "\nReturns the absolute value of `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.abs)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<Number:number>"
                        }
                    ],
                    "start": 430000,
                    "type": "function",
                    "view": "function math.abs(x: <Number:number>)\n  -> <Number:number>"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 430017,
                "start": 430009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the absolute value of `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.abs)",
        "name": "math.abs",
        "rawdesc": "\nReturns the absolute value of `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.abs)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 530020,
                            "name": "x",
                            "start": 530019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the arc cosine of `x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.acos)",
                    "finish": 530025,
                    "rawdesc": "\nReturns the arc cosine of `x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.acos)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 530000,
                    "type": "function",
                    "view": "function math.acos(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 530018,
                "start": 530009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the arc cosine of `x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.acos)",
        "name": "math.acos",
        "rawdesc": "\nReturns the arc cosine of `x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.acos)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 630020,
                            "name": "x",
                            "start": 630019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the arc sine of `x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.asin)",
                    "finish": 630025,
                    "rawdesc": "\nReturns the arc sine of `x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.asin)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 630000,
                    "type": "function",
                    "view": "function math.asin(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 630018,
                "start": 630009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the arc sine of `x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.asin)",
        "name": "math.asin",
        "rawdesc": "\nReturns the arc sine of `x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.asin)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 740020,
                            "name": "y",
                            "start": 740019,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 740023,
                            "name": "x",
                            "start": 740022,
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.atan)",
                    "finish": 740028,
                    "rawdesc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.atan)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 740000,
                    "type": "function",
                    "view": "function math.atan(y: number, x?: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 740018,
                "start": 740009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.atan)",
        "name": "math.atan",
        "rawdesc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.atan)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 860021,
                            "name": "y",
                            "start": 860020,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 860024,
                            "name": "x",
                            "start": 860023,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.atan2)",
                    "finish": 860029,
                    "rawdesc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.atan2)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 860000,
                    "type": "function",
                    "view": "function math.atan2(y: number, x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 860019,
                "start": 860009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.atan2)",
        "name": "math.atan2",
        "rawdesc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.atan2)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 960020,
                            "name": "x",
                            "start": 960019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the smallest integral value larger than or equal to `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.ceil)",
                    "finish": 960025,
                    "rawdesc": "\nReturns the smallest integral value larger than or equal to `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.ceil)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 960000,
                    "type": "function",
                    "view": "function math.ceil(x: number)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 960018,
                "start": 960009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the smallest integral value larger than or equal to `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.ceil)",
        "name": "math.ceil",
        "rawdesc": "\nReturns the smallest integral value larger than or equal to `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.ceil)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1060019,
                            "name": "x",
                            "start": 1060018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the cosine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.cos)",
                    "finish": 1060024,
                    "rawdesc": "\nReturns the cosine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.cos)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1060000,
                    "type": "function",
                    "view": "function math.cos(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1060017,
                "start": 1060009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the cosine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.cos)",
        "name": "math.cos",
        "rawdesc": "\nReturns the cosine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.cos)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1170020,
                            "name": "x",
                            "start": 1170019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the hyperbolic cosine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.cosh)",
                    "finish": 1170025,
                    "rawdesc": "\nReturns the hyperbolic cosine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.cosh)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1170000,
                    "type": "function",
                    "view": "function math.cosh(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1170018,
                "start": 1170009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the hyperbolic cosine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.cosh)",
        "name": "math.cosh",
        "rawdesc": "\nReturns the hyperbolic cosine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.cosh)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1270019,
                            "name": "x",
                            "start": 1270018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nConverts the angle `x` from radians to degrees.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.deg)",
                    "finish": 1270024,
                    "rawdesc": "\nConverts the angle `x` from radians to degrees.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.deg)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1270000,
                    "type": "function",
                    "view": "function math.deg(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1270017,
                "start": 1270009,
                "type": "setfield"
            }
        ],
        "desc": "\nConverts the angle `x` from radians to degrees.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.deg)",
        "name": "math.deg",
        "rawdesc": "\nConverts the angle `x` from radians to degrees.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.deg)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1370019,
                            "name": "x",
                            "start": 1370018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the value `e^x` (where `e` is the base of natural logarithms).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.exp)",
                    "finish": 1370024,
                    "rawdesc": "\nReturns the value `e^x` (where `e` is the base of natural logarithms).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.exp)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1370000,
                    "type": "function",
                    "view": "function math.exp(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1370017,
                "start": 1370009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the value `e^x` (where `e` is the base of natural logarithms).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.exp)",
        "name": "math.exp",
        "rawdesc": "\nReturns the value `e^x` (where `e` is the base of natural logarithms).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.exp)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1470021,
                            "name": "x",
                            "start": 1470020,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the largest integral value smaller than or equal to `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.floor)",
                    "finish": 1470026,
                    "rawdesc": "\nReturns the largest integral value smaller than or equal to `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.floor)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1470000,
                    "type": "function",
                    "view": "function math.floor(x: number)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1470019,
                "start": 1470009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the largest integral value smaller than or equal to `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.floor)",
        "name": "math.floor",
        "rawdesc": "\nReturns the largest integral value smaller than or equal to `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.floor)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1580020,
                            "name": "x",
                            "start": 1580019,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 1580023,
                            "name": "y",
                            "start": 1580022,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the remainder of the division of `x` by `y` that rounds the quotient towards zero.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.fmod)",
                    "finish": 1580028,
                    "rawdesc": "\nReturns the remainder of the division of `x` by `y` that rounds the quotient towards zero.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.fmod)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1580000,
                    "type": "function",
                    "view": "function math.fmod(x: number, y: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1580018,
                "start": 1580009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the remainder of the division of `x` by `y` that rounds the quotient towards zero.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.fmod)",
        "name": "math.fmod",
        "rawdesc": "\nReturns the remainder of the division of `x` by `y` that rounds the quotient towards zero.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.fmod)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1700021,
                            "name": "x",
                            "start": 1700020,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nDecompose `x` into tails and exponents. Returns `m` and `e` such that `x = m * (2 ^ e)`, `e` is an integer and the absolute value of `m` is in the range [0.5, 1) (or zero when `x` is zero).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.frexp)",
                    "finish": 1700026,
                    "rawdesc": "\nDecompose `x` into tails and exponents. Returns `m` and `e` such that `x = m * (2 ^ e)`, `e` is an integer and the absolute value of `m` is in the range [0.5, 1) (or zero when `x` is zero).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.frexp)",
                    "returns": [
                        {
                            "name": "m",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "e",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1700000,
                    "type": "function",
                    "view": "function math.frexp(x: number)\n  -> m: number\n  2. e: number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1700019,
                "start": 1700009,
                "type": "setfield"
            }
        ],
        "desc": "\nDecompose `x` into tails and exponents. Returns `m` and `e` such that `x = m * (2 ^ e)`, `e` is an integer and the absolute value of `m` is in the range [0.5, 1) (or zero when `x` is zero).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.frexp)",
        "name": "math.frexp",
        "rawdesc": "\nDecompose `x` into tails and exponents. Returns `m` and `e` such that `x = m * (2 ^ e)`, `e` is an integer and the absolute value of `m` is in the range [0.5, 1) (or zero when `x` is zero).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.frexp)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1820021,
                            "name": "m",
                            "start": 1820020,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 1820024,
                            "name": "e",
                            "start": 1820023,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns `m * (2 ^ e)` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.ldexp)",
                    "finish": 1820029,
                    "rawdesc": "\nReturns `m * (2 ^ e)` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.ldexp)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1820000,
                    "type": "function",
                    "view": "function math.ldexp(m: number, e: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1820019,
                "start": 1820009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns `m * (2 ^ e)` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.ldexp)",
        "name": "math.ldexp",
        "rawdesc": "\nReturns `m * (2 ^ e)` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.ldexp)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1930019,
                            "name": "x",
                            "start": 1930018,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 1930025,
                            "name": "base",
                            "start": 1930021,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the logarithm of `x` in the given base.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.log)",
                    "finish": 1930030,
                    "rawdesc": "\nReturns the logarithm of `x` in the given base.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.log)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1930000,
                    "type": "function",
                    "view": "function math.log(x: number, base?: integer)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1930017,
                "start": 1930009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the logarithm of `x` in the given base.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.log)",
        "name": "math.log",
        "rawdesc": "\nReturns the logarithm of `x` in the given base.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.log)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2040021,
                            "name": "x",
                            "start": 2040020,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the base-10 logarithm of x.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.log10)",
                    "finish": 2040026,
                    "rawdesc": "\nReturns the base-10 logarithm of x.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.log10)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2040000,
                    "type": "function",
                    "view": "function math.log10(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2040019,
                "start": 2040009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the base-10 logarithm of x.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.log10)",
        "name": "math.log10",
        "rawdesc": "\nReturns the base-10 logarithm of x.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.log10)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2160019,
                            "name": "x",
                            "start": 2160018,
                            "type": "local",
                            "view": "<Number:number>"
                        },
                        {
                            "finish": 2160024,
                            "start": 2160021,
                            "type": "...",
                            "view": "<Number:number>"
                        }
                    ],
                    "desc": "\nReturns the argument with the maximum value, according to the Lua operator `<`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.max)",
                    "finish": 2160029,
                    "rawdesc": "\nReturns the argument with the maximum value, according to the Lua operator `<`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.max)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<Number:number>"
                        }
                    ],
                    "start": 2160000,
                    "type": "function",
                    "view": "function math.max(x: <Number:number>, ...<Number:number>)\n  -> <Number:number>"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2160017,
                "start": 2160009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the argument with the maximum value, according to the Lua operator `<`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.max)",
        "name": "math.max",
        "rawdesc": "\nReturns the argument with the maximum value, according to the Lua operator `<`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.max)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2280019,
                            "name": "x",
                            "start": 2280018,
                            "type": "local",
                            "view": "<Number:number>"
                        },
                        {
                            "finish": 2280024,
                            "start": 2280021,
                            "type": "...",
                            "view": "<Number:number>"
                        }
                    ],
                    "desc": "\nReturns the argument with the minimum value, according to the Lua operator `<`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.min)",
                    "finish": 2280029,
                    "rawdesc": "\nReturns the argument with the minimum value, according to the Lua operator `<`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.min)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<Number:number>"
                        }
                    ],
                    "start": 2280000,
                    "type": "function",
                    "view": "function math.min(x: <Number:number>, ...<Number:number>)\n  -> <Number:number>"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2280017,
                "start": 2280009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the argument with the minimum value, according to the Lua operator `<`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.min)",
        "name": "math.min",
        "rawdesc": "\nReturns the argument with the minimum value, according to the Lua operator `<`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.min)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2390020,
                            "name": "x",
                            "start": 2390019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the integral part of `x` and the fractional part of `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.modf)",
                    "finish": 2390025,
                    "rawdesc": "\nReturns the integral part of `x` and the fractional part of `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.modf)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2390000,
                    "type": "function",
                    "view": "function math.modf(x: number)\n  -> integer\n  2. number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2390018,
                "start": 2390009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the integral part of `x` and the fractional part of `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.modf)",
        "name": "math.modf",
        "rawdesc": "\nReturns the integral part of `x` and the fractional part of `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.modf)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2510019,
                            "name": "x",
                            "start": 2510018,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 2510022,
                            "name": "y",
                            "start": 2510021,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns `x ^ y` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.pow)",
                    "finish": 2510027,
                    "rawdesc": "\nReturns `x ^ y` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.pow)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2510000,
                    "type": "function",
                    "view": "function math.pow(x: number, y: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2510017,
                "start": 2510009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns `x ^ y` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.pow)",
        "name": "math.pow",
        "rawdesc": "\nReturns `x ^ y` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.pow)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2610019,
                            "name": "x",
                            "start": 2610018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nConverts the angle `x` from degrees to radians.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.rad)",
                    "finish": 2610024,
                    "rawdesc": "\nConverts the angle `x` from degrees to radians.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.rad)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2610000,
                    "type": "function",
                    "view": "function math.rad(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2610017,
                "start": 2610009,
                "type": "setfield"
            }
        ],
        "desc": "\nConverts the angle `x` from degrees to radians.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.rad)",
        "name": "math.rad",
        "rawdesc": "\nConverts the angle `x` from degrees to radians.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.rad)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2770022,
                            "name": "m",
                            "start": 2770021,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 2770025,
                            "name": "n",
                            "start": 2770024,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\n* `math.random()`: Returns a float in the range [0,1).\n* `math.random(n)`: Returns a integer in the range [1, n].\n* `math.random(m, n)`: Returns a integer in the range [m, n].\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.random)",
                    "finish": 2770030,
                    "rawdesc": "\n* `math.random()`: Returns a float in the range [0,1).\n* `math.random(n)`: Returns a integer in the range [1, n].\n* `math.random(m, n)`: Returns a integer in the range [m, n].\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.random)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 2770000,
                    "type": "function",
                    "view": "function math.random(m: integer, n: integer)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2770020,
                "start": 2770009,
                "type": "setfield"
            }
        ],
        "desc": "\n* `math.random()`: Returns a float in the range [0,1).\n* `math.random(n)`: Returns a integer in the range [1, n].\n* `math.random(m, n)`: Returns a integer in the range [m, n].\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.random)",
        "name": "math.random",
        "rawdesc": "\n* `math.random()`: Returns a float in the range [0,1).\n* `math.random(n)`: Returns a integer in the range [1, n].\n* `math.random(m, n)`: Returns a integer in the range [m, n].\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.random)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2890026,
                            "name": "x",
                            "start": 2890025,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 2890029,
                            "name": "y",
                            "start": 2890028,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\n* `math.randomseed(x, y)`: Concatenate `x` and `y` into a 128-bit `seed` to reinitialize the pseudo-random generator.\n* `math.randomseed(x)`: Equate to `math.randomseed(x, 0)` .\n* `math.randomseed()`: Generates a seed with a weak attempt for randomness.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.randomseed)",
                    "finish": 2890034,
                    "rawdesc": "\n* `math.randomseed(x, y)`: Concatenate `x` and `y` into a 128-bit `seed` to reinitialize the pseudo-random generator.\n* `math.randomseed(x)`: Equate to `math.randomseed(x, 0)` .\n* `math.randomseed()`: Generates a seed with a weak attempt for randomness.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.randomseed)",
                    "start": 2890000,
                    "type": "function",
                    "view": "function math.randomseed(x?: integer, y?: integer)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2890024,
                "start": 2890009,
                "type": "setfield"
            }
        ],
        "desc": "\n* `math.randomseed(x, y)`: Concatenate `x` and `y` into a 128-bit `seed` to reinitialize the pseudo-random generator.\n* `math.randomseed(x)`: Equate to `math.randomseed(x, 0)` .\n* `math.randomseed()`: Generates a seed with a weak attempt for randomness.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.randomseed)",
        "name": "math.randomseed",
        "rawdesc": "\n* `math.randomseed(x, y)`: Concatenate `x` and `y` into a 128-bit `seed` to reinitialize the pseudo-random generator.\n* `math.randomseed(x)`: Equate to `math.randomseed(x, 0)` .\n* `math.randomseed()`: Generates a seed with a weak attempt for randomness.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.randomseed)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2990019,
                            "name": "x",
                            "start": 2990018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the sine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.sin)",
                    "finish": 2990024,
                    "rawdesc": "\nReturns the sine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.sin)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2990000,
                    "type": "function",
                    "view": "function math.sin(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2990017,
                "start": 2990009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the sine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.sin)",
        "name": "math.sin",
        "rawdesc": "\nReturns the sine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.sin)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3100020,
                            "name": "x",
                            "start": 3100019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the hyperbolic sine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.sinh)",
                    "finish": 3100025,
                    "rawdesc": "\nReturns the hyperbolic sine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.sinh)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 3100000,
                    "type": "function",
                    "view": "function math.sinh(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 3100018,
                "start": 3100009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the hyperbolic sine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.sinh)",
        "name": "math.sinh",
        "rawdesc": "\nReturns the hyperbolic sine of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.sinh)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3200020,
                            "name": "x",
                            "start": 3200019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the square root of `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.sqrt)",
                    "finish": 3200025,
                    "rawdesc": "\nReturns the square root of `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.sqrt)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 3200000,
                    "type": "function",
                    "view": "function math.sqrt(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 3200018,
                "start": 3200009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the square root of `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.sqrt)",
        "name": "math.sqrt",
        "rawdesc": "\nReturns the square root of `x`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.sqrt)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3300019,
                            "name": "x",
                            "start": 3300018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the tangent of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.tan)",
                    "finish": 3300024,
                    "rawdesc": "\nReturns the tangent of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.tan)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 3300000,
                    "type": "function",
                    "view": "function math.tan(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 3300017,
                "start": 3300009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the tangent of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.tan)",
        "name": "math.tan",
        "rawdesc": "\nReturns the tangent of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.tan)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3410020,
                            "name": "x",
                            "start": 3410019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the hyperbolic tangent of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.tanh)",
                    "finish": 3410025,
                    "rawdesc": "\nReturns the hyperbolic tangent of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.tanh)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 3410000,
                    "type": "function",
                    "view": "function math.tanh(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 3410018,
                "start": 3410009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the hyperbolic tangent of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.tanh)",
        "name": "math.tanh",
        "rawdesc": "\nReturns the hyperbolic tangent of `x` (assumed to be in radians).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.tanh)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3520025,
                            "name": "x",
                            "start": 3520024,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nMiss locale <math.tointeger>\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.tointeger)",
                    "finish": 3520030,
                    "rawdesc": "\nMiss locale <math.tointeger>\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.tointeger)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": 3520000,
                    "type": "function",
                    "view": "function math.tointeger(x: any)\n  -> integer?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 3520023,
                "start": 3520009,
                "type": "setfield"
            }
        ],
        "desc": "\nMiss locale <math.tointeger>\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.tointeger)",
        "name": "math.tointeger",
        "rawdesc": "\nMiss locale <math.tointeger>\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.tointeger)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3650020,
                            "name": "x",
                            "start": 3650019,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nMiss locale <math.type>\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.type)\n\n\n```lua\nreturn #1:\n    | \"integer\"\n    | \"float\"\n    | 'nil'\n```",
                    "finish": 3650025,
                    "rawdesc": "\nMiss locale <math.type>\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.type)\n\n\n```lua\nreturn #1:\n    | \"integer\"\n    | \"float\"\n    | 'nil'\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "\"float\"|\"integer\"|'nil'"
                        }
                    ],
                    "start": 3650000,
                    "type": "function",
                    "view": "function math.type(x: any)\n  -> \"float\"|\"integer\"|'nil'"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 3650018,
                "start": 3650009,
                "type": "setfield"
            }
        ],
        "desc": "\nMiss locale <math.type>\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.type)\n\n\n```lua\nreturn #1:\n    | \"integer\"\n    | \"float\"\n    | 'nil'\n```",
        "name": "math.type",
        "rawdesc": "\nMiss locale <math.type>\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.type)\n\n\n```lua\nreturn #1:\n    | \"integer\"\n    | \"float\"\n    | 'nil'\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3760019,
                            "name": "m",
                            "start": 3760018,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3760022,
                            "name": "n",
                            "start": 3760021,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nMiss locale <math.ult>\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.ult)",
                    "finish": 3760027,
                    "rawdesc": "\nMiss locale <math.ult>\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.ult)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 3760000,
                    "type": "function",
                    "view": "function math.ult(m: integer, n: integer)\n  -> boolean"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 3760017,
                "start": 3760009,
                "type": "setfield"
            }
        ],
        "desc": "\nMiss locale <math.ult>\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.ult)",
        "name": "math.ult",
        "rawdesc": "\nMiss locale <math.ult>\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-math.ult)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 110011,
                    "start": 110009,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 110006,
                "start": 110000,
                "type": "setglobal"
            }
        ],
        "name": "memory",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2790029,
                            "name": "n",
                            "start": 2790028,
                            "type": "local",
                            "view": "integer[]"
                        }
                    ],
                    "desc": "Reinterprets the bits of a 8 byte integer `n` as a double and returns it.\nThis does not convert from an int to a float, but reinterprets the memory.",
                    "finish": 2790034,
                    "rawdesc": "Reinterprets the bits of a 8 byte integer `n` as a double and returns it.\nThis does not convert from an int to a float, but reinterprets the memory.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2790000,
                    "type": "function",
                    "view": "function memory.doubletoint(n: integer[])\n  -> number"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 2790027,
                "start": 2790009,
                "type": "setfield"
            }
        ],
        "desc": "Reinterprets the bits of a 8 byte integer `n` as a double and returns it.\nThis does not convert from an int to a float, but reinterprets the memory.",
        "name": "memory.doubletoint",
        "rawdesc": "Reinterprets the bits of a 8 byte integer `n` as a double and returns it.\nThis does not convert from an int to a float, but reinterprets the memory.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2720028,
                            "name": "n",
                            "start": 2720027,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Reinterprets the bits of a float `n` as a 4 byte integer and returns it. This\n does not convert from an int to a float, but reinterprets the memory.",
                    "finish": 2720033,
                    "rawdesc": "Reinterprets the bits of a float `n` as a 4 byte integer and returns it. This\n does not convert from an int to a float, but reinterprets the memory.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 2720000,
                    "type": "function",
                    "view": "function memory.floattoint(n: number)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 2720026,
                "start": 2720009,
                "type": "setfield"
            }
        ],
        "desc": "Reinterprets the bits of a float `n` as a 4 byte integer and returns it. This\n does not convert from an int to a float, but reinterprets the memory.",
        "name": "memory.floattoint",
        "rawdesc": "Reinterprets the bits of a float `n` as a 4 byte integer and returns it. This\n does not convert from an int to a float, but reinterprets the memory.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2650029,
                            "name": "n",
                            "start": 2650028,
                            "type": "local",
                            "view": "integer[]"
                        }
                    ],
                    "desc": "Reinterprets the bits of an 8 byte integer `n` as a double and returns it.\nThis does not convert from an int to a double, but reinterprets the memory.",
                    "finish": 2650034,
                    "rawdesc": "Reinterprets the bits of an 8 byte integer `n` as a double and returns it.\nThis does not convert from an int to a double, but reinterprets the memory.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2650000,
                    "type": "function",
                    "view": "function memory.inttodouble(n: integer[])\n  -> number"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 2650027,
                "start": 2650009,
                "type": "setfield"
            }
        ],
        "desc": "Reinterprets the bits of an 8 byte integer `n` as a double and returns it.\nThis does not convert from an int to a double, but reinterprets the memory.",
        "name": "memory.inttodouble",
        "rawdesc": "Reinterprets the bits of an 8 byte integer `n` as a double and returns it.\nThis does not convert from an int to a double, but reinterprets the memory.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2580028,
                            "name": "n",
                            "start": 2580027,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Reinterprets the bits of a 4 byte integer `n` as a float and returns it. This\n does not convert from an int to a float, but reinterprets the memory.",
                    "finish": 2580033,
                    "rawdesc": "Reinterprets the bits of a 4 byte integer `n` as a float and returns it. This\n does not convert from an int to a float, but reinterprets the memory.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2580000,
                    "type": "function",
                    "view": "function memory.inttofloat(n: integer)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 2580026,
                "start": 2580009,
                "type": "setfield"
            }
        ],
        "desc": "Reinterprets the bits of a 4 byte integer `n` as a float and returns it. This\n does not convert from an int to a float, but reinterprets the memory.",
        "name": "memory.inttofloat",
        "rawdesc": "Reinterprets the bits of a 4 byte integer `n` as a float and returns it. This\n does not convert from an int to a float, but reinterprets the memory.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2860031,
                            "name": "n",
                            "start": 2860030,
                            "type": "local",
                            "view": "integer[]"
                        }
                    ],
                    "desc": "Takes in an 8 byte integer and returns it as a lua number. This function\nshould only be used when reading a qword from memory.",
                    "finish": 2860036,
                    "rawdesc": "Takes in an 8 byte integer and returns it as a lua number. This function\nshould only be used when reading a qword from memory.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2860000,
                    "type": "function",
                    "view": "function memory.qwordtonumber(n: integer[])\n  -> number"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 2860029,
                "start": 2860009,
                "type": "setfield"
            }
        ],
        "desc": "Takes in an 8 byte integer and returns it as a lua number. This function\nshould only be used when reading a qword from memory.",
        "name": "memory.qwordtonumber",
        "rawdesc": "Takes in an 8 byte integer and returns it as a lua number. This function\nshould only be used when reading a qword from memory.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2980032,
                            "name": "address",
                            "start": 2980025,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Reads an unsigned byte from memory at `address` and returns it.",
                    "finish": 2980037,
                    "rawdesc": "Reads an unsigned byte from memory at `address` and returns it.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 2980000,
                    "type": "function",
                    "view": "function memory.readbyte(address: integer)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 2980024,
                "start": 2980009,
                "type": "setfield"
            }
        ],
        "desc": "Reads an unsigned byte from memory at `address` and returns it.",
        "name": "memory.readbyte",
        "rawdesc": "Reads an unsigned byte from memory at `address` and returns it.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2920038,
                            "name": "address",
                            "start": 2920031,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Reads a signed byte from memory at `address` and returns it.",
                    "finish": 2920043,
                    "rawdesc": "Reads a signed byte from memory at `address` and returns it.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 2920000,
                    "type": "function",
                    "view": "function memory.readbytesigned(address: integer)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 2920030,
                "start": 2920009,
                "type": "setfield"
            }
        ],
        "desc": "Reads a signed byte from memory at `address` and returns it.",
        "name": "memory.readbytesigned",
        "rawdesc": "Reads a signed byte from memory at `address` and returns it.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3480034,
                            "name": "address",
                            "start": 3480027,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Reads a double (8 bytes) from memory at `address` and returns it.",
                    "finish": 3480039,
                    "rawdesc": "Reads a double (8 bytes) from memory at `address` and returns it.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 3480000,
                    "type": "function",
                    "view": "function memory.readdouble(address: integer)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 3480026,
                "start": 3480009,
                "type": "setfield"
            }
        ],
        "desc": "Reads a double (8 bytes) from memory at `address` and returns it.",
        "name": "memory.readdouble",
        "rawdesc": "Reads a double (8 bytes) from memory at `address` and returns it.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3220033,
                            "name": "address",
                            "start": 3220026,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Reads an unsigned dword (4 bytes) from memory at `address` and returns it.",
                    "finish": 3220038,
                    "rawdesc": "Reads an unsigned dword (4 bytes) from memory at `address` and returns it.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 3220000,
                    "type": "function",
                    "view": "function memory.readdword(address: integer)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 3220025,
                "start": 3220009,
                "type": "setfield"
            }
        ],
        "desc": "Reads an unsigned dword (4 bytes) from memory at `address` and returns it.",
        "name": "memory.readdword",
        "rawdesc": "Reads an unsigned dword (4 bytes) from memory at `address` and returns it.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3160039,
                            "name": "address",
                            "start": 3160032,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Reads a signed dword (4 bytes) from memory at `address` and returns it.",
                    "finish": 3160044,
                    "rawdesc": "Reads a signed dword (4 bytes) from memory at `address` and returns it.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 3160000,
                    "type": "function",
                    "view": "function memory.readdwordsigned(address: integer)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 3160031,
                "start": 3160009,
                "type": "setfield"
            }
        ],
        "desc": "Reads a signed dword (4 bytes) from memory at `address` and returns it.",
        "name": "memory.readdwordsigned",
        "rawdesc": "Reads a signed dword (4 bytes) from memory at `address` and returns it.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3420033,
                            "name": "address",
                            "start": 3420026,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Reads a float (4 bytes) from memory at `address` and returns it.",
                    "finish": 3420038,
                    "rawdesc": "Reads a float (4 bytes) from memory at `address` and returns it.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 3420000,
                    "type": "function",
                    "view": "function memory.readfloat(address: integer)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 3420025,
                "start": 3420009,
                "type": "setfield"
            }
        ],
        "desc": "Reads a float (4 bytes) from memory at `address` and returns it.",
        "name": "memory.readfloat",
        "rawdesc": "Reads a float (4 bytes) from memory at `address` and returns it.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3360033,
                            "name": "address",
                            "start": 3360026,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Reads an unsigned qword (8 bytes) from memory at `address` and returns it as\na table of the upper and lower 4 bytes.",
                    "finish": 3360038,
                    "rawdesc": "Reads an unsigned qword (8 bytes) from memory at `address` and returns it as\na table of the upper and lower 4 bytes.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 3360000,
                    "type": "function",
                    "view": "function memory.readqword(address: integer)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 3360025,
                "start": 3360009,
                "type": "setfield"
            }
        ],
        "desc": "Reads an unsigned qword (8 bytes) from memory at `address` and returns it as\na table of the upper and lower 4 bytes.",
        "name": "memory.readqword",
        "rawdesc": "Reads an unsigned qword (8 bytes) from memory at `address` and returns it as\na table of the upper and lower 4 bytes.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3290039,
                            "name": "address",
                            "start": 3290032,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Reads a signed qword (8 bytes) from memory at `address` and returns it as a\ntable of the upper and lower 4 bytes.",
                    "finish": 3290044,
                    "rawdesc": "Reads a signed qword (8 bytes) from memory at `address` and returns it as a\ntable of the upper and lower 4 bytes.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer[]"
                        }
                    ],
                    "start": 3290000,
                    "type": "function",
                    "view": "function memory.readqwordsigned(address: integer)\n  -> integer[]"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 3290031,
                "start": 3290009,
                "type": "setfield"
            }
        ],
        "desc": "Reads a signed qword (8 bytes) from memory at `address` and returns it as a\ntable of the upper and lower 4 bytes.",
        "name": "memory.readqwordsigned",
        "rawdesc": "Reads a signed qword (8 bytes) from memory at `address` and returns it as a\ntable of the upper and lower 4 bytes.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3560032,
                            "name": "address",
                            "start": 3560025,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3560038,
                            "name": "size",
                            "start": 3560034,
                            "type": "local",
                            "view": "-1|-2|-4|-8|1...(+3)"
                        }
                    ],
                    "desc": "Reads `size` bytes from memory at `address` and returns them. The memory is\ntreated as signed if `size` is is negative.\n\n```lua\nsize:\n    | 1\n    | 2\n    | 4\n    | 8\n    | -1\n    | -2\n    | -4\n    | -8\n```",
                    "finish": 3560043,
                    "rawdesc": "Reads `size` bytes from memory at `address` and returns them. The memory is\ntreated as signed if `size` is is negative.\n\n```lua\nsize:\n    | 1\n    | 2\n    | 4\n    | 8\n    | -1\n    | -2\n    | -4\n    | -8\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 3560000,
                    "type": "function",
                    "view": "function memory.readsize(address: integer, size: -1|-2|-4|-8|1...(+3))\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 3560024,
                "start": 3560009,
                "type": "setfield"
            }
        ],
        "desc": "Reads `size` bytes from memory at `address` and returns them. The memory is\ntreated as signed if `size` is is negative.\n\n```lua\nsize:\n    | 1\n    | 2\n    | 4\n    | 8\n    | -1\n    | -2\n    | -4\n    | -8\n```",
        "name": "memory.readsize",
        "rawdesc": "Reads `size` bytes from memory at `address` and returns them. The memory is\ntreated as signed if `size` is is negative.\n\n```lua\nsize:\n    | 1\n    | 2\n    | 4\n    | 8\n    | -1\n    | -2\n    | -4\n    | -8\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3100032,
                            "name": "address",
                            "start": 3100025,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Reads an unsigned word (2 bytes) from memory at `address` and returns it.",
                    "finish": 3100037,
                    "rawdesc": "Reads an unsigned word (2 bytes) from memory at `address` and returns it.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 3100000,
                    "type": "function",
                    "view": "function memory.readword(address: integer)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 3100024,
                "start": 3100009,
                "type": "setfield"
            }
        ],
        "desc": "Reads an unsigned word (2 bytes) from memory at `address` and returns it.",
        "name": "memory.readword",
        "rawdesc": "Reads an unsigned word (2 bytes) from memory at `address` and returns it.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3040038,
                            "name": "address",
                            "start": 3040031,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Reads a signed word (2 bytes) from memory at `address` and returns it.",
                    "finish": 3040043,
                    "rawdesc": "Reads a signed word (2 bytes) from memory at `address` and returns it.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 3040000,
                    "type": "function",
                    "view": "function memory.readwordsigned(address: integer)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 3040030,
                "start": 3040009,
                "type": "setfield"
            }
        ],
        "desc": "Reads a signed word (2 bytes) from memory at `address` and returns it.",
        "name": "memory.readwordsigned",
        "rawdesc": "Reads a signed word (2 bytes) from memory at `address` and returns it.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3620033,
                            "name": "address",
                            "start": 3620026,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3620039,
                            "name": "data",
                            "start": 3620035,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Writes an unsigned byte to memory at `address`.",
                    "finish": 3620044,
                    "rawdesc": "Writes an unsigned byte to memory at `address`.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 3620000,
                    "type": "function",
                    "view": "function memory.writebyte(address: integer, data: integer)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 3620025,
                "start": 3620009,
                "type": "setfield"
            }
        ],
        "desc": "Writes an unsigned byte to memory at `address`.",
        "name": "memory.writebyte",
        "rawdesc": "Writes an unsigned byte to memory at `address`.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3930035,
                            "name": "address",
                            "start": 3930028,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3930041,
                            "name": "data",
                            "start": 3930037,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Writes a double to memory at `address`.",
                    "finish": 3930046,
                    "rawdesc": "Writes a double to memory at `address`.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 3930000,
                    "type": "function",
                    "view": "function memory.writedouble(address: integer, data: number)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 3930027,
                "start": 3930009,
                "type": "setfield"
            }
        ],
        "desc": "Writes a double to memory at `address`.",
        "name": "memory.writedouble",
        "rawdesc": "Writes a double to memory at `address`.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3740034,
                            "name": "address",
                            "start": 3740027,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3740040,
                            "name": "data",
                            "start": 3740036,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Writes an unsigned dword (4 bytes) to memory at `address`.",
                    "finish": 3740045,
                    "rawdesc": "Writes an unsigned dword (4 bytes) to memory at `address`.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 3740000,
                    "type": "function",
                    "view": "function memory.writedword(address: integer, data: integer)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 3740026,
                "start": 3740009,
                "type": "setfield"
            }
        ],
        "desc": "Writes an unsigned dword (4 bytes) to memory at `address`.",
        "name": "memory.writedword",
        "rawdesc": "Writes an unsigned dword (4 bytes) to memory at `address`.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3870034,
                            "name": "address",
                            "start": 3870027,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3870040,
                            "name": "data",
                            "start": 3870036,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Writes a float to memory at `address`.",
                    "finish": 3870045,
                    "rawdesc": "Writes a float to memory at `address`.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 3870000,
                    "type": "function",
                    "view": "function memory.writefloat(address: integer, data: number)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 3870026,
                "start": 3870009,
                "type": "setfield"
            }
        ],
        "desc": "Writes a float to memory at `address`.",
        "name": "memory.writefloat",
        "rawdesc": "Writes a float to memory at `address`.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3810034,
                            "name": "address",
                            "start": 3810027,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3810040,
                            "name": "data",
                            "start": 3810036,
                            "type": "local",
                            "view": "integer[]"
                        }
                    ],
                    "desc": "Writes an unsigned qword consisting of a table with the upper and lower 4\nbytes to memory at `address`.",
                    "finish": 3810045,
                    "rawdesc": "Writes an unsigned qword consisting of a table with the upper and lower 4\nbytes to memory at `address`.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 3810000,
                    "type": "function",
                    "view": "function memory.writeqword(address: integer, data: integer[])\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 3810026,
                "start": 3810009,
                "type": "setfield"
            }
        ],
        "desc": "Writes an unsigned qword consisting of a table with the upper and lower 4\nbytes to memory at `address`.",
        "name": "memory.writeqword",
        "rawdesc": "Writes an unsigned qword consisting of a table with the upper and lower 4\nbytes to memory at `address`.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4010033,
                            "name": "address",
                            "start": 4010026,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4010039,
                            "name": "size",
                            "start": 4010035,
                            "type": "local",
                            "view": "-1|-2|-4|-8|1...(+3)"
                        },
                        {
                            "finish": 4010045,
                            "name": "data",
                            "start": 4010041,
                            "type": "local",
                            "view": "integer|integer[]"
                        }
                    ],
                    "desc": "Writes `size` bytes to memory at `address`. The memory is treated as signed\nif `size` is is negative.\n\n```lua\nsize:\n    | 1\n    | 2\n    | 4\n    | 8\n    | -1\n    | -2\n    | -4\n    | -8\n```",
                    "finish": 4010050,
                    "rawdesc": "Writes `size` bytes to memory at `address`. The memory is treated as signed\nif `size` is is negative.\n\n```lua\nsize:\n    | 1\n    | 2\n    | 4\n    | 8\n    | -1\n    | -2\n    | -4\n    | -8\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 4010000,
                    "type": "function",
                    "view": "function memory.writesize(address: integer, size: -1|-2|-4|-8|1...(+3), data: integer|integer[])\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 4010025,
                "start": 4010009,
                "type": "setfield"
            }
        ],
        "desc": "Writes `size` bytes to memory at `address`. The memory is treated as signed\nif `size` is is negative.\n\n```lua\nsize:\n    | 1\n    | 2\n    | 4\n    | 8\n    | -1\n    | -2\n    | -4\n    | -8\n```",
        "name": "memory.writesize",
        "rawdesc": "Writes `size` bytes to memory at `address`. The memory is treated as signed\nif `size` is is negative.\n\n```lua\nsize:\n    | 1\n    | 2\n    | 4\n    | 8\n    | -1\n    | -2\n    | -4\n    | -8\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3680033,
                            "name": "address",
                            "start": 3680026,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3680039,
                            "name": "data",
                            "start": 3680035,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Writes an unsigned word (2 bytes) to memory at `address`.",
                    "finish": 3680044,
                    "rawdesc": "Writes an unsigned word (2 bytes) to memory at `address`.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 3680000,
                    "type": "function",
                    "view": "function memory.writeword(address: integer, data: integer)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 3680025,
                "start": 3680009,
                "type": "setfield"
            }
        ],
        "desc": "Writes an unsigned word (2 bytes) to memory at `address`.",
        "name": "memory.writeword",
        "rawdesc": "Writes an unsigned word (2 bytes) to memory at `address`.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1720020,
                            "name": "name",
                            "start": 1720016,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 1720025,
                            "start": 1720022,
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nCreates a module.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-module)",
                    "finish": 1720030,
                    "rawdesc": "\nCreates a module.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-module)",
                    "start": 1720000,
                    "type": "function",
                    "view": "function module(name: string, ...any)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 1720015,
                "start": 1720009,
                "type": "setglobal"
            }
        ],
        "desc": "\nCreates a module.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-module)",
        "name": "module",
        "rawdesc": "\nCreates a module.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-module)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 160010,
                    "start": 160008,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 160005,
                "start": 160000,
                "type": "setglobal"
            }
        ],
        "name": "movie",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Returns the filename of the currently playing movie. It will error if no\nmovie is playing.",
                    "finish": 8850037,
                    "rawdesc": "Returns the filename of the currently playing movie. It will error if no\nmovie is playing.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 8850000,
                    "type": "function",
                    "view": "function movie.getmoviefilename()\n  -> string"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 8850031,
                "start": 8850009,
                "type": "setfield"
            }
        ],
        "desc": "Returns the filename of the currently playing movie. It will error if no\nmovie is playing.",
        "name": "movie.getmoviefilename",
        "rawdesc": "Returns the filename of the currently playing movie. It will error if no\nmovie is playing.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Returns true if the currently playing movie is read only",
                    "finish": 8890031,
                    "rawdesc": "Returns true if the currently playing movie is read only",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 8890000,
                    "type": "function",
                    "view": "function movie.isreadonly()\n  -> boolean"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 8890025,
                "start": 8890009,
                "type": "setfield"
            }
        ],
        "desc": "Returns true if the currently playing movie is read only",
        "name": "movie.isreadonly",
        "rawdesc": "Returns true if the currently playing movie is read only",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 8750033,
                            "name": "filename",
                            "start": 8750025,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Plays a movie file located at `filename`. This function sets `Read Only` to\ntrue.",
                    "finish": 8750038,
                    "rawdesc": "Plays a movie file located at `filename`. This function sets `Read Only` to\ntrue.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 8750000,
                    "type": "function",
                    "view": "function movie.playmovie(filename: string)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 8750024,
                "start": 8750009,
                "type": "setfield"
            }
        ],
        "desc": "Plays a movie file located at `filename`. This function sets `Read Only` to\ntrue.",
        "name": "movie.playmovie",
        "rawdesc": "Plays a movie file located at `filename`. This function sets `Read Only` to\ntrue.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Stops the currently playing movie.",
                    "finish": 8790030,
                    "rawdesc": "Stops the currently playing movie.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 8790000,
                    "type": "function",
                    "view": "function movie.stopmovie()\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 8790024,
                "start": 8790009,
                "type": "setfield"
            }
        ],
        "desc": "Stops the currently playing movie.",
        "name": "movie.stopmovie",
        "rawdesc": "Stops the currently playing movie.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1620023,
                            "name": "proxy",
                            "start": 1620018,
                            "type": "local",
                            "view": "boolean|table|userdata"
                        }
                    ],
                    "finish": 1620028,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "userdata"
                        }
                    ],
                    "start": 1620000,
                    "type": "function",
                    "view": "function newproxy(proxy: boolean|table|userdata)\n  -> userdata"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 1620017,
                "start": 1620009,
                "type": "setglobal"
            }
        ],
        "name": "newproxy",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1900019,
                            "name": "table",
                            "start": 1900014,
                            "type": "local",
                            "view": "table<<K>, <V>>"
                        },
                        {
                            "finish": 1900026,
                            "name": "index",
                            "start": 1900021,
                            "type": "local",
                            "view": "<K>?"
                        }
                    ],
                    "desc": "\nAllows a program to traverse all fields of a table. Its first argument is a table and its second argument is an index in this table. A call to `next` returns the next index of the table and its associated value. When called with `nil` as its second argument, `next` returns an initial index and its associated value. When called with the last index, or with `nil` in an empty table, `next` returns `nil`. If the second argument is absent, then it is interpreted as `nil`. In particular, you can use `next(t)` to check whether a table is empty.\n\nThe order in which the indices are enumerated is not specified, *even for numeric indices*. (To traverse a table in numerical order, use a numerical `for`.)\n\nThe behavior of `next` is undefined if, during the traversal, you assign any value to a non-existent field in the table. You may however modify existing fields. In particular, you may set existing fields to nil.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-next)",
                    "finish": 1900031,
                    "rawdesc": "\nAllows a program to traverse all fields of a table. Its first argument is a table and its second argument is an index in this table. A call to `next` returns the next index of the table and its associated value. When called with `nil` as its second argument, `next` returns an initial index and its associated value. When called with the last index, or with `nil` in an empty table, `next` returns `nil`. If the second argument is absent, then it is interpreted as `nil`. In particular, you can use `next(t)` to check whether a table is empty.\n\nThe order in which the indices are enumerated is not specified, *even for numeric indices*. (To traverse a table in numerical order, use a numerical `for`.)\n\nThe behavior of `next` is undefined if, during the traversal, you assign any value to a non-existent field in the table. You may however modify existing fields. In particular, you may set existing fields to nil.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-next)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<K>?"
                        },
                        {
                            "type": "function.return",
                            "view": "<V>?"
                        }
                    ],
                    "start": 1900000,
                    "type": "function",
                    "view": "function next(table: table<<K>, <V>>, index?: <K>)\n  -> <K>?\n  2. <V>?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 1900013,
                "start": 1900009,
                "type": "setglobal"
            }
        ],
        "desc": "\nAllows a program to traverse all fields of a table. Its first argument is a table and its second argument is an index in this table. A call to `next` returns the next index of the table and its associated value. When called with `nil` as its second argument, `next` returns an initial index and its associated value. When called with the last index, or with `nil` in an empty table, `next` returns `nil`. If the second argument is absent, then it is interpreted as `nil`. In particular, you can use `next(t)` to check whether a table is empty.\n\nThe order in which the indices are enumerated is not specified, *even for numeric indices*. (To traverse a table in numerical order, use a numerical `for`.)\n\nThe behavior of `next` is undefined if, during the traversal, you assign any value to a non-existent field in the table. You may however modify existing fields. In particular, you may set existing fields to nil.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-next)",
        "name": "next",
        "rawdesc": "\nAllows a program to traverse all fields of a table. Its first argument is a table and its second argument is an index in this table. A call to `next` returns the next index of the table and its associated value. When called with `nil` as its second argument, `next` returns an initial index and its associated value. When called with the last index, or with `nil` in an empty table, `next` returns `nil`. If the second argument is absent, then it is interpreted as `nil`. In particular, you can use `next(t)` to check whether a table is empty.\n\nThe order in which the indices are enumerated is not specified, *even for numeric indices*. (To traverse a table in numerical order, use a numerical `for`.)\n\nThe behavior of `next` is undefined if, during the traversal, you assign any value to a non-existent field in the table. You may however modify existing fields. In particular, you may set existing fields to nil.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-next)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 80007,
                    "start": 80005,
                    "type": "table",
                    "view": "oslib"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 80002,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os)\n",
        "name": "os",
        "rawdesc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os)\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nReturns an approximation of the amount in seconds of CPU time used by the program.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.clock)",
                    "finish": 170023,
                    "rawdesc": "\nReturns an approximation of the amount in seconds of CPU time used by the program.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.clock)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 170000,
                    "type": "function",
                    "view": "function os.clock()\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 170017,
                "start": 170009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns an approximation of the amount in seconds of CPU time used by the program.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.clock)",
        "name": "os.clock",
        "rawdesc": "\nReturns an approximation of the amount in seconds of CPU time used by the program.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.clock)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 840023,
                            "name": "format",
                            "start": 840017,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": 840029,
                            "name": "time",
                            "start": 840025,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns a string or a table containing date and time, formatted according to the given string `format`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.date)",
                    "finish": 840034,
                    "rawdesc": "\nReturns a string or a table containing date and time, formatted according to the given string `format`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.date)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string|osdate"
                        }
                    ],
                    "start": 840000,
                    "type": "function",
                    "view": "function os.date(format?: string, time?: integer)\n  -> string|osdate"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 840016,
                "start": 840009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string or a table containing date and time, formatted according to the given string `format`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.date)",
        "name": "os.date",
        "rawdesc": "\nReturns a string or a table containing date and time, formatted according to the given string `format`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.date)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 950023,
                            "name": "t2",
                            "start": 950021,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 950027,
                            "name": "t1",
                            "start": 950025,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns the difference, in seconds, from time `t1` to time `t2`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.difftime)",
                    "finish": 950032,
                    "rawdesc": "\nReturns the difference, in seconds, from time `t1` to time `t2`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.difftime)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 950000,
                    "type": "function",
                    "view": "function os.difftime(t2: integer, t1: integer)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 950020,
                "start": 950009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the difference, in seconds, from time `t1` to time `t2`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.difftime)",
        "name": "os.difftime",
        "rawdesc": "\nReturns the difference, in seconds, from time `t1` to time `t2`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.difftime)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1060027,
                            "name": "command",
                            "start": 1060020,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nPasses `command` to be executed by an operating system shell.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.execute)\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                    "finish": 1060032,
                    "rawdesc": "\nPasses `command` to be executed by an operating system shell.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.execute)\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                    "returns": [
                        {
                            "name": "suc",
                            "type": "function.return",
                            "view": "boolean?"
                        },
                        {
                            "name": "exitcode",
                            "type": "function.return",
                            "view": "(\"exit\"|\"signal\")?"
                        },
                        {
                            "name": "code",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": 1060000,
                    "type": "function",
                    "view": "function os.execute(command?: string)\n  -> suc: boolean?\n  2. exitcode: (\"exit\"|\"signal\")?\n  3. code: integer?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 1060019,
                "start": 1060009,
                "type": "setfield"
            }
        ],
        "desc": "\nPasses `command` to be executed by an operating system shell.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.execute)\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
        "name": "os.execute",
        "rawdesc": "\nPasses `command` to be executed by an operating system shell.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.execute)\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1150021,
                            "name": "code",
                            "start": 1150017,
                            "type": "local",
                            "view": "(boolean|integer)?"
                        },
                        {
                            "finish": 1150028,
                            "name": "close",
                            "start": 1150023,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nCalls the ISO C function `exit` to terminate the host program.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.exit)",
                    "finish": 1150033,
                    "rawdesc": "\nCalls the ISO C function `exit` to terminate the host program.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.exit)",
                    "start": 1150000,
                    "type": "function",
                    "view": "function os.exit(code?: boolean|integer, close?: boolean)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 1150016,
                "start": 1150009,
                "type": "setfield"
            }
        ],
        "desc": "\nCalls the ISO C function `exit` to terminate the host program.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.exit)",
        "name": "os.exit",
        "rawdesc": "\nCalls the ISO C function `exit` to terminate the host program.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.exit)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1250026,
                            "name": "varname",
                            "start": 1250019,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nReturns the value of the process environment variable `varname`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.getenv)",
                    "finish": 1250031,
                    "rawdesc": "\nReturns the value of the process environment variable `varname`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.getenv)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1250000,
                    "type": "function",
                    "view": "function os.getenv(varname: string)\n  -> string?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 1250018,
                "start": 1250009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the value of the process environment variable `varname`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.getenv)",
        "name": "os.getenv",
        "rawdesc": "\nReturns the value of the process environment variable `varname`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.getenv)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1350027,
                            "name": "filename",
                            "start": 1350019,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nDeletes the file with the given name.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.remove)",
                    "finish": 1350032,
                    "rawdesc": "\nDeletes the file with the given name.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.remove)",
                    "returns": [
                        {
                            "name": "suc",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1350000,
                    "type": "function",
                    "view": "function os.remove(filename: string)\n  -> suc: boolean\n  2. errmsg: string?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 1350018,
                "start": 1350009,
                "type": "setfield"
            }
        ],
        "desc": "\nDeletes the file with the given name.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.remove)",
        "name": "os.remove",
        "rawdesc": "\nDeletes the file with the given name.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.remove)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1460026,
                            "name": "oldname",
                            "start": 1460019,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 1460035,
                            "name": "newname",
                            "start": 1460028,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nRenames the file or directory named `oldname` to `newname`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.rename)",
                    "finish": 1460040,
                    "rawdesc": "\nRenames the file or directory named `oldname` to `newname`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.rename)",
                    "returns": [
                        {
                            "name": "suc",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1460000,
                    "type": "function",
                    "view": "function os.rename(oldname: string, newname: string)\n  -> suc: boolean\n  2. errmsg: string?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 1460018,
                "start": 1460009,
                "type": "setfield"
            }
        ],
        "desc": "\nRenames the file or directory named `oldname` to `newname`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.rename)",
        "name": "os.rename",
        "rawdesc": "\nRenames the file or directory named `oldname` to `newname`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.rename)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1640028,
                            "name": "locale",
                            "start": 1640022,
                            "type": "local",
                            "view": "string|nil"
                        },
                        {
                            "finish": 1640038,
                            "name": "category",
                            "start": 1640030,
                            "type": "local",
                            "view": "(\"all\"|\"collate\"|\"ctype\"|\"monetary\"|\"numeric\"...(+1))?"
                        }
                    ],
                    "desc": "\nSets the current locale of the program.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.setlocale)\n\n\n```lua\ncategory:\n   -> \"all\"\n    | \"collate\"\n    | \"ctype\"\n    | \"monetary\"\n    | \"numeric\"\n    | \"time\"\n```",
                    "finish": 1640043,
                    "rawdesc": "\nSets the current locale of the program.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.setlocale)\n\n\n```lua\ncategory:\n   -> \"all\"\n    | \"collate\"\n    | \"ctype\"\n    | \"monetary\"\n    | \"numeric\"\n    | \"time\"\n```",
                    "returns": [
                        {
                            "name": "localecategory",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1640000,
                    "type": "function",
                    "view": "function os.setlocale(locale: string|nil, category?: \"all\"|\"collate\"|\"ctype\"|\"monetary\"|\"numeric\"...(+1))\n  -> localecategory: string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 1640021,
                "start": 1640009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets the current locale of the program.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.setlocale)\n\n\n```lua\ncategory:\n   -> \"all\"\n    | \"collate\"\n    | \"ctype\"\n    | \"monetary\"\n    | \"numeric\"\n    | \"time\"\n```",
        "name": "os.setlocale",
        "rawdesc": "\nSets the current locale of the program.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.setlocale)\n\n\n```lua\ncategory:\n   -> \"all\"\n    | \"collate\"\n    | \"ctype\"\n    | \"monetary\"\n    | \"numeric\"\n    | \"time\"\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2300021,
                            "name": "date",
                            "start": 2300017,
                            "type": "local",
                            "view": "osdateparam?"
                        }
                    ],
                    "desc": "\nReturns the current time when called without arguments, or a time representing the local date and time specified by the given table.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.time)",
                    "finish": 2300026,
                    "rawdesc": "\nReturns the current time when called without arguments, or a time representing the local date and time specified by the given table.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.time)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 2300000,
                    "type": "function",
                    "view": "function os.time(date?: osdateparam)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 2300016,
                "start": 2300009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the current time when called without arguments, or a time representing the local date and time specified by the given table.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.time)",
        "name": "os.time",
        "rawdesc": "\nReturns the current time when called without arguments, or a time representing the local date and time specified by the given table.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.time)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nReturns a string with a file name that can be used for a temporary file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.tmpname)",
                    "finish": 2390025,
                    "rawdesc": "\nReturns a string with a file name that can be used for a temporary file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.tmpname)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 2390000,
                    "type": "function",
                    "view": "function os.tmpname()\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 2390019,
                "start": 2390009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string with a file name that can be used for a temporary file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.tmpname)",
        "name": "os.tmpname",
        "rawdesc": "\nReturns a string with a file name that can be used for a temporary file.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-os.tmpname)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 420012,
                    "start": 420010,
                    "type": "table",
                    "view": "packagelib"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 420007,
                "start": 420000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package)\n",
        "name": "package",
        "rawdesc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package)\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 540003,
                    "start": 490017,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 490014,
                "start": 490000,
                "type": "setfield"
            }
        ],
        "desc": "\nA string describing some compile-time configurations for packages.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.config)\n",
        "name": "package.config",
        "rawdesc": "\nA string describing some compile-time configurations for packages.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.config)\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 620020,
                    "start": 620018,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 620015,
                "start": 620000,
                "type": "setfield"
            }
        ],
        "desc": "\nA table used by `require` to control how to load modules.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.loaders)\n",
        "name": "package.loaders",
        "rawdesc": "\nA table used by `require` to control how to load modules.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.loaders)\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 720032,
                            "name": "libname",
                            "start": 720025,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 720042,
                            "name": "funcname",
                            "start": 720034,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nDynamically links the host program with the C library `libname`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.loadlib)",
                    "finish": 720047,
                    "rawdesc": "\nDynamically links the host program with the C library `libname`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.loadlib)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 720000,
                    "type": "function",
                    "view": "function package.loadlib(libname: string, funcname: string)\n  -> any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 720024,
                "start": 720009,
                "type": "setfield"
            }
        ],
        "desc": "\nDynamically links the host program with the C library `libname`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.loadlib)",
        "name": "package.loadlib",
        "rawdesc": "\nDynamically links the host program with the C library `libname`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.loadlib)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 800022,
                    "start": 800020,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 800017,
                "start": 800000,
                "type": "setfield"
            }
        ],
        "desc": "\nA table used by `require` to control how to load modules.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.searchers)\n",
        "name": "package.searchers",
        "rawdesc": "\nA table used by `require` to control how to load modules.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.searchers)\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 950032,
                            "name": "name",
                            "start": 950028,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 950038,
                            "name": "path",
                            "start": 950034,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 950043,
                            "name": "sep",
                            "start": 950040,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": 950048,
                            "name": "rep",
                            "start": 950045,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nSearches for the given `name` in the given `path`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.searchpath)",
                    "finish": 950053,
                    "rawdesc": "\nSearches for the given `name` in the given `path`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.searchpath)",
                    "returns": [
                        {
                            "name": "filename",
                            "type": "function.return",
                            "view": "string?"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 950000,
                    "type": "function",
                    "view": "function package.searchpath(name: string, path: string, sep?: string, rep?: string)\n  -> filename: string?\n  2. errmsg: string?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 950027,
                "start": 950009,
                "type": "setfield"
            }
        ],
        "desc": "\nSearches for the given `name` in the given `path`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.searchpath)",
        "name": "package.searchpath",
        "rawdesc": "\nSearches for the given `name` in the given `path`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.searchpath)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1040030,
                            "name": "module",
                            "start": 1040024,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nSets a metatable for `module` with its `__index` field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to function `module` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.seeall)",
                    "finish": 1040035,
                    "rawdesc": "\nSets a metatable for `module` with its `__index` field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to function `module` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.seeall)",
                    "start": 1040000,
                    "type": "function",
                    "view": "function package.seeall(module: table)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 1040023,
                "start": 1040009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets a metatable for `module` with its `__index` field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to function `module` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.seeall)",
        "name": "package.seeall",
        "rawdesc": "\nSets a metatable for `module` with its `__index` field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to function `module` .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-package.seeall)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2100016,
                            "name": "t",
                            "start": 2100015,
                            "type": "local",
                            "view": "<T:table>"
                        }
                    ],
                    "desc": "\nIf `t` has a metamethod `__pairs`, calls it with t as argument and returns the first three results from the call.\n\nOtherwise, returns three values: the [next](http://www.lua.org/manual/5.4/manual.html#pdf-next) function, the table `t`, and `nil`, so that the construction\n```lua\n    for k,v in pairs(t) do body end\n```\nwill iterate over all keyโvalue pairs of table `t`.\n\nSee function [next](http://www.lua.org/manual/5.4/manual.html#pdf-next) for the caveats of modifying the table during its traversal.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-pairs)",
                    "finish": 2100021,
                    "rawdesc": "\nIf `t` has a metamethod `__pairs`, calls it with t as argument and returns the first three results from the call.\n\nOtherwise, returns three values: the [next](http://www.lua.org/manual/5.4/manual.html#pdf-next) function, the table `t`, and `nil`, so that the construction\n```lua\n    for k,v in pairs(t) do body end\n```\nwill iterate over all keyโvalue pairs of table `t`.\n\nSee function [next](http://www.lua.org/manual/5.4/manual.html#pdf-next) for the caveats of modifying the table during its traversal.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-pairs)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun(table: table<<K>, <V>>, index?: <K>):<K>, <V>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T:table>"
                        }
                    ],
                    "start": 2100000,
                    "type": "function",
                    "view": "function pairs(t: <T:table>)\n  -> fun(table: table<<K>, <V>>, index?: <K>):<K>, <V>\n  2. <T:table>"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2100014,
                "start": 2100009,
                "type": "setglobal"
            }
        ],
        "desc": "\nIf `t` has a metamethod `__pairs`, calls it with t as argument and returns the first three results from the call.\n\nOtherwise, returns three values: the [next](http://www.lua.org/manual/5.4/manual.html#pdf-next) function, the table `t`, and `nil`, so that the construction\n```lua\n    for k,v in pairs(t) do body end\n```\nwill iterate over all keyโvalue pairs of table `t`.\n\nSee function [next](http://www.lua.org/manual/5.4/manual.html#pdf-next) for the caveats of modifying the table during its traversal.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-pairs)",
        "name": "pairs",
        "rawdesc": "\nIf `t` has a metamethod `__pairs`, calls it with t as argument and returns the first three results from the call.\n\nOtherwise, returns three values: the [next](http://www.lua.org/manual/5.4/manual.html#pdf-next) function, the table `t`, and `nil`, so that the construction\n```lua\n    for k,v in pairs(t) do body end\n```\nwill iterate over all keyโvalue pairs of table `t`.\n\nSee function [next](http://www.lua.org/manual/5.4/manual.html#pdf-next) for the caveats of modifying the table during its traversal.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-pairs)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2240016,
                            "name": "f",
                            "start": 2240015,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 2240022,
                            "name": "arg1",
                            "start": 2240018,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2240027,
                            "start": 2240024,
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nCalls the function `f` with the given arguments in *protected mode*. This means that any error inside `f` is not propagated; instead, `pcall` catches the error and returns a status code. Its first result is the status code (a boolean), which is true if the call succeeds without errors. In such case, `pcall` also returns all results from the call, after this first result. In case of any error, `pcall` returns `false` plus the error object.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-pcall)",
                    "finish": 2240032,
                    "rawdesc": "\nCalls the function `f` with the given arguments in *protected mode*. This means that any error inside `f` is not propagated; instead, `pcall` catches the error and returns a status code. Its first result is the status code (a boolean), which is true if the call succeeds without errors. In such case, `pcall` also returns all results from the call, after this first result. In case of any error, `pcall` returns `false` plus the error object.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-pcall)",
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "result",
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 2240000,
                    "type": "function",
                    "view": "function pcall(f: fun(...any):...unknown, arg1?: any, ...any)\n  -> success: boolean\n  2. result: any\n  3. ...any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2240014,
                "start": 2240009,
                "type": "setglobal"
            }
        ],
        "desc": "\nCalls the function `f` with the given arguments in *protected mode*. This means that any error inside `f` is not propagated; instead, `pcall` catches the error and returns a status code. Its first result is the status code (a boolean), which is true if the call succeeds without errors. In such case, `pcall` also returns all results from the call, after this first result. In case of any error, `pcall` returns `false` plus the error object.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-pcall)",
        "name": "pcall",
        "rawdesc": "\nCalls the function `f` with the given arguments in *protected mode*. This means that any error inside `f` is not propagated; instead, `pcall` catches the error and returns a status code. Its first result is the status code (a boolean), which is true if the call succeeds without errors. In such case, `pcall` also returns all results from the call, after this first result. In case of any error, `pcall` returns `false` plus the error object.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-pcall)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2340018,
                            "start": 2340015,
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReceives any number of arguments and prints their values to `stdout`, converting each argument to a string following the same rules of [tostring](http://www.lua.org/manual/5.4/manual.html#pdf-tostring).\nThe function print is not intended for formatted output, but only as a quick way to show a value, for instance for debugging. For complete control over the output, use [string.format](http://www.lua.org/manual/5.4/manual.html#pdf-string.format) and [io.write](http://www.lua.org/manual/5.4/manual.html#pdf-io.write).\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-print)",
                    "finish": 2340023,
                    "rawdesc": "\nReceives any number of arguments and prints their values to `stdout`, converting each argument to a string following the same rules of [tostring](http://www.lua.org/manual/5.4/manual.html#pdf-tostring).\nThe function print is not intended for formatted output, but only as a quick way to show a value, for instance for debugging. For complete control over the output, use [string.format](http://www.lua.org/manual/5.4/manual.html#pdf-string.format) and [io.write](http://www.lua.org/manual/5.4/manual.html#pdf-io.write).\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-print)",
                    "start": 2340000,
                    "type": "function",
                    "view": "function print(...any)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2340014,
                "start": 2340009,
                "type": "setglobal"
            },
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The data to print to the console.",
                            "finish": 300019,
                            "name": "data",
                            "rawdesc": "The data to print to the console.",
                            "start": 300015,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "Prints a value to the lua console.\n\n@*param* `data` โ The data to print to the console.",
                    "finish": 300024,
                    "rawdesc": "Prints a value to the lua console.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 300000,
                    "type": "function",
                    "view": "function print(data: any)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 300014,
                "start": 300009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReceives any number of arguments and prints their values to `stdout`, converting each argument to a string following the same rules of [tostring](http://www.lua.org/manual/5.4/manual.html#pdf-tostring).\nThe function print is not intended for formatted output, but only as a quick way to show a value, for instance for debugging. For complete control over the output, use [string.format](http://www.lua.org/manual/5.4/manual.html#pdf-string.format) and [io.write](http://www.lua.org/manual/5.4/manual.html#pdf-io.write).\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-print)",
        "name": "print",
        "rawdesc": "\nReceives any number of arguments and prints their values to `stdout`, converting each argument to a string following the same rules of [tostring](http://www.lua.org/manual/5.4/manual.html#pdf-tostring).\nThe function print is not intended for formatted output, but only as a quick way to show a value, for instance for debugging. For complete control over the output, use [string.format](http://www.lua.org/manual/5.4/manual.html#pdf-string.format) and [io.write](http://www.lua.org/manual/5.4/manual.html#pdf-io.write).\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-print)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 210025,
                    "start": 210016,
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": 210025,
                            "start": 210016,
                            "type": "doc.type.array",
                            "view": "integer[]"
                        }
                    ],
                    "view": "integer[]"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 210025,
                "start": 210010,
                "type": "doc.alias"
            }
        ],
        "fields": [],
        "name": "qword",
        "type": "type"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2450020,
                            "name": "v1",
                            "start": 2450018,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2450024,
                            "name": "v2",
                            "start": 2450022,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nChecks whether v1 is equal to v2, without invoking the `__eq` metamethod.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawequal)",
                    "finish": 2450029,
                    "rawdesc": "\nChecks whether v1 is equal to v2, without invoking the `__eq` metamethod.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawequal)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 2450000,
                    "type": "function",
                    "view": "function rawequal(v1: any, v2: any)\n  -> boolean"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2450017,
                "start": 2450009,
                "type": "setglobal"
            }
        ],
        "desc": "\nChecks whether v1 is equal to v2, without invoking the `__eq` metamethod.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawequal)",
        "name": "rawequal",
        "rawdesc": "\nChecks whether v1 is equal to v2, without invoking the `__eq` metamethod.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawequal)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2560021,
                            "name": "table",
                            "start": 2560016,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 2560028,
                            "name": "index",
                            "start": 2560023,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nGets the real value of `table[index]`, without invoking the `__index` metamethod.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawget)",
                    "finish": 2560033,
                    "rawdesc": "\nGets the real value of `table[index]`, without invoking the `__index` metamethod.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawget)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 2560000,
                    "type": "function",
                    "view": "function rawget(table: table, index: any)\n  -> any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2560015,
                "start": 2560009,
                "type": "setglobal"
            }
        ],
        "desc": "\nGets the real value of `table[index]`, without invoking the `__index` metamethod.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawget)",
        "name": "rawget",
        "rawdesc": "\nGets the real value of `table[index]`, without invoking the `__index` metamethod.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawget)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2660017,
                            "name": "v",
                            "start": 2660016,
                            "type": "local",
                            "view": "string|table"
                        }
                    ],
                    "desc": "\nReturns the length of the object `v`, without invoking the `__len` metamethod.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawlen)",
                    "finish": 2660022,
                    "rawdesc": "\nReturns the length of the object `v`, without invoking the `__len` metamethod.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawlen)",
                    "returns": [
                        {
                            "name": "len",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 2660000,
                    "type": "function",
                    "view": "function rawlen(v: string|table)\n  -> len: integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2660015,
                "start": 2660009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReturns the length of the object `v`, without invoking the `__len` metamethod.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawlen)",
        "name": "rawlen",
        "rawdesc": "\nReturns the length of the object `v`, without invoking the `__len` metamethod.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawlen)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2790021,
                            "name": "table",
                            "start": 2790016,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 2790028,
                            "name": "index",
                            "start": 2790023,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2790035,
                            "name": "value",
                            "start": 2790030,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nSets the real value of `table[index]` to `value`, without using the `__newindex` metavalue. `table` must be a table, `index` any value different from `nil` and `NaN`, and `value` any Lua value.\nThis function returns `table`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawset)",
                    "finish": 2790040,
                    "rawdesc": "\nSets the real value of `table[index]` to `value`, without using the `__newindex` metavalue. `table` must be a table, `index` any value different from `nil` and `NaN`, and `value` any Lua value.\nThis function returns `table`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawset)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 2790000,
                    "type": "function",
                    "view": "function rawset(table: table, index: any, value: any)\n  -> table"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2790015,
                "start": 2790009,
                "type": "setglobal"
            }
        ],
        "desc": "\nSets the real value of `table[index]` to `value`, without using the `__newindex` metavalue. `table` must be a table, `index` any value different from `nil` and `NaN`, and `value` any Lua value.\nThis function returns `table`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawset)",
        "name": "rawset",
        "rawdesc": "\nSets the real value of `table[index]` to `value`, without using the `__newindex` metavalue. `table` must be a table, `index` any value different from `nil` and `NaN`, and `value` any Lua value.\nThis function returns `table`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-rawset)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 100024,
                            "name": "modname",
                            "start": 100017,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nLoads the given module, returns any value returned by the searcher(`true` when `nil`). Besides that value, also returns as a second result the loader data returned by the searcher, which indicates how `require` found the module. (For instance, if the module came from a file, this loader data is the file path.)\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-require)",
                    "finish": 100029,
                    "rawdesc": "\nLoads the given module, returns any value returned by the searcher(`true` when `nil`). Besides that value, also returns as a second result the loader data returned by the searcher, which indicates how `require` found the module. (For instance, if the module came from a file, this loader data is the file path.)\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-require)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        },
                        {
                            "name": "loaderdata",
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": 100000,
                    "type": "function",
                    "view": "function require(modname: string)\n  -> unknown\n  2. loaderdata: unknown"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 100016,
                "start": 100009,
                "type": "setglobal"
            }
        ],
        "desc": "\nLoads the given module, returns any value returned by the searcher(`true` when `nil`). Besides that value, also returns as a second result the loader data returned by the searcher, which indicates how `require` found the module. (For instance, if the module came from a file, this loader data is the file path.)\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-require)",
        "name": "require",
        "rawdesc": "\nLoads the given module, returns any value returned by the searcher(`true` when `nil`). Besides that value, also returns as a second result the loader data returned by the searcher, which indicates how `require` found the module. (For instance, if the module came from a file, this loader data is the file path.)\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-require)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 170014,
                    "start": 170012,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 170009,
                "start": 170000,
                "type": "setglobal"
            }
        ],
        "name": "savestate",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 9050036,
                            "name": "filename",
                            "start": 9050028,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Loads a savestate from `filename`",
                    "finish": 9050041,
                    "rawdesc": "Loads a savestate from `filename`",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 9050000,
                    "type": "function",
                    "view": "function savestate.loadfile(filename: string)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 9050027,
                "start": 9050009,
                "type": "setfield"
            }
        ],
        "desc": "Loads a savestate from `filename`",
        "name": "savestate.loadfile",
        "rawdesc": "Loads a savestate from `filename`",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 9000036,
                            "name": "filename",
                            "start": 9000028,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Saves a savestate to `filename`.",
                    "finish": 9000041,
                    "rawdesc": "Saves a savestate to `filename`.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 9000000,
                    "type": "function",
                    "view": "function savestate.savefile(filename: string)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 9000027,
                "start": 9000009,
                "type": "setfield"
            }
        ],
        "desc": "Saves a savestate to `filename`.",
        "name": "savestate.savefile",
        "rawdesc": "Saves a savestate to `filename`.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2900021,
                            "name": "index",
                            "start": 2900016,
                            "type": "local",
                            "view": "integer|\"#\""
                        },
                        {
                            "finish": 2900026,
                            "start": 2900023,
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nIf `index` is a number, returns all arguments after argument number `index`; a negative number indexes from the end (`-1` is the last argument). Otherwise, `index` must be the string `\"#\"`, and `select` returns the total number of extra arguments it received.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-select)\n\n\n```lua\nindex:\n    | \"#\"\n```",
                    "finish": 2900031,
                    "rawdesc": "\nIf `index` is a number, returns all arguments after argument number `index`; a negative number indexes from the end (`-1` is the last argument). Otherwise, `index` must be the string `\"#\"`, and `select` returns the total number of extra arguments it received.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-select)\n\n\n```lua\nindex:\n    | \"#\"\n```",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 2900000,
                    "type": "function",
                    "view": "function select(index: integer|\"#\", ...any)\n  -> any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2900015,
                "start": 2900009,
                "type": "setglobal"
            }
        ],
        "desc": "\nIf `index` is a number, returns all arguments after argument number `index`; a negative number indexes from the end (`-1` is the last argument). Otherwise, `index` must be the string `\"#\"`, and `select` returns the total number of extra arguments it received.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-select)\n\n\n```lua\nindex:\n    | \"#\"\n```",
        "name": "select",
        "rawdesc": "\nIf `index` is a number, returns all arguments after argument number `index`; a negative number indexes from the end (`-1` is the last argument). Otherwise, `index` must be the string `\"#\"`, and `select` returns the total number of extra arguments it received.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-select)\n\n\n```lua\nindex:\n    | \"#\"\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3010018,
                            "name": "f",
                            "start": 3010017,
                            "type": "local",
                            "view": "fun(...any):...integer|unknown"
                        },
                        {
                            "finish": 3010025,
                            "name": "table",
                            "start": 3010020,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nSets the environment to be used by the given function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-setfenv)",
                    "finish": 3010030,
                    "rawdesc": "\nSets the environment to be used by the given function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-setfenv)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function"
                        }
                    ],
                    "start": 3010000,
                    "type": "function",
                    "view": "function setfenv(f: fun(...any):...integer|unknown, table: table)\n  -> function"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 3010016,
                "start": 3010009,
                "type": "setglobal"
            }
        ],
        "desc": "\nSets the environment to be used by the given function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-setfenv)",
        "name": "setfenv",
        "rawdesc": "\nSets the environment to be used by the given function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-setfenv)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3470027,
                            "name": "table",
                            "start": 3470022,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 3470038,
                            "name": "metatable",
                            "start": 3470029,
                            "type": "local",
                            "view": "(table|metatable)?"
                        }
                    ],
                    "desc": "\nSets the metatable for the given table. If `metatable` is `nil`, removes the metatable of the given table. If the original metatable has a `__metatable` field, raises an error.\n\nThis function returns `table`.\n\nTo change the metatable of other types from Lua code, you must use the debug library ([ยง6.10](http://www.lua.org/manual/5.4/manual.html#6.10)).\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-setmetatable)",
                    "finish": 3470043,
                    "rawdesc": "\nSets the metatable for the given table. If `metatable` is `nil`, removes the metatable of the given table. If the original metatable has a `__metatable` field, raises an error.\n\nThis function returns `table`.\n\nTo change the metatable of other types from Lua code, you must use the debug library ([ยง6.10](http://www.lua.org/manual/5.4/manual.html#6.10)).\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-setmetatable)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 3470000,
                    "type": "function",
                    "view": "function setmetatable(table: table, metatable?: table|metatable)\n  -> table"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 3470021,
                "start": 3470009,
                "type": "setglobal"
            }
        ],
        "desc": "\nSets the metatable for the given table. If `metatable` is `nil`, removes the metatable of the given table. If the original metatable has a `__metatable` field, raises an error.\n\nThis function returns `table`.\n\nTo change the metatable of other types from Lua code, you must use the debug library ([ยง6.10](http://www.lua.org/manual/5.4/manual.html#6.10)).\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-setmetatable)",
        "name": "setmetatable",
        "rawdesc": "\nSets the metatable for the given table. If `metatable` is `nil`, removes the metatable of the given table. If the original metatable has a `__metatable` field, raises an error.\n\nThis function returns `table`.\n\nTo change the metatable of other types from Lua code, you must use the debug library ([ยง6.10](http://www.lua.org/manual/5.4/manual.html#6.10)).\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-setmetatable)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Stops script execution.",
                    "finish": 340019,
                    "rawdesc": "Stops script execution.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 340000,
                    "type": "function",
                    "view": "function stop()\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 340013,
                "start": 340009,
                "type": "setglobal"
            }
        ],
        "desc": "Stops script execution.",
        "name": "stop",
        "rawdesc": "Stops script execution.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 80011,
                    "start": 80009,
                    "type": "table",
                    "view": "stringlib"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 80006,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string)\n",
        "name": "string",
        "rawdesc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string)\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 200022,
                            "name": "s",
                            "start": 200021,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 200025,
                            "name": "i",
                            "start": 200024,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 200028,
                            "name": "j",
                            "start": 200027,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.byte)",
                    "finish": 200033,
                    "rawdesc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.byte)",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 200000,
                    "type": "function",
                    "view": "function string.byte(s: string|number, i?: integer, j?: integer)\n  -> ...integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 200020,
                "start": 200009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.byte)",
        "name": "string.byte",
        "rawdesc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.byte)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 310025,
                            "name": "byte",
                            "start": 310021,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 310030,
                            "start": 310027,
                            "type": "...",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.char)",
                    "finish": 310035,
                    "rawdesc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.char)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 310000,
                    "type": "function",
                    "view": "function string.char(byte: integer, ...integer)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 310020,
                "start": 310009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.char)",
        "name": "string.char",
        "rawdesc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.char)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 420022,
                            "name": "f",
                            "start": 420021,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 420029,
                            "name": "strip",
                            "start": 420024,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.dump)",
                    "finish": 420034,
                    "rawdesc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.dump)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 420000,
                    "type": "function",
                    "view": "function string.dump(f: fun(...any):...unknown, strip?: boolean)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 420020,
                "start": 420009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.dump)",
        "name": "string.dump",
        "rawdesc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.dump)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 570022,
                            "name": "s",
                            "start": 570021,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 570031,
                            "name": "pattern",
                            "start": 570024,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 570037,
                            "name": "init",
                            "start": 570033,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 570044,
                            "name": "plain",
                            "start": 570039,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nLooks for the first match of `pattern` (see [ยง6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) in the string.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.find)\n\n@*return* `start`\n\n@*return* `end`\n\n@*return* `...` โ captured",
                    "finish": 570049,
                    "rawdesc": "\nLooks for the first match of `pattern` (see [ยง6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) in the string.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.find)",
                    "returns": [
                        {
                            "name": "start",
                            "type": "function.return",
                            "view": "integer|nil"
                        },
                        {
                            "name": "end",
                            "type": "function.return",
                            "view": "integer|nil"
                        },
                        {
                            "desc": "captured",
                            "name": "...",
                            "rawdesc": "captured",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 570000,
                    "type": "function",
                    "view": "function string.find(s: string|number, pattern: string|number, init?: integer, plain?: boolean)\n  -> start: integer|nil\n  2. end: integer|nil\n  3. ...any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 570020,
                "start": 570009,
                "type": "setfield"
            }
        ],
        "desc": "\nLooks for the first match of `pattern` (see [ยง6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) in the string.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.find)\n\n@*return* `start`\n\n@*return* `end`\n\n@*return* `...` โ captured",
        "name": "string.find",
        "rawdesc": "\nLooks for the first match of `pattern` (see [ยง6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) in the string.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.find)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 680024,
                            "name": "s",
                            "start": 680023,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 680029,
                            "start": 680026,
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.format)",
                    "finish": 680034,
                    "rawdesc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.format)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 680000,
                    "type": "function",
                    "view": "function string.format(s: string|number, ...any)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 680022,
                "start": 680009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.format)",
        "name": "string.format",
        "rawdesc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.format)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 890024,
                            "name": "s",
                            "start": 890023,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 890033,
                            "name": "pattern",
                            "start": 890026,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 890039,
                            "name": "init",
                            "start": 890035,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [ยง6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.gmatch)",
                    "finish": 890044,
                    "rawdesc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [ยง6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.gmatch)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun():string, ...unknown"
                        }
                    ],
                    "start": 890000,
                    "type": "function",
                    "view": "function string.gmatch(s: string|number, pattern: string|number, init?: integer)\n  -> fun():string, ...unknown"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 890022,
                "start": 890009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [ยง6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.gmatch)",
        "name": "string.gmatch",
        "rawdesc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [ยง6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.gmatch)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1030022,
                            "name": "s",
                            "start": 1030021,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1030031,
                            "name": "pattern",
                            "start": 1030024,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1030037,
                            "name": "repl",
                            "start": 1030033,
                            "type": "local",
                            "view": "string|number|function|table"
                        },
                        {
                            "finish": 1030040,
                            "name": "n",
                            "start": 1030039,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [ยง6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) have been replaced by a replacement string specified by `repl`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.gsub)",
                    "finish": 1030045,
                    "rawdesc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [ยง6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) have been replaced by a replacement string specified by `repl`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.gsub)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "count",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1030000,
                    "type": "function",
                    "view": "function string.gsub(s: string|number, pattern: string|number, repl: string|number|function|table, n?: integer)\n  -> string\n  2. count: integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1030020,
                "start": 1030009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [ยง6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) have been replaced by a replacement string specified by `repl`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.gsub)",
        "name": "string.gsub",
        "rawdesc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [ยง6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) have been replaced by a replacement string specified by `repl`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.gsub)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1130021,
                            "name": "s",
                            "start": 1130020,
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns its length.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.len)",
                    "finish": 1130026,
                    "rawdesc": "\nReturns its length.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.len)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1130000,
                    "type": "function",
                    "view": "function string.len(s: string|number)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1130019,
                "start": 1130009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns its length.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.len)",
        "name": "string.len",
        "rawdesc": "\nReturns its length.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.len)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1230023,
                            "name": "s",
                            "start": 1230022,
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.lower)",
                    "finish": 1230028,
                    "rawdesc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.lower)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1230000,
                    "type": "function",
                    "view": "function string.lower(s: string|number)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1230021,
                "start": 1230009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.lower)",
        "name": "string.lower",
        "rawdesc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.lower)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1350023,
                            "name": "s",
                            "start": 1350022,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1350032,
                            "name": "pattern",
                            "start": 1350025,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1350038,
                            "name": "init",
                            "start": 1350034,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nLooks for the first match of `pattern` (see [ยง6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) in the string.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.match)",
                    "finish": 1350043,
                    "rawdesc": "\nLooks for the first match of `pattern` (see [ยง6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) in the string.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.match)",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 1350000,
                    "type": "function",
                    "view": "function string.match(s: string|number, pattern: string|number, init?: integer)\n  -> ...any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1350021,
                "start": 1350009,
                "type": "setfield"
            }
        ],
        "desc": "\nLooks for the first match of `pattern` (see [ยง6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) in the string.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.match)",
        "name": "string.match",
        "rawdesc": "\nLooks for the first match of `pattern` (see [ยง6.4.1](http://www.lua.org/manual/5.4/manual.html#6.4.1)) in the string.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.match)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1490024,
                            "name": "fmt",
                            "start": 1490021,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 1490028,
                            "name": "v1",
                            "start": 1490026,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1490032,
                            "name": "v2",
                            "start": 1490030,
                            "type": "local",
                            "view": "(string|number)?"
                        },
                        {
                            "finish": 1490037,
                            "start": 1490034,
                            "type": "...",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [ยง6.4.2](http://www.lua.org/manual/5.4/manual.html#6.4.2)) .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.pack)",
                    "finish": 1490042,
                    "rawdesc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [ยง6.4.2](http://www.lua.org/manual/5.4/manual.html#6.4.2)) .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.pack)",
                    "returns": [
                        {
                            "name": "binary",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1490000,
                    "type": "function",
                    "view": "function string.pack(fmt: string, v1: string|number, v2?: string|number, ...string|number)\n  -> binary: string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1490020,
                "start": 1490009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [ยง6.4.2](http://www.lua.org/manual/5.4/manual.html#6.4.2)) .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.pack)",
        "name": "string.pack",
        "rawdesc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [ยง6.4.2](http://www.lua.org/manual/5.4/manual.html#6.4.2)) .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.pack)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1600028,
                            "name": "fmt",
                            "start": 1600025,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [ยง6.4.2](http://www.lua.org/manual/5.4/manual.html#6.4.2)) .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.packsize)",
                    "finish": 1600033,
                    "rawdesc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [ยง6.4.2](http://www.lua.org/manual/5.4/manual.html#6.4.2)) .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.packsize)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1600000,
                    "type": "function",
                    "view": "function string.packsize(fmt: string)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1600024,
                "start": 1600009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [ยง6.4.2](http://www.lua.org/manual/5.4/manual.html#6.4.2)) .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.packsize)",
        "name": "string.packsize",
        "rawdesc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [ยง6.4.2](http://www.lua.org/manual/5.4/manual.html#6.4.2)) .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.packsize)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1720021,
                            "name": "s",
                            "start": 1720020,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1720024,
                            "name": "n",
                            "start": 1720023,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 1720029,
                            "name": "sep",
                            "start": 1720026,
                            "type": "local",
                            "view": "(string|number)?"
                        }
                    ],
                    "desc": "\nReturns a string that is the concatenation of `n` copies of the string `s` separated by the string `sep`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.rep)",
                    "finish": 1720034,
                    "rawdesc": "\nReturns a string that is the concatenation of `n` copies of the string `s` separated by the string `sep`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.rep)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1720000,
                    "type": "function",
                    "view": "function string.rep(s: string|number, n: integer, sep?: string|number)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1720019,
                "start": 1720009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string that is the concatenation of `n` copies of the string `s` separated by the string `sep`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.rep)",
        "name": "string.rep",
        "rawdesc": "\nReturns a string that is the concatenation of `n` copies of the string `s` separated by the string `sep`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.rep)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1820025,
                            "name": "s",
                            "start": 1820024,
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.reverse)",
                    "finish": 1820030,
                    "rawdesc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.reverse)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1820000,
                    "type": "function",
                    "view": "function string.reverse(s: string|number)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1820023,
                "start": 1820009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.reverse)",
        "name": "string.reverse",
        "rawdesc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.reverse)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1940021,
                            "name": "s",
                            "start": 1940020,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1940024,
                            "name": "i",
                            "start": 1940023,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 1940027,
                            "name": "j",
                            "start": 1940026,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.sub)",
                    "finish": 1940032,
                    "rawdesc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.sub)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1940000,
                    "type": "function",
                    "view": "function string.sub(s: string|number, i: integer, j?: integer)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1940019,
                "start": 1940009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.sub)",
        "name": "string.sub",
        "rawdesc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.sub)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2080026,
                            "name": "fmt",
                            "start": 2080023,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 2080029,
                            "name": "s",
                            "start": 2080028,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 2080034,
                            "name": "pos",
                            "start": 2080031,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the values packed in string according to the format string `fmt` (see [ยง6.4.2](http://www.lua.org/manual/5.4/manual.html#6.4.2)) .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.unpack)",
                    "finish": 2080039,
                    "rawdesc": "\nReturns the values packed in string according to the format string `fmt` (see [ยง6.4.2](http://www.lua.org/manual/5.4/manual.html#6.4.2)) .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.unpack)",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "name": "offset",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 2080000,
                    "type": "function",
                    "view": "function string.unpack(fmt: string, s: string, pos?: integer)\n  -> ...any\n  2. offset: integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 2080022,
                "start": 2080009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the values packed in string according to the format string `fmt` (see [ยง6.4.2](http://www.lua.org/manual/5.4/manual.html#6.4.2)) .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.unpack)",
        "name": "string.unpack",
        "rawdesc": "\nReturns the values packed in string according to the format string `fmt` (see [ยง6.4.2](http://www.lua.org/manual/5.4/manual.html#6.4.2)) .\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.unpack)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2180023,
                            "name": "s",
                            "start": 2180022,
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.upper)",
                    "finish": 2180028,
                    "rawdesc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.upper)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 2180000,
                    "type": "function",
                    "view": "function string.upper(s: string|number)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 2180021,
                "start": 2180009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.upper)",
        "name": "string.upper",
        "rawdesc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-string.upper)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 80010,
                    "start": 80008,
                    "type": "table",
                    "view": "tablelib"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 80005,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table)\n",
        "name": "table",
        "rawdesc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table)\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 210026,
                            "name": "list",
                            "start": 210022,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 210031,
                            "name": "sep",
                            "start": 210028,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": 210034,
                            "name": "i",
                            "start": 210033,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 210037,
                            "name": "j",
                            "start": 210036,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nGiven a list where all elements are strings or numbers, returns the string `list[i]..sep..list[i+1] ยทยทยท sep..list[j]`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.concat)",
                    "finish": 210042,
                    "rawdesc": "\nGiven a list where all elements are strings or numbers, returns the string `list[i]..sep..list[i+1] ยทยทยท sep..list[j]`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.concat)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 210000,
                    "type": "function",
                    "view": "function table.concat(list: table, sep?: string, i?: integer, j?: integer)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 210021,
                "start": 210009,
                "type": "setfield"
            }
        ],
        "desc": "\nGiven a list where all elements are strings or numbers, returns the string `list[i]..sep..list[i+1] ยทยทยท sep..list[j]`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.concat)",
        "name": "table.concat",
        "rawdesc": "\nGiven a list where all elements are strings or numbers, returns the string `list[i]..sep..list[i+1] ยทยทยท sep..list[j]`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.concat)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1250027,
                            "name": "list",
                            "start": 1250023,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1250037,
                            "name": "callback",
                            "start": 1250029,
                            "type": "local",
                            "view": "fun(key: string, value: any):<T>|nil"
                        }
                    ],
                    "desc": "\nExecutes the given f over all elements of table. For each element, f is called with the index and respective value as arguments. If f returns a non-nil value, then the loop is broken, and this value is returned as the final value of foreach.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.foreach)",
                    "finish": 1250042,
                    "rawdesc": "\nExecutes the given f over all elements of table. For each element, f is called with the index and respective value as arguments. If f returns a non-nil value, then the loop is broken, and this value is returned as the final value of foreach.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.foreach)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T>|nil"
                        }
                    ],
                    "start": 1250000,
                    "type": "function",
                    "view": "function table.foreach(list: any, callback: fun(key: string, value: any):<T>|nil)\n  -> <T>|nil"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 1250022,
                "start": 1250009,
                "type": "setfield"
            }
        ],
        "desc": "\nExecutes the given f over all elements of table. For each element, f is called with the index and respective value as arguments. If f returns a non-nil value, then the loop is broken, and this value is returned as the final value of foreach.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.foreach)",
        "name": "table.foreach",
        "rawdesc": "\nExecutes the given f over all elements of table. For each element, f is called with the index and respective value as arguments. If f returns a non-nil value, then the loop is broken, and this value is returned as the final value of foreach.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.foreach)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1380028,
                            "name": "list",
                            "start": 1380024,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1380038,
                            "name": "callback",
                            "start": 1380030,
                            "type": "local",
                            "view": "fun(key: string, value: any):<T>|nil"
                        }
                    ],
                    "desc": "\nExecutes the given f over the numerical indices of table. For each index, f is called with the index and respective value as arguments. Indices are visited in sequential order, from 1 to n, where n is the size of the table. If f returns a non-nil value, then the loop is broken and this value is returned as the result of foreachi.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.foreachi)",
                    "finish": 1380043,
                    "rawdesc": "\nExecutes the given f over the numerical indices of table. For each index, f is called with the index and respective value as arguments. Indices are visited in sequential order, from 1 to n, where n is the size of the table. If f returns a non-nil value, then the loop is broken and this value is returned as the result of foreachi.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.foreachi)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T>|nil"
                        }
                    ],
                    "start": 1380000,
                    "type": "function",
                    "view": "function table.foreachi(list: any, callback: fun(key: string, value: any):<T>|nil)\n  -> <T>|nil"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 1380023,
                "start": 1380009,
                "type": "setfield"
            }
        ],
        "desc": "\nExecutes the given f over the numerical indices of table. For each index, f is called with the index and respective value as arguments. Indices are visited in sequential order, from 1 to n, where n is the size of the table. If f returns a non-nil value, then the loop is broken and this value is returned as the result of foreachi.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.foreachi)",
        "name": "table.foreachi",
        "rawdesc": "\nExecutes the given f over the numerical indices of table. For each index, f is called with the index and respective value as arguments. Indices are visited in sequential order, from 1 to n, where n is the size of the table. If f returns a non-nil value, then the loop is broken and this value is returned as the result of foreachi.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.foreachi)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1510024,
                            "name": "list",
                            "start": 1510020,
                            "type": "local",
                            "view": "<T>[]"
                        }
                    ],
                    "desc": "\nReturns the number of elements in the table. This function is equivalent to `#list`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.getn)",
                    "finish": 1510029,
                    "rawdesc": "\nReturns the number of elements in the table. This function is equivalent to `#list`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.getn)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1510000,
                    "type": "function",
                    "view": "function table.getn(list: <T>[])\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 1510019,
                "start": 1510009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the number of elements in the table. This function is equivalent to `#list`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.getn)",
        "name": "table.getn",
        "rawdesc": "\nReturns the number of elements in the table. This function is equivalent to `#list`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.getn)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 320026,
                            "name": "list",
                            "start": 320022,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 320031,
                            "name": "pos",
                            "start": 320028,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 320038,
                            "name": "value",
                            "start": 320033,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nInserts element `value` at position `pos` in `list`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.insert)",
                    "finish": 320043,
                    "rawdesc": "\nInserts element `value` at position `pos` in `list`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.insert)",
                    "start": 320000,
                    "type": "function",
                    "view": "function table.insert(list: table, pos: integer, value: any)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 320021,
                "start": 320009,
                "type": "setfield"
            }
        ],
        "desc": "\nInserts element `value` at position `pos` in `list`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.insert)",
        "name": "table.insert",
        "rawdesc": "\nInserts element `value` at position `pos` in `list`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.insert)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 430025,
                            "name": "table",
                            "start": 430020,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nReturns the largest positive numerical index of the given table, or zero if the table has no positive numerical indices.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.maxn)",
                    "finish": 430030,
                    "rawdesc": "\nReturns the largest positive numerical index of the given table, or zero if the table has no positive numerical indices.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.maxn)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 430000,
                    "type": "function",
                    "view": "function table.maxn(table: table)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 430019,
                "start": 430009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the largest positive numerical index of the given table, or zero if the table has no positive numerical indices.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.maxn)",
        "name": "table.maxn",
        "rawdesc": "\nReturns the largest positive numerical index of the given table, or zero if the table has no positive numerical indices.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.maxn)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 630022,
                            "name": "a1",
                            "start": 630020,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 630025,
                            "name": "f",
                            "start": 630024,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 630028,
                            "name": "e",
                            "start": 630027,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 630031,
                            "name": "t",
                            "start": 630030,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 630035,
                            "name": "a2",
                            "start": 630033,
                            "type": "local",
                            "view": "table?"
                        }
                    ],
                    "desc": "\nMoves elements from table `a1` to table `a2`.\n```lua\na2[t],ยทยทยท =\na1[f],ยทยทยท,a1[e]\nreturn a2\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.move)",
                    "finish": 630040,
                    "rawdesc": "\nMoves elements from table `a1` to table `a2`.\n```lua\na2[t],ยทยทยท =\na1[f],ยทยทยท,a1[e]\nreturn a2\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.move)",
                    "returns": [
                        {
                            "name": "a2",
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 630000,
                    "type": "function",
                    "view": "function table.move(a1: table, f: integer, e: integer, t: integer, a2?: table)\n  -> a2: table"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 630019,
                "start": 630009,
                "type": "setfield"
            }
        ],
        "desc": "\nMoves elements from table `a1` to table `a2`.\n```lua\na2[t],ยทยทยท =\na1[f],ยทยทยท,a1[e]\nreturn a2\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.move)",
        "name": "table.move",
        "rawdesc": "\nMoves elements from table `a1` to table `a2`.\n```lua\na2[t],ยทยทยท =\na1[f],ยทยทยท,a1[e]\nreturn a2\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.move)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 730023,
                            "start": 730020,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nReturns a new table with all arguments stored into keys `1`, `2`, etc. and with a field `\"n\"` with the total number of arguments.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.pack)",
                    "finish": 730028,
                    "rawdesc": "\nReturns a new table with all arguments stored into keys `1`, `2`, etc. and with a field `\"n\"` with the total number of arguments.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.pack)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 730000,
                    "type": "function",
                    "view": "function table.pack(...any)\n  -> table"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 730019,
                "start": 730009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a new table with all arguments stored into keys `1`, `2`, etc. and with a field `\"n\"` with the total number of arguments.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.pack)",
        "name": "table.pack",
        "rawdesc": "\nReturns a new table with all arguments stored into keys `1`, `2`, etc. and with a field `\"n\"` with the total number of arguments.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.pack)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 830026,
                            "name": "list",
                            "start": 830022,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 830031,
                            "name": "pos",
                            "start": 830028,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nRemoves from `list` the element at position `pos`, returning the value of the removed element.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.remove)",
                    "finish": 830036,
                    "rawdesc": "\nRemoves from `list` the element at position `pos`, returning the value of the removed element.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.remove)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 830000,
                    "type": "function",
                    "view": "function table.remove(list: table, pos?: integer)\n  -> any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 830021,
                "start": 830009,
                "type": "setfield"
            }
        ],
        "desc": "\nRemoves from `list` the element at position `pos`, returning the value of the removed element.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.remove)",
        "name": "table.remove",
        "rawdesc": "\nRemoves from `list` the element at position `pos`, returning the value of the removed element.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.remove)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 930024,
                            "name": "list",
                            "start": 930020,
                            "type": "local",
                            "view": "<T>[]"
                        },
                        {
                            "finish": 930030,
                            "name": "comp",
                            "start": 930026,
                            "type": "local",
                            "view": "(fun(a: <T>, b: <T>):boolean)?"
                        }
                    ],
                    "desc": "\nSorts list elements in a given order, *in-place*, from `list[1]` to `list[#list]`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.sort)",
                    "finish": 930035,
                    "rawdesc": "\nSorts list elements in a given order, *in-place*, from `list[1]` to `list[#list]`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.sort)",
                    "start": 930000,
                    "type": "function",
                    "view": "function table.sort(list: <T>[], comp?: fun(a: <T>, b: <T>):boolean)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 930019,
                "start": 930009,
                "type": "setfield"
            }
        ],
        "desc": "\nSorts list elements in a given order, *in-place*, from `list[1]` to `list[#list]`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.sort)",
        "name": "table.sort",
        "rawdesc": "\nSorts list elements in a given order, *in-place*, from `list[1]` to `list[#list]`.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.sort)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1120026,
                            "name": "list",
                            "start": 1120022,
                            "type": "local",
                            "view": "<T>[]"
                        },
                        {
                            "finish": 1120029,
                            "name": "i",
                            "start": 1120028,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 1120032,
                            "name": "j",
                            "start": 1120031,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the elements from the given list. This function is equivalent to\n```lua\n    return list[i], list[i+1], ยทยทยท, list[j]\n```\nBy default, `i` is `1` and `j` is `#list`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.unpack)",
                    "finish": 1120037,
                    "rawdesc": "\nReturns the elements from the given list. This function is equivalent to\n```lua\n    return list[i], list[i+1], ยทยทยท, list[j]\n```\nBy default, `i` is `1` and `j` is `#list`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.unpack)",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "<T>"
                        }
                    ],
                    "start": 1120000,
                    "type": "function",
                    "view": "function table.unpack(list: <T>[], i?: integer, j?: integer)\n  -> ...<T>"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 1120021,
                "start": 1120009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the elements from the given list. This function is equivalent to\n```lua\n    return list[i], list[i+1], ยทยทยท, list[j]\n```\nBy default, `i` is `1` and `j` is `#list`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.unpack)",
        "name": "table.unpack",
        "rawdesc": "\nReturns the elements from the given list. This function is equivalent to\n```lua\n    return list[i], list[i+1], ยทยทยท, list[j]\n```\nBy default, `i` is `1` and `j` is `#list`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-table.unpack)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3610019,
                            "name": "e",
                            "start": 3610018,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nWhen called with no `base`, `tonumber` tries to convert its argument to a number. If the argument is already a number or a string convertible to a number, then `tonumber` returns this number; otherwise, it returns `fail`.\n\nThe conversion of strings can result in integers or floats, according to the lexical conventions of Lua (see [ยง3.1](http://www.lua.org/manual/5.4/manual.html#3.1)). The string may have leading and trailing spaces and a sign.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-tonumber)",
                    "finish": 3610024,
                    "rawdesc": "\nWhen called with no `base`, `tonumber` tries to convert its argument to a number. If the argument is already a number or a string convertible to a number, then `tonumber` returns this number; otherwise, it returns `fail`.\n\nThe conversion of strings can result in integers or floats, according to the lexical conventions of Lua (see [ยง3.1](http://www.lua.org/manual/5.4/manual.html#3.1)). The string may have leading and trailing spaces and a sign.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-tonumber)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": 3610000,
                    "type": "function",
                    "view": "function tonumber(e: any)\n  -> number?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 3610017,
                "start": 3610009,
                "type": "setglobal"
            }
        ],
        "desc": "\nWhen called with no `base`, `tonumber` tries to convert its argument to a number. If the argument is already a number or a string convertible to a number, then `tonumber` returns this number; otherwise, it returns `fail`.\n\nThe conversion of strings can result in integers or floats, according to the lexical conventions of Lua (see [ยง3.1](http://www.lua.org/manual/5.4/manual.html#3.1)). The string may have leading and trailing spaces and a sign.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-tonumber)",
        "name": "tonumber",
        "rawdesc": "\nWhen called with no `base`, `tonumber` tries to convert its argument to a number. If the argument is already a number or a string convertible to a number, then `tonumber` returns this number; otherwise, it returns `fail`.\n\nThe conversion of strings can result in integers or floats, according to the lexical conventions of Lua (see [ยง3.1](http://www.lua.org/manual/5.4/manual.html#3.1)). The string may have leading and trailing spaces and a sign.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-tonumber)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3760019,
                            "name": "v",
                            "start": 3760018,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReceives a value of any type and converts it to a string in a human-readable format.\n\nIf the metatable of `v` has a `__tostring` field, then `tostring` calls the corresponding value with `v` as argument, and uses the result of the call as its result. Otherwise, if the metatable of `v` has a `__name` field with a string value, `tostring` may use that string in its final result.\n\nFor complete control of how numbers are converted, use [string.format](http://www.lua.org/manual/5.4/manual.html#pdf-string.format).\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-tostring)",
                    "finish": 3760024,
                    "rawdesc": "\nReceives a value of any type and converts it to a string in a human-readable format.\n\nIf the metatable of `v` has a `__tostring` field, then `tostring` calls the corresponding value with `v` as argument, and uses the result of the call as its result. Otherwise, if the metatable of `v` has a `__name` field with a string value, `tostring` may use that string in its final result.\n\nFor complete control of how numbers are converted, use [string.format](http://www.lua.org/manual/5.4/manual.html#pdf-string.format).\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-tostring)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 3760000,
                    "type": "function",
                    "view": "function tostring(v: any)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 3760017,
                "start": 3760009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReceives a value of any type and converts it to a string in a human-readable format.\n\nIf the metatable of `v` has a `__tostring` field, then `tostring` calls the corresponding value with `v` as argument, and uses the result of the call as its result. Otherwise, if the metatable of `v` has a `__name` field with a string value, `tostring` may use that string in its final result.\n\nFor complete control of how numbers are converted, use [string.format](http://www.lua.org/manual/5.4/manual.html#pdf-string.format).\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-tostring)",
        "name": "tostring",
        "rawdesc": "\nReceives a value of any type and converts it to a string in a human-readable format.\n\nIf the metatable of `v` has a `__tostring` field, then `tostring` calls the corresponding value with `v` as argument, and uses the result of the call as its result. Otherwise, if the metatable of `v` has a `__name` field with a string value, `tostring` may use that string in its final result.\n\nFor complete control of how numbers are converted, use [string.format](http://www.lua.org/manual/5.4/manual.html#pdf-string.format).\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-tostring)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3970015,
                            "name": "v",
                            "start": 3970014,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns the type of its only argument, coded as a string. The possible results of this function are `\"nil\"` (a string, not the value `nil`), `\"number\"`, `\"string\"`, `\"boolean\"`, `\"table\"`, `\"function\"`, `\"thread\"`, and `\"userdata\"`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-type)\n\n\n```lua\ntype:\n    | \"nil\"\n    | \"number\"\n    | \"string\"\n    | \"boolean\"\n    | \"table\"\n    | \"function\"\n    | \"thread\"\n    | \"userdata\"\n```",
                    "finish": 3970020,
                    "rawdesc": "\nReturns the type of its only argument, coded as a string. The possible results of this function are `\"nil\"` (a string, not the value `nil`), `\"number\"`, `\"string\"`, `\"boolean\"`, `\"table\"`, `\"function\"`, `\"thread\"`, and `\"userdata\"`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-type)\n\n\n```lua\ntype:\n    | \"nil\"\n    | \"number\"\n    | \"string\"\n    | \"boolean\"\n    | \"table\"\n    | \"function\"\n    | \"thread\"\n    | \"userdata\"\n```",
                    "returns": [
                        {
                            "name": "type",
                            "type": "function.return",
                            "view": "\"boolean\"|\"function\"|\"nil\"|\"number\"|\"string\"...(+3)"
                        }
                    ],
                    "start": 3970000,
                    "type": "function",
                    "view": "function type(v: any)\n  -> type: \"boolean\"|\"function\"|\"nil\"|\"number\"|\"string\"...(+3)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 3970013,
                "start": 3970009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReturns the type of its only argument, coded as a string. The possible results of this function are `\"nil\"` (a string, not the value `nil`), `\"number\"`, `\"string\"`, `\"boolean\"`, `\"table\"`, `\"function\"`, `\"thread\"`, and `\"userdata\"`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-type)\n\n\n```lua\ntype:\n    | \"nil\"\n    | \"number\"\n    | \"string\"\n    | \"boolean\"\n    | \"table\"\n    | \"function\"\n    | \"thread\"\n    | \"userdata\"\n```",
        "name": "type",
        "rawdesc": "\nReturns the type of its only argument, coded as a string. The possible results of this function are `\"nil\"` (a string, not the value `nil`), `\"number\"`, `\"string\"`, `\"boolean\"`, `\"table\"`, `\"function\"`, `\"thread\"`, and `\"userdata\"`.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-type)\n\n\n```lua\ntype:\n    | \"nil\"\n    | \"number\"\n    | \"string\"\n    | \"boolean\"\n    | \"table\"\n    | \"function\"\n    | \"thread\"\n    | \"userdata\"\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4460020,
                            "name": "list",
                            "start": 4460016,
                            "type": "local",
                            "view": "<T>[]"
                        },
                        {
                            "finish": 4460023,
                            "name": "i",
                            "start": 4460022,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 4460026,
                            "name": "j",
                            "start": 4460025,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the elements from the given `list`. This function is equivalent to\n```lua\n    return list[i], list[i+1], ยทยทยท, list[j]\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-unpack)",
                    "finish": 4460031,
                    "rawdesc": "\nReturns the elements from the given `list`. This function is equivalent to\n```lua\n    return list[i], list[i+1], ยทยทยท, list[j]\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-unpack)",
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "<T>"
                        }
                    ],
                    "start": 4460000,
                    "type": "function",
                    "view": "function unpack(list: <T>[], i?: integer, j?: integer)\n  -> ...<T>"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 4460015,
                "start": 4460009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReturns the elements from the given `list`. This function is equivalent to\n```lua\n    return list[i], list[i+1], ยทยทยท, list[j]\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-unpack)",
        "name": "unpack",
        "rawdesc": "\nReturns the elements from the given `list`. This function is equivalent to\n```lua\n    return list[i], list[i+1], ยทยทยท, list[j]\n```\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-unpack)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 150009,
                    "start": 150007,
                    "type": "table",
                    "view": "utf8lib"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": 150004,
                "start": 150000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8)\n",
        "name": "utf8",
        "rawdesc": "\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8)\n",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 260023,
                            "name": "code",
                            "start": 260019,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 260028,
                            "start": 260025,
                            "type": "...",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReceives zero or more integers, converts each one to its corresponding UTF-8 byte sequence and returns a string with the concatenation of all these sequences.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.char)",
                    "finish": 260033,
                    "rawdesc": "\nReceives zero or more integers, converts each one to its corresponding UTF-8 byte sequence and returns a string with the concatenation of all these sequences.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.char)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 260000,
                    "type": "function",
                    "view": "function utf8.char(code: integer, ...integer)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": 260018,
                "start": 260009,
                "type": "setfield"
            }
        ],
        "desc": "\nReceives zero or more integers, converts each one to its corresponding UTF-8 byte sequence and returns a string with the concatenation of all these sequences.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.char)",
        "name": "utf8.char",
        "rawdesc": "\nReceives zero or more integers, converts each one to its corresponding UTF-8 byte sequence and returns a string with the concatenation of all these sequences.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.char)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 570025,
                            "name": "s",
                            "start": 570024,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 570028,
                            "name": "i",
                            "start": 570027,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 570031,
                            "name": "j",
                            "start": 570030,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 570036,
                            "name": "lax",
                            "start": 570033,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nReturns the codepoints (as integers) from all characters in `s` that start between byte position `i` and `j` (both included).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.codepoint)",
                    "finish": 570041,
                    "rawdesc": "\nReturns the codepoints (as integers) from all characters in `s` that start between byte position `i` and `j` (both included).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.codepoint)",
                    "returns": [
                        {
                            "name": "code",
                            "type": "function.return",
                            "view": "integer"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 570000,
                    "type": "function",
                    "view": "function utf8.codepoint(s: string, i?: integer, j?: integer, lax?: boolean)\n  -> code: integer\n  2. ...integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": 570023,
                "start": 570009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the codepoints (as integers) from all characters in `s` that start between byte position `i` and `j` (both included).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.codepoint)",
        "name": "utf8.codepoint",
        "rawdesc": "\nReturns the codepoints (as integers) from all characters in `s` that start between byte position `i` and `j` (both included).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.codepoint)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 430021,
                            "name": "s",
                            "start": 430020,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 430026,
                            "name": "lax",
                            "start": 430023,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nReturns values so that the construction\n```lua\nfor p, c in utf8.codes(s) do\n    body\nend\n```\nwill iterate over all UTF-8 characters in string s, with p being the position (in bytes) and c the code point of each character. It raises an error if it meets any invalid byte sequence.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.codes)",
                    "finish": 430031,
                    "rawdesc": "\nReturns values so that the construction\n```lua\nfor p, c in utf8.codes(s) do\n    body\nend\n```\nwill iterate over all UTF-8 characters in string s, with p being the position (in bytes) and c the code point of each character. It raises an error if it meets any invalid byte sequence.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.codes)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun(s: string, p: integer):integer, integer"
                        }
                    ],
                    "start": 430000,
                    "type": "function",
                    "view": "function utf8.codes(s: string, lax?: boolean)\n  -> fun(s: string, p: integer):integer, integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": 430019,
                "start": 430009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns values so that the construction\n```lua\nfor p, c in utf8.codes(s) do\n    body\nend\n```\nwill iterate over all UTF-8 characters in string s, with p being the position (in bytes) and c the code point of each character. It raises an error if it meets any invalid byte sequence.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.codes)",
        "name": "utf8.codes",
        "rawdesc": "\nReturns values so that the construction\n```lua\nfor p, c in utf8.codes(s) do\n    body\nend\n```\nwill iterate over all UTF-8 characters in string s, with p being the position (in bytes) and c the code point of each character. It raises an error if it meets any invalid byte sequence.\n\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.codes)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 710019,
                            "name": "s",
                            "start": 710018,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 710022,
                            "name": "i",
                            "start": 710021,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 710025,
                            "name": "j",
                            "start": 710024,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 710030,
                            "name": "lax",
                            "start": 710027,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nReturns the number of UTF-8 characters in string `s` that start between positions `i` and `j` (both inclusive).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.len)",
                    "finish": 710035,
                    "rawdesc": "\nReturns the number of UTF-8 characters in string `s` that start between positions `i` and `j` (both inclusive).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.len)",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer?"
                        },
                        {
                            "name": "errpos",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": 710000,
                    "type": "function",
                    "view": "function utf8.len(s: string, i?: integer, j?: integer, lax?: boolean)\n  -> integer?\n  2. errpos: integer?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": 710017,
                "start": 710009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the number of UTF-8 characters in string `s` that start between positions `i` and `j` (both inclusive).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.len)",
        "name": "utf8.len",
        "rawdesc": "\nReturns the number of UTF-8 characters in string `s` that start between positions `i` and `j` (both inclusive).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.len)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 830022,
                            "name": "s",
                            "start": 830021,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 830025,
                            "name": "n",
                            "start": 830024,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 830028,
                            "name": "i",
                            "start": 830027,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the position (in bytes) where the encoding of the `n`-th character of `s` (counting from position `i`) starts.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.offset)",
                    "finish": 830033,
                    "rawdesc": "\nReturns the position (in bytes) where the encoding of the `n`-th character of `s` (counting from position `i`) starts.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.offset)",
                    "returns": [
                        {
                            "name": "p",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 830000,
                    "type": "function",
                    "view": "function utf8.offset(s: string, n: integer, i?: integer)\n  -> p: integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": 830020,
                "start": 830009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the position (in bytes) where the encoding of the `n`-th character of `s` (counting from position `i`) starts.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.offset)",
        "name": "utf8.offset",
        "rawdesc": "\nReturns the position (in bytes) where the encoding of the `n`-th character of `s` (counting from position `i`) starts.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-utf8.offset)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4140021,
                            "name": "message",
                            "start": 4140014,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 4140026,
                            "start": 4140023,
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nEmits a warning with a message composed by the concatenation of all its arguments (which should be strings).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-warn)",
                    "finish": 4140031,
                    "rawdesc": "\nEmits a warning with a message composed by the concatenation of all its arguments (which should be strings).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-warn)",
                    "start": 4140000,
                    "type": "function",
                    "view": "function warn(message: string, ...any)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 4140013,
                "start": 4140009,
                "type": "setglobal"
            }
        ],
        "desc": "\nEmits a warning with a message composed by the concatenation of all its arguments (which should be strings).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-warn)",
        "name": "warn",
        "rawdesc": "\nEmits a warning with a message composed by the concatenation of all its arguments (which should be strings).\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-warn)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 120009,
                    "start": 120007,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 120004,
                "start": 120000,
                "type": "setglobal"
            }
        ],
        "name": "wgui",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The identifier of the image to clear. If it is 0, clear all iamges",
                            "finish": 5230029,
                            "name": "idx",
                            "rawdesc": "The identifier of the image to clear. If it is 0, clear all iamges",
                            "start": 5230026,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Clears one of all images\n\n@*param* `idx` โ The identifier of the image to clear. If it is 0, clear all iamges",
                    "finish": 5230034,
                    "rawdesc": "Clears one of all images",
                    "start": 5230000,
                    "type": "function",
                    "view": "function wgui.deleteimage(idx: integer)"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 5230025,
                "start": 5230009,
                "type": "setfield"
            }
        ],
        "desc": "Clears one of all images\n\n@*param* `idx` โ The identifier of the image to clear. If it is 0, clear all iamges",
        "name": "wgui.deleteimage",
        "rawdesc": "Clears one of all images",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 5290027,
                            "name": "idx",
                            "start": 5290024,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5290030,
                            "name": "x",
                            "start": 5290029,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5290033,
                            "name": "y",
                            "start": 5290032,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Draws the image at index `idx` at the specified coordinates",
                    "finish": 5290038,
                    "rawdesc": "Draws the image at index `idx` at the specified coordinates",
                    "start": 5290000,
                    "type": "function",
                    "view": "function wgui.drawimage(idx: integer, x: integer, y: integer)"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 5290023,
                "start": 5290009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 5360027,
                            "name": "idx",
                            "start": 5360024,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5360030,
                            "name": "x",
                            "start": 5360029,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5360033,
                            "name": "y",
                            "start": 5360032,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5360036,
                            "name": "s",
                            "start": 5360035,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Draws the image at index `idx` at the specified coordinates and scale",
                    "finish": 5360041,
                    "rawdesc": "Draws the image at index `idx` at the specified coordinates and scale",
                    "start": 5360000,
                    "type": "function",
                    "view": "function wgui.drawimage(idx: integer, x: integer, y: integer, s: number)"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 5360023,
                "start": 5360009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 5440027,
                            "name": "idx",
                            "start": 5440024,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5440030,
                            "name": "x",
                            "start": 5440029,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5440033,
                            "name": "y",
                            "start": 5440032,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5440036,
                            "name": "w",
                            "start": 5440035,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5440039,
                            "name": "h",
                            "start": 5440038,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Draws the image at index `idx` at the specified coordinates and size",
                    "finish": 5440044,
                    "rawdesc": "Draws the image at index `idx` at the specified coordinates and size",
                    "start": 5440000,
                    "type": "function",
                    "view": "function wgui.drawimage(idx: integer, x: integer, y: integer, w: integer, h: integer)"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 5440023,
                "start": 5440009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 5570027,
                            "name": "idx",
                            "start": 5570024,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5570030,
                            "name": "x",
                            "start": 5570029,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5570033,
                            "name": "y",
                            "start": 5570032,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5570036,
                            "name": "w",
                            "start": 5570035,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5570039,
                            "name": "h",
                            "start": 5570038,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5570045,
                            "name": "srcx",
                            "start": 5570041,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5570051,
                            "name": "srcy",
                            "start": 5570047,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5570057,
                            "name": "srcw",
                            "start": 5570053,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5570063,
                            "name": "srch",
                            "start": 5570059,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5570071,
                            "name": "rotate",
                            "start": 5570065,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Draws the image at index `idx` at the specified coordinates, size, and rotation, using a part of the source image given by the `src` parameters",
                    "finish": 5570076,
                    "rawdesc": "Draws the image at index `idx` at the specified coordinates, size, and rotation, using a part of the source image given by the `src` parameters",
                    "start": 5570000,
                    "type": "function",
                    "view": "function wgui.drawimage(idx: integer, x: integer, y: integer, w: integer, h: integer, srcx: integer, srcy: integer, srcw: integer, srch: integer, rotate: number)"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 5570023,
                "start": 5570009,
                "type": "setfield"
            }
        ],
        "desc": "Draws the image at index `idx` at the specified coordinates",
        "name": "wgui.drawimage",
        "rawdesc": "Draws the image at index `idx` at the specified coordinates",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4590027,
                            "name": "text",
                            "start": 4590023,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 4590033,
                            "name": "rect",
                            "start": 4590029,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 4590041,
                            "name": "format",
                            "start": 4590035,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "GDI: Draws text in a rectangle (more documentation soon)",
                    "finish": 4590046,
                    "rawdesc": "GDI: Draws text in a rectangle (more documentation soon)",
                    "start": 4590000,
                    "type": "function",
                    "view": "function wgui.drawtext(text: string, rect: table, format?: string)"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 4590022,
                "start": 4590009,
                "type": "setfield"
            }
        ],
        "desc": "GDI: Draws text in a rectangle (more documentation soon)",
        "name": "wgui.drawtext",
        "rawdesc": "GDI: Draws text in a rectangle (more documentation soon)",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4680030,
                            "name": "text",
                            "start": 4680026,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 4680038,
                            "name": "format",
                            "start": 4680032,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4680044,
                            "name": "left",
                            "start": 4680040,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4680049,
                            "name": "top",
                            "start": 4680046,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4680056,
                            "name": "right",
                            "start": 4680051,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4680064,
                            "name": "bottom",
                            "start": 4680058,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Uses an alternate function for drawing text",
                    "finish": 4680069,
                    "rawdesc": "Uses an alternate function for drawing text",
                    "start": 4680000,
                    "type": "function",
                    "view": "function wgui.drawtextalt(text: string, format: integer, left: integer, top: integer, right: integer, bottom: integer)"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 4680025,
                "start": 4680009,
                "type": "setfield"
            }
        ],
        "desc": "Uses an alternate function for drawing text",
        "name": "wgui.drawtextalt",
        "rawdesc": "Uses an alternate function for drawing text",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 5760026,
                            "name": "left",
                            "start": 5760022,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5760031,
                            "name": "top",
                            "start": 5760028,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5760038,
                            "name": "right",
                            "start": 5760033,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5760046,
                            "name": "bottom",
                            "start": 5760040,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Draws an ellipse at the specified coordinates and size. Uses the GDI brush color for the background and a 1 pixel border of the GDI pen color",
                    "finish": 5760051,
                    "rawdesc": "Draws an ellipse at the specified coordinates and size. Uses the GDI brush color for the background and a 1 pixel border of the GDI pen color",
                    "start": 5760000,
                    "type": "function",
                    "view": "function wgui.ellipse(left: integer, top: integer, right: integer, bottom: integer)"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 5760021,
                "start": 5760009,
                "type": "setfield"
            }
        ],
        "desc": "Draws an ellipse at the specified coordinates and size. Uses the GDI brush color for the background and a 1 pixel border of the GDI pen color",
        "name": "wgui.ellipse",
        "rawdesc": "Draws an ellipse at the specified coordinates and size. Uses the GDI brush color for the background and a 1 pixel border of the GDI pen color",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 5090028,
                            "name": "x",
                            "start": 5090027,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5090031,
                            "name": "y",
                            "start": 5090030,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5090034,
                            "name": "w",
                            "start": 5090033,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5090037,
                            "name": "h",
                            "start": 5090036,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "Color names are currently broken",
                            "finish": 5090044,
                            "name": "color",
                            "rawdesc": "Color names are currently broken",
                            "start": 5090039,
                            "type": "local",
                            "view": "string|\"black\"|\"blue\"|\"chartreuse\"|\"clear\"...(+9)"
                        }
                    ],
                    "desc": "GDIPlus: Draws an ellipse at the specified coordinates, size, and color\n\n@*param* `color` โ Color names are currently broken\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
                    "finish": 5090049,
                    "rawdesc": "GDIPlus: Draws an ellipse at the specified coordinates, size, and color\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
                    "start": 5090000,
                    "type": "function",
                    "view": "function wgui.fillellipsea(x: integer, y: integer, w: integer, h: integer, color: string|\"black\"|\"blue\"|\"chartreuse\"|\"clear\"...(+9))"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 5090026,
                "start": 5090009,
                "type": "setfield"
            }
        ],
        "desc": "GDIPlus: Draws an ellipse at the specified coordinates, size, and color\n\n@*param* `color` โ Color names are currently broken\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "name": "wgui.fillellipsea",
        "rawdesc": "GDIPlus: Draws an ellipse at the specified coordinates, size, and color\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "Ex: `\\{\\{x1, y1\\}, \\{x2, y2\\}, \\{x3, y3\\}\\}`",
                            "finish": 5140033,
                            "name": "points",
                            "rawdesc": "Ex: `\\{\\{x1, y1\\}, \\{x2, y2\\}, \\{x3, y3\\}\\}`",
                            "start": 5140027,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "desc": "Color names are currently broken",
                            "finish": 5140040,
                            "name": "color",
                            "rawdesc": "Color names are currently broken",
                            "start": 5140035,
                            "type": "local",
                            "view": "string|\"black\"|\"blue\"|\"chartreuse\"|\"clear\"...(+9)"
                        }
                    ],
                    "desc": "Draws a filled in polygon using the points in `points`\n\n@*param* `points` โ Ex: `\\{\\{x1, y1\\}, \\{x2, y2\\}, \\{x3, y3\\}\\}`\n\n@*param* `color` โ Color names are currently broken\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
                    "finish": 5140045,
                    "rawdesc": "Draws a filled in polygon using the points in `points`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
                    "start": 5140000,
                    "type": "function",
                    "view": "function wgui.fillpolygona(points: table, color: string|\"black\"|\"blue\"|\"chartreuse\"|\"clear\"...(+9))"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 5140026,
                "start": 5140009,
                "type": "setfield"
            }
        ],
        "desc": "Draws a filled in polygon using the points in `points`\n\n@*param* `points` โ Ex: `\\{\\{x1, y1\\}, \\{x2, y2\\}, \\{x3, y3\\}\\}`\n\n@*param* `color` โ Color names are currently broken\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "name": "wgui.fillpolygona",
        "rawdesc": "Draws a filled in polygon using the points in `points`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4930027,
                            "name": "left",
                            "start": 4930023,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4930032,
                            "name": "top",
                            "start": 4930029,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4930039,
                            "name": "right",
                            "start": 4930034,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4930047,
                            "name": "bottom",
                            "start": 4930041,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4930052,
                            "name": "red",
                            "start": 4930049,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4930059,
                            "name": "green",
                            "start": 4930054,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4930065,
                            "name": "blue",
                            "start": 4930061,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Draws a rectangle at the specified coordinates with the specified color",
                    "finish": 4930070,
                    "rawdesc": "Draws a rectangle at the specified coordinates with the specified color",
                    "start": 4930000,
                    "type": "function",
                    "view": "function wgui.fillrect(left: integer, top: integer, right: integer, bottom: integer, red: integer, green: integer, blue: integer)"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 4930022,
                "start": 4930009,
                "type": "setfield"
            }
        ],
        "desc": "Draws a rectangle at the specified coordinates with the specified color",
        "name": "wgui.fillrect",
        "rawdesc": "Draws a rectangle at the specified coordinates with the specified color",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 5010025,
                            "name": "x",
                            "start": 5010024,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5010028,
                            "name": "y",
                            "start": 5010027,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5010031,
                            "name": "w",
                            "start": 5010030,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5010034,
                            "name": "h",
                            "start": 5010033,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "Color names are currently broken",
                            "finish": 5010041,
                            "name": "color",
                            "rawdesc": "Color names are currently broken",
                            "start": 5010036,
                            "type": "local",
                            "view": "string|\"black\"|\"blue\"|\"chartreuse\"|\"clear\"...(+9)"
                        }
                    ],
                    "desc": "GDIPlus: Draws a rectangle at the specified coordinates, size and color\n\n@*param* `color` โ Color names are currently broken\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
                    "finish": 5010046,
                    "rawdesc": "GDIPlus: Draws a rectangle at the specified coordinates, size and color\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
                    "start": 5010000,
                    "type": "function",
                    "view": "function wgui.fillrecta(x: integer, y: integer, w: integer, h: integer, color: string|\"black\"|\"blue\"|\"chartreuse\"|\"clear\"...(+9))"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 5010023,
                "start": 5010009,
                "type": "setfield"
            }
        ],
        "desc": "GDIPlus: Draws a rectangle at the specified coordinates, size and color\n\n@*param* `color` โ Color names are currently broken\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "name": "wgui.fillrecta",
        "rawdesc": "GDIPlus: Draws a rectangle at the specified coordinates, size and color\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 5690030,
                            "name": "idx",
                            "start": 5690027,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Returns the width and height of the image at `idx`",
                    "finish": 5690035,
                    "rawdesc": "Returns the width and height of the image at `idx`",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "{ width: integer, height: integer }"
                        }
                    ],
                    "start": 5690000,
                    "type": "function",
                    "view": "function wgui.getimageinfo(idx: integer)\n  -> { width: integer, height: integer }"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 5690026,
                "start": 5690009,
                "type": "setfield"
            }
        ],
        "desc": "Returns the width and height of the image at `idx`",
        "name": "wgui.getimageinfo",
        "rawdesc": "Returns the width and height of the image at `idx`",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4730032,
                            "name": "text",
                            "start": 4730028,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Gets the width and height of the given text",
                    "finish": 4730037,
                    "rawdesc": "Gets the width and height of the given text",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "{ width: integer, height: integer }"
                        }
                    ],
                    "start": 4730000,
                    "type": "function",
                    "view": "function wgui.gettextextent(text: string)\n  -> { width: integer, height: integer }"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 4730027,
                "start": 4730009,
                "type": "setfield"
            }
        ],
        "desc": "Gets the width and height of the given text",
        "name": "wgui.gettextextent",
        "rawdesc": "Gets the width and height of the given text",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Returns the current width and height of the mupen window in a table",
                    "finish": 5910024,
                    "rawdesc": "Returns the current width and height of the mupen window in a table",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "{ width: integer, height: integer }"
                        }
                    ],
                    "start": 5910000,
                    "type": "function",
                    "view": "function wgui.info()\n  -> { width: integer, height: integer }"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 5910018,
                "start": 5910009,
                "type": "setfield"
            }
        ],
        "desc": "Returns the current width and height of the mupen window in a table",
        "name": "wgui.info",
        "rawdesc": "Returns the current width and height of the mupen window in a table",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 5870021,
                            "name": "x1",
                            "start": 5870019,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5870025,
                            "name": "y1",
                            "start": 5870023,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5870029,
                            "name": "x2",
                            "start": 5870027,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5870033,
                            "name": "y2",
                            "start": 5870031,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Draws a line from `(x1, y1)` to `(x2, y2)`",
                    "finish": 5870038,
                    "rawdesc": "Draws a line from `(x1, y1)` to `(x2, y2)`",
                    "start": 5870000,
                    "type": "function",
                    "view": "function wgui.line(x1: integer, y1: integer, x2: integer, y2: integer)"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 5870018,
                "start": 5870009,
                "type": "setfield"
            }
        ],
        "desc": "Draws a line from `(x1, y1)` to `(x2, y2)`",
        "name": "wgui.line",
        "rawdesc": "Draws a line from `(x1, y1)` to `(x2, y2)`",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 5190028,
                            "name": "path",
                            "start": 5190024,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Loads an image file from `path` and returns the identifier of that image",
                    "finish": 5190033,
                    "rawdesc": "Loads an image file from `path` and returns the identifier of that image",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 5190000,
                    "type": "function",
                    "view": "function wgui.loadimage(path: string)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 5190023,
                "start": 5190009,
                "type": "setfield"
            }
        ],
        "desc": "Loads an image file from `path` and returns the identifier of that image",
        "name": "wgui.loadimage",
        "rawdesc": "Loads an image file from `path` and returns the identifier of that image",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Captures the current screen and saves it as an image\n\n@*return* `The` โ identifier of the saved image",
                    "finish": 5610030,
                    "rawdesc": "Captures the current screen and saves it as an image",
                    "returns": [
                        {
                            "desc": "identifier of the saved image",
                            "name": "The",
                            "rawdesc": "identifier of the saved image",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 5610000,
                    "type": "function",
                    "view": "function wgui.loadscreen()\n  -> The: integer"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 5610024,
                "start": 5610009,
                "type": "setfield"
            }
        ],
        "desc": "Captures the current screen and saves it as an image\n\n@*return* `The` โ identifier of the saved image",
        "name": "wgui.loadscreen",
        "rawdesc": "Captures the current screen and saves it as an image",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Re-initializes loadscreen",
                    "finish": 5640035,
                    "rawdesc": "Re-initializes loadscreen",
                    "start": 5640000,
                    "type": "function",
                    "view": "function wgui.loadscreenreset()"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 5640029,
                "start": 5640009,
                "type": "setfield"
            }
        ],
        "desc": "Re-initializes loadscreen",
        "name": "wgui.loadscreenreset",
        "rawdesc": "Re-initializes loadscreen",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 5800028,
                            "name": "points",
                            "start": 5800022,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "Draws a polygon with the given points. Uses the GDI brush color for the background and a 1 pixel border of the GDI pen color",
                    "finish": 5800033,
                    "rawdesc": "Draws a polygon with the given points. Uses the GDI brush color for the background and a 1 pixel border of the GDI pen color",
                    "start": 5800000,
                    "type": "function",
                    "view": "function wgui.polygon(points: table)"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 5800021,
                "start": 5800009,
                "type": "setfield"
            }
        ],
        "desc": "Draws a polygon with the given points. Uses the GDI brush color for the background and a 1 pixel border of the GDI pen color",
        "name": "wgui.polygon",
        "rawdesc": "Draws a polygon with the given points. Uses the GDI brush color for the background and a 1 pixel border of the GDI pen color",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4830023,
                            "name": "left",
                            "start": 4830019,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4830028,
                            "name": "top",
                            "start": 4830025,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4830035,
                            "name": "right",
                            "start": 4830030,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4830043,
                            "name": "bottom",
                            "start": 4830037,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "The width of the ellipse used to draw the rounded corners. (currently don't seem to be working)",
                            "finish": 4830058,
                            "name": "rounded_width",
                            "rawdesc": "The width of the ellipse used to draw the rounded corners. (currently don't seem to be working)",
                            "start": 4830045,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "The height of the ellipse used to draw the rounded corners.",
                            "finish": 4830074,
                            "name": "rounded_height",
                            "rawdesc": "The height of the ellipse used to draw the rounded corners.",
                            "start": 4830060,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "GDI: Draws a rectangle at the specified coordinates with the current GDI background color and a 1 pixel border of the GDI pen color.\n\n@*param* `rounded_width` โ The width of the ellipse used to draw the rounded corners. (currently don't seem to be working)\n\n@*param* `rounded_height` โ The height of the ellipse used to draw the rounded corners.",
                    "finish": 4830079,
                    "rawdesc": "GDI: Draws a rectangle at the specified coordinates with the current GDI background color and a 1 pixel border of the GDI pen color.",
                    "start": 4830000,
                    "type": "function",
                    "view": "function wgui.rect(left: integer, top: integer, right: integer, bottom: integer, rounded_width?: integer, rounded_height?: integer)"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 4830018,
                "start": 4830009,
                "type": "setfield"
            }
        ],
        "desc": "GDI: Draws a rectangle at the specified coordinates with the current GDI background color and a 1 pixel border of the GDI pen color.\n\n@*param* `rounded_width` โ The width of the ellipse used to draw the rounded corners. (currently don't seem to be working)\n\n@*param* `rounded_height` โ The height of the ellipse used to draw the rounded corners.",
        "name": "wgui.rect",
        "rawdesc": "GDI: Draws a rectangle at the specified coordinates with the current GDI background color and a 1 pixel border of the GDI pen color.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Resets the clip",
                    "finish": 6060029,
                    "rawdesc": "Resets the clip",
                    "start": 6060000,
                    "type": "function",
                    "view": "function wgui.resetclip()"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 6060023,
                "start": 6060009,
                "type": "setfield"
            }
        ],
        "desc": "Resets the clip",
        "name": "wgui.resetclip",
        "rawdesc": "Resets the clip",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 5960022,
                            "name": "w",
                            "start": 5960021,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 5960025,
                            "name": "h",
                            "start": 5960024,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Resizes the mupen window to `w` x `h`",
                    "finish": 5960030,
                    "rawdesc": "Resizes the mupen window to `w` x `h`",
                    "start": 5960000,
                    "type": "function",
                    "view": "function wgui.resize(w: integer, h: integer)"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 5960020,
                "start": 5960009,
                "type": "setfield"
            }
        ],
        "desc": "Resizes the mupen window to `w` x `h`",
        "name": "wgui.resize",
        "rawdesc": "Resizes the mupen window to `w` x `h`",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": " colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"",
                            "finish": 4400025,
                            "name": "color",
                            "rawdesc": " colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"",
                            "start": 4400020,
                            "type": "local",
                            "view": "string|\"black\"|\"blue\"|\"chartreuse\"|\"clear\"...(+9)"
                        }
                    ],
                    "desc": "GDI: Sets the current GDI background color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
                    "finish": 4400030,
                    "rawdesc": "GDI: Sets the current GDI background color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
                    "start": 4400000,
                    "type": "function",
                    "view": "function wgui.setbk(color: string|\"black\"|\"blue\"|\"chartreuse\"|\"clear\"...(+9))"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 4400019,
                "start": 4400009,
                "type": "setfield"
            }
        ],
        "desc": "GDI: Sets the current GDI background color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "name": "wgui.setbk",
        "rawdesc": "GDI: Sets the current GDI background color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": " colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"",
                            "finish": 4280028,
                            "name": "color",
                            "rawdesc": " colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"",
                            "start": 4280023,
                            "type": "local",
                            "view": "string|\"black\"|\"blue\"|\"chartreuse\"|\"clear\"...(+9)"
                        }
                    ],
                    "desc": "Sets the current GDI brush color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
                    "finish": 4280033,
                    "rawdesc": "Sets the current GDI brush color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
                    "start": 4280000,
                    "type": "function",
                    "view": "function wgui.setbrush(color: string|\"black\"|\"blue\"|\"chartreuse\"|\"clear\"...(+9))"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 4280022,
                "start": 4280009,
                "type": "setfield"
            }
        ],
        "desc": "Sets the current GDI brush color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "name": "wgui.setbrush",
        "rawdesc": "Sets the current GDI brush color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 6030023,
                            "name": "x",
                            "start": 6030022,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6030026,
                            "name": "y",
                            "start": 6030025,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6030029,
                            "name": "w",
                            "start": 6030028,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 6030032,
                            "name": "h",
                            "start": 6030031,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Sets a rectangle bounding box such that you cannot draw outside of it.",
                    "finish": 6030037,
                    "rawdesc": "Sets a rectangle bounding box such that you cannot draw outside of it.",
                    "start": 6030000,
                    "type": "function",
                    "view": "function wgui.setclip(x: integer, y: integer, w: integer, h: integer)"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 6030021,
                "start": 6030009,
                "type": "setfield"
            }
        ],
        "desc": "Sets a rectangle bounding box such that you cannot draw outside of it.",
        "name": "wgui.setclip",
        "rawdesc": "Sets a rectangle bounding box such that you cannot draw outside of it.",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": " colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"",
                            "finish": 4360028,
                            "name": "color",
                            "rawdesc": " colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"",
                            "start": 4360023,
                            "type": "local",
                            "view": "string|\"black\"|\"blue\"|\"chartreuse\"|\"clear\"...(+9)"
                        }
                    ],
                    "desc": "GDI: Sets the current GDI text color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
                    "finish": 4360033,
                    "rawdesc": "GDI: Sets the current GDI text color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
                    "start": 4360000,
                    "type": "function",
                    "view": "function wgui.setcolor(color: string|\"black\"|\"blue\"|\"chartreuse\"|\"clear\"...(+9))"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 4360022,
                "start": 4360009,
                "type": "setfield"
            }
        ],
        "desc": "GDI: Sets the current GDI text color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "name": "wgui.setcolor",
        "rawdesc": "GDI: Sets the current GDI text color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The size of the font. Defaults to 0 if not given",
                            "finish": 4460026,
                            "name": "size",
                            "rawdesc": "The size of the font. Defaults to 0 if not given",
                            "start": 4460022,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "The name of the font from the operating system. Dafaults to \"MS Gothic\" if not given",
                            "finish": 4460032,
                            "name": "font",
                            "rawdesc": "The name of the font from the operating system. Dafaults to \"MS Gothic\" if not given",
                            "start": 4460028,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "desc": "Each character in this string sets one style of the font, applied in chronological order. `b` sets bold, `i` sets italics, `u` sets underline, `s` sets strikethrough, and `a` sets antialiased. Defaults to \"\" if not given",
                            "finish": 4460039,
                            "name": "style",
                            "rawdesc": "Each character in this string sets one style of the font, applied in chronological order. `b` sets bold, `i` sets italics, `u` sets underline, `s` sets strikethrough, and `a` sets antialiased. Defaults to \"\" if not given",
                            "start": 4460034,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "Sets the font, font size, and font style\n\n@*param* `size` โ The size of the font. Defaults to 0 if not given\n\n@*param* `font` โ The name of the font from the operating system. Dafaults to \"MS Gothic\" if not given\n\n@*param* `style` โ Each character in this string sets one style of the font, applied in chronological order. `b` sets bold, `i` sets italics, `u` sets underline, `s` sets strikethrough, and `a` sets antialiased. Defaults to \"\" if not given",
                    "finish": 4460044,
                    "rawdesc": "Sets the font, font size, and font style",
                    "start": 4460000,
                    "type": "function",
                    "view": "function wgui.setfont(size?: integer, font?: string, style?: string)"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 4460021,
                "start": 4460009,
                "type": "setfield"
            }
        ],
        "desc": "Sets the font, font size, and font style\n\n@*param* `size` โ The size of the font. Defaults to 0 if not given\n\n@*param* `font` โ The name of the font from the operating system. Dafaults to \"MS Gothic\" if not given\n\n@*param* `style` โ Each character in this string sets one style of the font, applied in chronological order. `b` sets bold, `i` sets italics, `u` sets underline, `s` sets strikethrough, and `a` sets antialiased. Defaults to \"\" if not given",
        "name": "wgui.setfont",
        "rawdesc": "Sets the font, font size, and font style",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": " colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"",
                            "finish": 4320026,
                            "name": "color",
                            "rawdesc": " colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"",
                            "start": 4320021,
                            "type": "local",
                            "view": "string|\"black\"|\"blue\"|\"chartreuse\"|\"clear\"...(+9)"
                        }
                    ],
                    "desc": "GDI: Sets the current GDI pen color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
                    "finish": 4320031,
                    "rawdesc": "GDI: Sets the current GDI pen color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
                    "start": 4320000,
                    "type": "function",
                    "view": "function wgui.setpen(color: string|\"black\"|\"blue\"|\"chartreuse\"|\"clear\"...(+9))"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 4320020,
                "start": 4320009,
                "type": "setfield"
            }
        ],
        "desc": "GDI: Sets the current GDI pen color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "name": "wgui.setpen",
        "rawdesc": "GDI: Sets the current GDI pen color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4530020,
                            "name": "x",
                            "start": 4530019,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4530023,
                            "name": "y",
                            "start": 4530022,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4530029,
                            "name": "text",
                            "start": 4530025,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "GDI: Displays text in one line with the current GDI background color and GDI text color",
                    "finish": 4530034,
                    "rawdesc": "GDI: Displays text in one line with the current GDI background color and GDI text color",
                    "start": 4530000,
                    "type": "function",
                    "view": "function wgui.text(x: integer, y: integer, text: string)"
                },
                "file": "file:///c%3A/Users/david/Code/MupenLuaDoc/api.lua",
                "finish": 4530018,
                "start": 4530009,
                "type": "setfield"
            }
        ],
        "desc": "GDI: Displays text in one line with the current GDI background color and GDI text color",
        "name": "wgui.text",
        "rawdesc": "GDI: Displays text in one line with the current GDI background color and GDI text color",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4280017,
                            "name": "f",
                            "start": 4280016,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 4280023,
                            "name": "msgh",
                            "start": 4280019,
                            "type": "local",
                            "view": "function"
                        },
                        {
                            "finish": 4280029,
                            "name": "arg1",
                            "start": 4280025,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 4280034,
                            "start": 4280031,
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nCalls function `f` with the given arguments in protected mode with a new message handler.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-xpcall)",
                    "finish": 4280039,
                    "rawdesc": "\nCalls function `f` with the given arguments in protected mode with a new message handler.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-xpcall)",
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "result",
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 4280000,
                    "type": "function",
                    "view": "function xpcall(f: fun(...any):...unknown, msgh: function, arg1?: any, ...any)\n  -> success: boolean\n  2. result: any\n  3. ...any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.7.4-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 4280015,
                "start": 4280009,
                "type": "setglobal"
            }
        ],
        "desc": "\nCalls function `f` with the given arguments in protected mode with a new message handler.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-xpcall)",
        "name": "xpcall",
        "rawdesc": "\nCalls function `f` with the given arguments in protected mode with a new message handler.\n\n[View documents](http://www.lua.org/manual/5.4/manual.html#pdf-xpcall)",
        "type": "variable"
    }
]