[
    {
        "defines": [
            {
                "extends": {
                    "finish": 680007,
                    "start": 680005,
                    "type": "table",
                    "view": "_G"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 680002,
                "start": 680000,
                "type": "setglobal"
            }
        ],
        "desc": "\nA global variable (not a function) that holds the global environment (see [ยง2.2](command:extension.lua.doc?[\"en-us/54/manual.html/2.2\"])). Lua itself does not use this variable; changing its value does not affect any environment, nor vice versa.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-_G\"])\n",
        "name": "_G",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 3670020,
                    "start": 3670011,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 3670008,
                "start": 3670000,
                "type": "setglobal"
            }
        ],
        "desc": "\nA global variable (not a function) that holds a string containing the running Lua version.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-_VERSION\"])\n",
        "name": "_VERSION",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 80008,
                    "start": 80006,
                    "type": "table",
                    "view": "string[]"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 80003,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\nCommand-line arguments of Lua Standalone.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-arg\"])\n",
        "name": "arg",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 200017,
                            "name": "v",
                            "start": 200016,
                            "type": "local",
                            "view": "<T>?"
                        },
                        {
                            "finish": 200026,
                            "name": "message",
                            "start": 200019,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 200031,
                            "start": 200028,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nRaises an error if the value of its argument v is false (i.e., `nil` or `false`); otherwise, returns all its arguments. In case of error, `message` is the error object; when absent, it defaults to `\"assertion failed!\"`\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-assert\"])",
                    "finish": 200036,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T>"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 200000,
                    "type": "function",
                    "view": "function assert(v?: <T>, message?: any, ...any)\n  -> <T>\n  2. ...any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 200015,
                "start": 200009,
                "type": "setglobal"
            }
        ],
        "desc": "\nRaises an error if the value of its argument v is false (i.e., `nil` or `false`); otherwise, returns all its arguments. In case of error, `message` is the error object; when absent, it defaults to `\"assertion failed!\"`\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-assert\"])",
        "name": "assert",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 170008,
                    "start": 170006,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_tjk.lua",
                "finish": 170003,
                "start": 170000,
                "type": "setglobal"
            }
        ],
        "name": "avi",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 390027,
                            "name": "opt",
                            "start": 390024,
                            "type": "local",
                            "view": "gcoptions?"
                        },
                        {
                            "finish": 390032,
                            "start": 390029,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nThis function is a generic interface to the garbage collector. It performs different functions according to its first argument, `opt`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-collectgarbage\"])\n\n\n```lua\nopt:\n   -> \"collect\" -- Performs a full garbage-collection cycle.\n    | \"stop\" -- Stops automatic execution.\n    | \"restart\" -- Restarts automatic execution.\n    | \"count\" -- Returns the total memory in Kbytes.\n    | \"step\" -- Performs a garbage-collection step.\n    | \"isrunning\" -- Returns whether the collector is running.\n    | \"incremental\" -- Change the collector mode to incremental.\n    | \"generational\" -- Change the collector mode to generational.\n```",
                    "finish": 390037,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 390000,
                    "type": "function",
                    "view": "function collectgarbage(opt?: gcoptions, ...any)\n  -> any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 390023,
                "start": 390009,
                "type": "setglobal"
            }
        ],
        "desc": "\nThis function is a generic interface to the garbage collector. It performs different functions according to its first argument, `opt`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-collectgarbage\"])\n\n\n```lua\nopt:\n   -> \"collect\" -- Performs a full garbage-collection cycle.\n    | \"stop\" -- Stops automatic execution.\n    | \"restart\" -- Restarts automatic execution.\n    | \"count\" -- Returns the total memory in Kbytes.\n    | \"step\" -- Performs a garbage-collection step.\n    | \"isrunning\" -- Returns whether the collector is running.\n    | \"incremental\" -- Change the collector mode to incremental.\n    | \"generational\" -- Change the collector mode to generational.\n```",
        "name": "collectgarbage",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 2480013,
                    "start": 2340015,
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": 2350011,
                            "start": 2350005,
                            "type": "doc.type.name",
                            "view": "string"
                        },
                        {
                            "finish": 2360012,
                            "start": 2360005,
                            "type": "doc.type.string",
                            "view": "\"white\""
                        },
                        {
                            "finish": 2370012,
                            "start": 2370005,
                            "type": "doc.type.string",
                            "view": "\"black\""
                        },
                        {
                            "finish": 2380012,
                            "start": 2380005,
                            "type": "doc.type.string",
                            "view": "\"clear\""
                        },
                        {
                            "finish": 2390011,
                            "start": 2390005,
                            "type": "doc.type.string",
                            "view": "\"gray\""
                        },
                        {
                            "finish": 2400010,
                            "start": 2400005,
                            "type": "doc.type.string",
                            "view": "\"red\""
                        },
                        {
                            "finish": 2410013,
                            "start": 2410005,
                            "type": "doc.type.string",
                            "view": "\"orange\""
                        },
                        {
                            "finish": 2420013,
                            "start": 2420005,
                            "type": "doc.type.string",
                            "view": "\"yellow\""
                        },
                        {
                            "finish": 2430017,
                            "start": 2430005,
                            "type": "doc.type.string",
                            "view": "\"chartreuse\""
                        },
                        {
                            "finish": 2440012,
                            "start": 2440005,
                            "type": "doc.type.string",
                            "view": "\"green\""
                        },
                        {
                            "finish": 2450011,
                            "start": 2450005,
                            "type": "doc.type.string",
                            "view": "\"teal\""
                        },
                        {
                            "finish": 2460011,
                            "start": 2460005,
                            "type": "doc.type.string",
                            "view": "\"cyan\""
                        },
                        {
                            "finish": 2470011,
                            "start": 2470005,
                            "type": "doc.type.string",
                            "view": "\"blue\""
                        },
                        {
                            "finish": 2480013,
                            "start": 2480005,
                            "type": "doc.type.string",
                            "view": "\"purple\""
                        }
                    ],
                    "view": "string|\"black\"|\"blue\"|\"chartreuse\"|\"clear\"...(+9)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 2480013,
                "start": 2340010,
                "type": "doc.alias"
            }
        ],
        "desc": "```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "fields": [],
        "name": "color",
        "type": "type"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 80014,
                    "start": 80012,
                    "type": "table",
                    "view": "coroutinelib"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 80009,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine\"])\n",
        "name": "coroutine",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 390027,
                            "name": "co",
                            "start": 390025,
                            "type": "local",
                            "view": "thread"
                        }
                    ],
                    "desc": "\nCloses coroutine `co` , closing all its pending to-be-closed variables and putting the coroutine in a dead state.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.close\"])",
                    "finish": 390032,
                    "returns": [
                        {
                            "name": "noerror",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "errorobject",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 390000,
                    "type": "function",
                    "view": "function coroutine.close(co: thread)\n  -> noerror: boolean\n  2. errorobject: any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 390024,
                "start": 390009,
                "type": "setfield"
            }
        ],
        "desc": "\nCloses coroutine `co` , closing all its pending to-be-closed variables and putting the coroutine in a dead state.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.close\"])",
        "name": "coroutine.close",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 180027,
                            "name": "f",
                            "start": 180026,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        }
                    ],
                    "desc": "\nCreates a new coroutine, with body `f`. `f` must be a function. Returns this new coroutine, an object with type `\"thread\"`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.create\"])",
                    "finish": 180032,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "thread"
                        }
                    ],
                    "start": 180000,
                    "type": "function",
                    "view": "function coroutine.create(f: fun(...any):...unknown)\n  -> thread"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 180025,
                "start": 180009,
                "type": "setfield"
            }
        ],
        "desc": "\nCreates a new coroutine, with body `f`. `f` must be a function. Returns this new coroutine, an object with type `\"thread\"`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.create\"])",
        "name": "coroutine.create",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 280033,
                            "name": "co",
                            "start": 280031,
                            "type": "local",
                            "view": "thread?"
                        }
                    ],
                    "desc": "\nReturns true when the coroutine `co` can yield. The default for `co` is the running coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.isyieldable\"])",
                    "finish": 280038,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 280000,
                    "type": "function",
                    "view": "function coroutine.isyieldable(co?: thread)\n  -> boolean"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 280030,
                "start": 280009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns true when the coroutine `co` can yield. The default for `co` is the running coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.isyieldable\"])",
        "name": "coroutine.isyieldable",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 500028,
                            "name": "co",
                            "start": 500026,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 500034,
                            "name": "val1",
                            "start": 500030,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 500039,
                            "start": 500036,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nStarts or continues the execution of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.resume\"])",
                    "finish": 500044,
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 500000,
                    "type": "function",
                    "view": "function coroutine.resume(co: thread, val1?: any, ...any)\n  -> success: boolean\n  2. ...any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 500025,
                "start": 500009,
                "type": "setfield"
            }
        ],
        "desc": "\nStarts or continues the execution of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.resume\"])",
        "name": "coroutine.resume",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nReturns the running coroutine plus a boolean, true when the running coroutine is the main one.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.running\"])",
                    "finish": 600032,
                    "returns": [
                        {
                            "name": "running",
                            "type": "function.return",
                            "view": "thread"
                        },
                        {
                            "name": "ismain",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 600000,
                    "type": "function",
                    "view": "function coroutine.running()\n  -> running: thread\n  2. ismain: boolean"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 600026,
                "start": 600009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the running coroutine plus a boolean, true when the running coroutine is the main one.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.running\"])",
        "name": "coroutine.running",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 740028,
                            "name": "co",
                            "start": 740026,
                            "type": "local",
                            "view": "thread"
                        }
                    ],
                    "desc": "\nReturns the status of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.status\"])\n\n\n```lua\nreturn #1:\n    | \"running\" -- Is running.\n    | \"suspended\" -- Is suspended or not started.\n    | \"normal\" -- Is active but not running.\n    | \"dead\" -- Has finished or stopped with an error.\n```",
                    "finish": 740033,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "\"dead\"|\"normal\"|\"running\"|\"suspended\""
                        }
                    ],
                    "start": 740000,
                    "type": "function",
                    "view": "function coroutine.status(co: thread)\n  -> \"dead\"|\"normal\"|\"running\"|\"suspended\""
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 740025,
                "start": 740009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the status of coroutine `co`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.status\"])\n\n\n```lua\nreturn #1:\n    | \"running\" -- Is running.\n    | \"suspended\" -- Is suspended or not started.\n    | \"normal\" -- Is active but not running.\n    | \"dead\" -- Has finished or stopped with an error.\n```",
        "name": "coroutine.status",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 840025,
                            "name": "f",
                            "start": 840024,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        }
                    ],
                    "desc": "\nCreates a new coroutine, with body `f`; `f` must be a function. Returns a function that resumes the coroutine each time it is called.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.wrap\"])",
                    "finish": 840030,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun(...any):...unknown"
                        }
                    ],
                    "start": 840000,
                    "type": "function",
                    "view": "function coroutine.wrap(f: fun(...any):...unknown)\n  -> fun(...any):...unknown"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 840023,
                "start": 840009,
                "type": "setfield"
            }
        ],
        "desc": "\nCreates a new coroutine, with body `f`; `f` must be a function. Returns a function that resumes the coroutine each time it is called.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.wrap\"])",
        "name": "coroutine.wrap",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 930028,
                            "start": 930025,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nSuspends the execution of the calling coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.yield\"])",
                    "finish": 930033,
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 930000,
                    "type": "function",
                    "view": "(async) function coroutine.yield(...any)\n  -> ...any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/coroutine.lua",
                "finish": 930024,
                "start": 930009,
                "type": "setfield"
            }
        ],
        "desc": "\nSuspends the execution of the calling coroutine.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-coroutine.yield\"])",
        "name": "coroutine.yield",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 80010,
                    "start": 80008,
                    "type": "table",
                    "view": "debuglib"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 80005,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug\"])\n",
        "name": "debug",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nEnters an interactive mode with the user, running each string that the user enters.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.debug\"])",
                    "finish": 330026,
                    "start": 330000,
                    "type": "function",
                    "view": "function debug.debug()"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 330020,
                "start": 330009,
                "type": "setfield"
            }
        ],
        "desc": "\nEnters an interactive mode with the user, running each string that the user enters.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.debug\"])",
        "name": "debug.debug",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 440024,
                            "name": "o",
                            "start": 440023,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns the environment of object `o` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getfenv\"])",
                    "finish": 440029,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 440000,
                    "type": "function",
                    "view": "function debug.getfenv(o: any)\n  -> table"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 440022,
                "start": 440009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the environment of object `o` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getfenv\"])",
        "name": "debug.getfenv",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 560025,
                            "name": "co",
                            "start": 560023,
                            "type": "local",
                            "view": "thread?"
                        }
                    ],
                    "desc": "\nReturns the current hook settings of the thread.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.gethook\"])",
                    "finish": 560030,
                    "returns": [
                        {
                            "name": "hook",
                            "type": "function.return",
                            "view": "function"
                        },
                        {
                            "name": "mask",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "count",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 560000,
                    "type": "function",
                    "view": "function debug.gethook(co?: thread)\n  -> hook: function\n  2. mask: string\n  3. count: integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 560022,
                "start": 560009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the current hook settings of the thread.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.gethook\"])",
        "name": "debug.gethook",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 790029,
                            "name": "thread",
                            "start": 790023,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 790032,
                            "name": "f",
                            "start": 790031,
                            "type": "local",
                            "view": "integer|fun(...any):...unknown"
                        },
                        {
                            "finish": 790038,
                            "name": "what",
                            "start": 790034,
                            "type": "local",
                            "view": "infowhat?"
                        }
                    ],
                    "desc": "\nReturns a table with information about a function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getinfo\"])\n\n\n---\n\n```lua\nwhat:\n   +> \"n\" -- `name` and `namewhat`\n   +> \"S\" -- `source`, `short_src`, `linedefined`, `lastlinedefined`, and `what`\n   +> \"l\" -- `currentline`\n   +> \"t\" -- `istailcall`\n   +> \"u\" -- `nups`, `nparams`, and `isvararg`\n   +> \"f\" -- `func`\n   +> \"r\" -- `ftransfer` and `ntransfer`\n   +> \"L\" -- `activelines`\n```",
                    "finish": 790043,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "debuginfo"
                        }
                    ],
                    "start": 790000,
                    "type": "function",
                    "view": "function debug.getinfo(thread: thread, f: integer|fun(...any):...unknown, what?: infowhat)\n  -> debuginfo"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 790022,
                "start": 790009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a table with information about a function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getinfo\"])\n\n\n---\n\n```lua\nwhat:\n   +> \"n\" -- `name` and `namewhat`\n   +> \"S\" -- `source`, `short_src`, `linedefined`, `lastlinedefined`, and `what`\n   +> \"l\" -- `currentline`\n   +> \"t\" -- `istailcall`\n   +> \"u\" -- `nups`, `nparams`, and `isvararg`\n   +> \"f\" -- `func`\n   +> \"r\" -- `ftransfer` and `ntransfer`\n   +> \"L\" -- `activelines`\n```",
        "name": "debug.getinfo",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 930030,
                            "name": "thread",
                            "start": 930024,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 930033,
                            "name": "f",
                            "start": 930032,
                            "type": "local",
                            "view": "integer|fun(...any):...unknown"
                        },
                        {
                            "finish": 930040,
                            "name": "index",
                            "start": 930035,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns the name and the value of the local variable with index `local` of the function at level `f` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getlocal\"])",
                    "finish": 930045,
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "value",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 930000,
                    "type": "function",
                    "view": "function debug.getlocal(thread: thread, f: integer|fun(...any):...unknown, index: integer)\n  -> name: string\n  2. value: any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 930023,
                "start": 930009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the name and the value of the local variable with index `local` of the function at level `f` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getlocal\"])",
        "name": "debug.getlocal",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1030034,
                            "name": "object",
                            "start": 1030028,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns the metatable of the given value.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getmetatable\"])",
                    "finish": 1030039,
                    "returns": [
                        {
                            "name": "metatable",
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 1030000,
                    "type": "function",
                    "view": "function debug.getmetatable(object: any)\n  -> metatable: table"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1030027,
                "start": 1030009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the metatable of the given value.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getmetatable\"])",
        "name": "debug.getmetatable",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nReturns the registry table.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getregistry\"])",
                    "finish": 1120032,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 1120000,
                    "type": "function",
                    "view": "function debug.getregistry()\n  -> table"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1120026,
                "start": 1120009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the registry table.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getregistry\"])",
        "name": "debug.getregistry",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1240027,
                            "name": "f",
                            "start": 1240026,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 1240031,
                            "name": "up",
                            "start": 1240029,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns the name and the value of the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getupvalue\"])",
                    "finish": 1240036,
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "value",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 1240000,
                    "type": "function",
                    "view": "function debug.getupvalue(f: fun(...any):...unknown, up: integer)\n  -> name: string\n  2. value: any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1240025,
                "start": 1240009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the name and the value of the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getupvalue\"])",
        "name": "debug.getupvalue",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1390029,
                            "name": "u",
                            "start": 1390028,
                            "type": "local",
                            "view": "userdata"
                        },
                        {
                            "finish": 1390032,
                            "name": "n",
                            "start": 1390031,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the `n`-th user value associated\nto the userdata `u` plus a boolean,\n`false` if the userdata does not have that value.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getuservalue\"])",
                    "finish": 1390037,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 1390000,
                    "type": "function",
                    "view": "function debug.getuservalue(u: userdata, n?: integer)\n  -> any\n  2. boolean"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1390027,
                "start": 1390009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the `n`-th user value associated\nto the userdata `u` plus a boolean,\n`false` if the userdata does not have that value.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.getuservalue\"])",
        "name": "debug.getuservalue",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1540035,
                            "name": "limit",
                            "start": 1540030,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\n### **Deprecated in `Lua 5.4.2`**\n\nSets a new limit for the C stack. This limit controls how deeply nested calls can go in Lua, with the intent of avoiding a stack overflow.\n\nIn case of success, this function returns the old limit. In case of error, it returns `false`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setcstacklimit\"])",
                    "finish": 1540040,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean|integer"
                        }
                    ],
                    "start": 1540000,
                    "type": "function",
                    "view": "function debug.setcstacklimit(limit: integer)\n  -> boolean|integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1540029,
                "start": 1540009,
                "type": "setfield"
            }
        ],
        "desc": "\n### **Deprecated in `Lua 5.4.2`**\n\nSets a new limit for the C stack. This limit controls how deeply nested calls can go in Lua, with the intent of avoiding a stack overflow.\n\nIn case of success, this function returns the old limit. In case of error, it returns `false`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setcstacklimit\"])",
        "name": "debug.setcstacklimit",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1660029,
                            "name": "object",
                            "start": 1660023,
                            "type": "local",
                            "view": "<T>"
                        },
                        {
                            "finish": 1660034,
                            "name": "env",
                            "start": 1660031,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nSets the environment of the given `object` to the given `table` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setfenv\"])",
                    "finish": 1660039,
                    "returns": [
                        {
                            "name": "object",
                            "type": "function.return",
                            "view": "<T>"
                        }
                    ],
                    "start": 1660000,
                    "type": "function",
                    "view": "function debug.setfenv(object: <T>, env: table)\n  -> object: <T>"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1660022,
                "start": 1660009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets the environment of the given `object` to the given `table` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setfenv\"])",
        "name": "debug.setfenv",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1850029,
                            "name": "thread",
                            "start": 1850023,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 1850035,
                            "name": "hook",
                            "start": 1850031,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 1850041,
                            "name": "mask",
                            "start": 1850037,
                            "type": "local",
                            "view": "hookmask"
                        },
                        {
                            "finish": 1850048,
                            "name": "count",
                            "start": 1850043,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nSets the given function as a hook.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.sethook\"])\n\n\n---\n\n```lua\nmask:\n   +> \"c\" -- Calls hook when Lua calls a function.\n   +> \"r\" -- Calls hook when Lua returns from a function.\n   +> \"l\" -- Calls hook when Lua enters a new line of code.\n```",
                    "finish": 1850053,
                    "start": 1850000,
                    "type": "function",
                    "view": "function debug.sethook(thread: thread, hook: fun(...any):...unknown, mask: hookmask, count?: integer)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1850022,
                "start": 1850009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets the given function as a hook.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.sethook\"])\n\n\n---\n\n```lua\nmask:\n   +> \"c\" -- Calls hook when Lua calls a function.\n   +> \"r\" -- Calls hook when Lua returns from a function.\n   +> \"l\" -- Calls hook when Lua enters a new line of code.\n```",
        "name": "debug.sethook",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1980030,
                            "name": "thread",
                            "start": 1980024,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 1980037,
                            "name": "level",
                            "start": 1980032,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 1980044,
                            "name": "index",
                            "start": 1980039,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 1980051,
                            "name": "value",
                            "start": 1980046,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nAssigns the `value` to the local variable with index `local` of the function at `level` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setlocal\"])",
                    "finish": 1980056,
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1980000,
                    "type": "function",
                    "view": "function debug.setlocal(thread: thread, level: integer, index: integer, value: any)\n  -> name: string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 1980023,
                "start": 1980009,
                "type": "setfield"
            }
        ],
        "desc": "\nAssigns the `value` to the local variable with index `local` of the function at `level` of the stack.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setlocal\"])",
        "name": "debug.setlocal",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2090033,
                            "name": "value",
                            "start": 2090028,
                            "type": "local",
                            "view": "<T>"
                        },
                        {
                            "finish": 2090039,
                            "name": "meta",
                            "start": 2090035,
                            "type": "local",
                            "view": "table?"
                        }
                    ],
                    "desc": "\nSets the metatable for the given value to the given table (which can be `nil`).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setmetatable\"])",
                    "finish": 2090044,
                    "returns": [
                        {
                            "name": "value",
                            "type": "function.return",
                            "view": "<T>"
                        }
                    ],
                    "start": 2090000,
                    "type": "function",
                    "view": "function debug.setmetatable(value: <T>, meta?: table)\n  -> value: <T>"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 2090027,
                "start": 2090009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets the metatable for the given value to the given table (which can be `nil`).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setmetatable\"])",
        "name": "debug.setmetatable",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2200027,
                            "name": "f",
                            "start": 2200026,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 2200031,
                            "name": "up",
                            "start": 2200029,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 2200038,
                            "name": "value",
                            "start": 2200033,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nAssigns the `value` to the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setupvalue\"])",
                    "finish": 2200043,
                    "returns": [
                        {
                            "name": "name",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 2200000,
                    "type": "function",
                    "view": "function debug.setupvalue(f: fun(...any):...unknown, up: integer, value: any)\n  -> name: string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 2200025,
                "start": 2200009,
                "type": "setfield"
            }
        ],
        "desc": "\nAssigns the `value` to the upvalue with index `up` of the function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setupvalue\"])",
        "name": "debug.setupvalue",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2340033,
                            "name": "udata",
                            "start": 2340028,
                            "type": "local",
                            "view": "userdata"
                        },
                        {
                            "finish": 2340040,
                            "name": "value",
                            "start": 2340035,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2340043,
                            "name": "n",
                            "start": 2340042,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nSets the given `value` as\nthe `n`-th user value associated to the given `udata`.\n`udata` must be a full userdata.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setuservalue\"])",
                    "finish": 2340048,
                    "returns": [
                        {
                            "name": "udata",
                            "type": "function.return",
                            "view": "userdata"
                        }
                    ],
                    "start": 2340000,
                    "type": "function",
                    "view": "function debug.setuservalue(udata: userdata, value: any, n?: integer)\n  -> udata: userdata"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 2340027,
                "start": 2340009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets the given `value` as\nthe `n`-th user value associated to the given `udata`.\n`udata` must be a full userdata.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.setuservalue\"])",
        "name": "debug.setuservalue",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2470031,
                            "name": "thread",
                            "start": 2470025,
                            "type": "local",
                            "view": "thread"
                        },
                        {
                            "finish": 2470040,
                            "name": "message",
                            "start": 2470033,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2470047,
                            "name": "level",
                            "start": 2470042,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns a string with a traceback of the call stack. The optional message string is appended at the beginning of the traceback.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.traceback\"])",
                    "finish": 2470052,
                    "returns": [
                        {
                            "name": "message",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 2470000,
                    "type": "function",
                    "view": "function debug.traceback(thread: thread, message?: any, level?: integer)\n  -> message: string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 2470024,
                "start": 2470009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string with a traceback of the call stack. The optional message string is appended at the beginning of the traceback.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.traceback\"])",
        "name": "debug.traceback",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2590026,
                            "name": "f",
                            "start": 2590025,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 2590029,
                            "name": "n",
                            "start": 2590028,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns a unique identifier (as a light userdata) for the upvalue numbered `n` from the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.upvalueid\"])",
                    "finish": 2590034,
                    "returns": [
                        {
                            "name": "id",
                            "type": "function.return",
                            "view": "lightuserdata"
                        }
                    ],
                    "start": 2590000,
                    "type": "function",
                    "view": "function debug.upvalueid(f: fun(...any):...unknown, n: integer)\n  -> id: lightuserdata"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 2590024,
                "start": 2590009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a unique identifier (as a light userdata) for the upvalue numbered `n` from the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.upvalueid\"])",
        "name": "debug.upvalueid",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2710029,
                            "name": "f1",
                            "start": 2710027,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 2710033,
                            "name": "n1",
                            "start": 2710031,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 2710037,
                            "name": "f2",
                            "start": 2710035,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 2710041,
                            "name": "n2",
                            "start": 2710039,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nMake the `n1`-th upvalue of the Lua closure `f1` refer to the `n2`-th upvalue of the Lua closure `f2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.upvaluejoin\"])",
                    "finish": 2710046,
                    "start": 2710000,
                    "type": "function",
                    "view": "function debug.upvaluejoin(f1: fun(...any):...unknown, n1: integer, f2: fun(...any):...unknown, n2: integer)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/debug.lua",
                "finish": 2710026,
                "start": 2710009,
                "type": "setfield"
            }
        ],
        "desc": "\nMake the `n1`-th upvalue of the Lua closure `f1` refer to the `n2`-th upvalue of the Lua closure `f2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-debug.upvaluejoin\"])",
        "name": "debug.upvaluejoin",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 480024,
                            "name": "filename",
                            "start": 480016,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nOpens the named file and executes its content as a Lua chunk. When called without arguments, `dofile` executes the content of the standard input (`stdin`). Returns all values returned by the chunk. In case of errors, `dofile` propagates the error to its caller. (That is, `dofile` does not run in protected mode.)\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-dofile\"])",
                    "finish": 480029,
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 480000,
                    "type": "function",
                    "view": "function dofile(filename?: string)\n  -> ...any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 480015,
                "start": 480009,
                "type": "setglobal"
            }
        ],
        "desc": "\nOpens the named file and executes its content as a Lua chunk. When called without arguments, `dofile` executes the content of the standard input (`stdin`). Returns all values returned by the chunk. In case of errors, `dofile` propagates the error to its caller. (That is, `dofile` does not run in protected mode.)\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-dofile\"])",
        "name": "dofile",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 80008,
                    "start": 80006,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_tjk.lua",
                "finish": 80003,
                "start": 80000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 80008,
                    "start": 80006,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 80003,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "name": "emu",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 820022,
                            "name": "f",
                            "start": 820021,
                            "type": "local",
                            "view": "fun(a?: integer)"
                        },
                        {
                            "finish": 820034,
                            "name": "unregister",
                            "start": 820024,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Calls the function `f` every input frame. The function `f` receives\nthe argument `a` that seems to always be `0`. If `unregister` is set\nto true, the function `f` will no longer be called when this event\noccurs, but it will error if you never registered the function.",
                    "finish": 820039,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 820000,
                    "type": "function",
                    "view": "function emu.atinput(f: fun(a?: integer), unregister?: boolean)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_tjk.lua",
                "finish": 820020,
                "start": 820009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 610025,
                            "name": "func",
                            "start": 610021,
                            "type": "local",
                            "view": "function"
                        },
                        {
                            "finish": 610037,
                            "name": "unregister",
                            "start": 610027,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Registers a function to be run every input frame",
                    "finish": 620003,
                    "start": 610000,
                    "type": "function",
                    "view": "function emu.atinput(func: function, unregister?: boolean)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 610020,
                "start": 610009,
                "type": "setfield"
            }
        ],
        "desc": "Registers a function to be run every input frame",
        "name": "emu.atinput",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1050025,
                            "name": "f",
                            "start": 1050024,
                            "type": "local",
                            "view": "fun(nil: any)"
                        },
                        {
                            "finish": 1050037,
                            "name": "unregister",
                            "start": 1050027,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Calls the function `f` constantly, even when the emulator is paused\nIf `unregister` is set to true, the function `f` will no longer\nbe called when this event occurs, but it will error if you never\nregistered the function.",
                    "finish": 1050042,
                    "start": 1050000,
                    "type": "function",
                    "view": "function emu.atinterval(f: fun(nil: any), unregister?: boolean)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_tjk.lua",
                "finish": 1050023,
                "start": 1050009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 730028,
                            "name": "func",
                            "start": 730024,
                            "type": "local",
                            "view": "function"
                        },
                        {
                            "finish": 730040,
                            "name": "unregister",
                            "start": 730030,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Registers a function to be run constantly",
                    "finish": 740003,
                    "start": 730000,
                    "type": "function",
                    "view": "function emu.atinterval(func: function, unregister?: boolean)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 730023,
                "start": 730009,
                "type": "setfield"
            }
        ],
        "desc": "Registers a function to be run constantly",
        "name": "emu.atinterval",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 790029,
                            "name": "func",
                            "start": 790025,
                            "type": "local",
                            "view": "function"
                        },
                        {
                            "finish": 790041,
                            "name": "unregister",
                            "start": 790031,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Registers a function to be run when a savestate is loaded",
                    "finish": 800003,
                    "start": 790000,
                    "type": "function",
                    "view": "function emu.atloadstate(func: function, unregister?: boolean)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 790024,
                "start": 790009,
                "type": "setfield"
            }
        ],
        "desc": "Registers a function to be run when a savestate is loaded",
        "name": "emu.atloadstate",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1130026,
                            "name": "f",
                            "start": 1130025,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1130038,
                            "name": "unregister",
                            "start": 1130028,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "Calls the function `f` when a movie is played. If `unregister`\nis set to true, the function `f` will no longer\nbe called when this event occurs, but it will error if you never\nregistered the function.",
                    "finish": 1130043,
                    "start": 1130000,
                    "type": "function",
                    "view": "function emu.atplaymovie(f: any, unregister: any)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_tjk.lua",
                "finish": 1130024,
                "start": 1130009,
                "type": "setfield"
            }
        ],
        "desc": "Calls the function `f` when a movie is played. If `unregister`\nis set to true, the function `f` will no longer\nbe called when this event occurs, but it will error if you never\nregistered the function.",
        "name": "emu.atplaymovie",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 910025,
                            "name": "func",
                            "start": 910021,
                            "type": "local",
                            "view": "function"
                        },
                        {
                            "finish": 910037,
                            "name": "unregister",
                            "start": 910027,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Registers a function to be run when the emulator is reset",
                    "finish": 920003,
                    "start": 910000,
                    "type": "function",
                    "view": "function emu.atreset(func: function, unregister?: boolean)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 910020,
                "start": 910009,
                "type": "setfield"
            }
        ],
        "desc": "Registers a function to be run when the emulator is reset",
        "name": "emu.atreset",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 850029,
                            "name": "func",
                            "start": 850025,
                            "type": "local",
                            "view": "function"
                        },
                        {
                            "finish": 850041,
                            "name": "unregister",
                            "start": 850031,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Registers a function to be run when a savestate is saved",
                    "finish": 860003,
                    "start": 850000,
                    "type": "function",
                    "view": "function emu.atsavestate(func: function, unregister?: boolean)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 850024,
                "start": 850009,
                "type": "setfield"
            }
        ],
        "desc": "Registers a function to be run when a savestate is saved",
        "name": "emu.atsavestate",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 900021,
                            "name": "f",
                            "start": 900020,
                            "type": "local",
                            "view": "fun(nil: any)"
                        },
                        {
                            "finish": 900033,
                            "name": "unregister",
                            "start": 900023,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Calls the function `f` when the script is stopped. If `unregister` is\nset to true, the function `f` will no longer be called when this event\noccurs, but it will error if you never registered the function.",
                    "finish": 900038,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 900000,
                    "type": "function",
                    "view": "function emu.atstop(f: fun(nil: any), unregister?: boolean)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_tjk.lua",
                "finish": 900019,
                "start": 900009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 670024,
                            "name": "func",
                            "start": 670020,
                            "type": "local",
                            "view": "function"
                        },
                        {
                            "finish": 670036,
                            "name": "unregister",
                            "start": 670026,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Registers a function to be run when the lua script is stopped",
                    "finish": 680003,
                    "start": 670000,
                    "type": "function",
                    "view": "function emu.atstop(func: function, unregister?: boolean)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 670019,
                "start": 670009,
                "type": "setfield"
            }
        ],
        "desc": "Registers a function to be run when the lua script is stopped",
        "name": "emu.atstop",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 730029,
                            "name": "f",
                            "start": 730028,
                            "type": "local",
                            "view": "fun(nil: any)"
                        },
                        {
                            "finish": 730041,
                            "name": "unregister",
                            "start": 730031,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Seems similar to `emu.atvi`, except that it is called after.\nIf `unregister` is set to true, the function `f` will no longer\nbe called when this event occurs, but it will error if you\nnever registered the function.",
                    "finish": 730046,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 730000,
                    "type": "function",
                    "view": "function emu.atupdatescreen(f: fun(nil: any), unregister?: boolean)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_tjk.lua",
                "finish": 730027,
                "start": 730009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 550032,
                            "name": "func",
                            "start": 550028,
                            "type": "local",
                            "view": "function"
                        },
                        {
                            "finish": 550044,
                            "name": "unregister",
                            "start": 550034,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Registers a function to be run when the screen updates",
                    "finish": 560003,
                    "start": 550000,
                    "type": "function",
                    "view": "function emu.atupdatescreen(func: function, unregister?: boolean)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 550027,
                "start": 550009,
                "type": "setfield"
            }
        ],
        "desc": "Registers a function to be run when the screen updates",
        "name": "emu.atupdatescreen",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 640019,
                            "name": "f",
                            "start": 640018,
                            "type": "local",
                            "view": "fun(nil: any)"
                        },
                        {
                            "finish": 640031,
                            "name": "unregister",
                            "start": 640021,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Calls the function `f` every vi frame. For example,\nin Super Mario 64, the function will be called twice\nwhen you advance by one frame whereas it will be called\nonce in Ocarina of Time. If `unregister` is set to true,\nthe function `f` will no longer be called when this event occurs,\nbut it will error if you never registered the function.",
                    "finish": 640036,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 640000,
                    "type": "function",
                    "view": "function emu.atvi(f: fun(nil: any), unregister?: boolean)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_tjk.lua",
                "finish": 640017,
                "start": 640009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 490022,
                            "name": "func",
                            "start": 490018,
                            "type": "local",
                            "view": "function"
                        },
                        {
                            "finish": 490034,
                            "name": "unregister",
                            "start": 490024,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "Registers a function to be run every VI",
                    "finish": 500003,
                    "start": 490000,
                    "type": "function",
                    "view": "function emu.atvi(func: function, unregister?: boolean)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 490017,
                "start": 490009,
                "type": "setfield"
            }
        ],
        "desc": "Registers a function to be run every VI",
        "name": "emu.atvi",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "takes the following parameters:",
                            "finish": 970030,
                            "name": "f",
                            "start": 970029,
                            "type": "local",
                            "view": "fun(a: 0)"
                        },
                        {
                            "finish": 970042,
                            "name": "unregister",
                            "start": 970032,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "Defines a handler function that is called when a window receives a\nmessage. If `unregister` is set to true, the function `f` will no longer\nbe called when this event occurs, but it will error if you never\nregistered the function.\n\n@*param* `f` โ takes the following parameters:",
                    "finish": 970047,
                    "start": 970000,
                    "type": "function",
                    "view": "function emu.atwindowmessage(f: fun(a: 0), unregister: any)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_tjk.lua",
                "finish": 970028,
                "start": 970009,
                "type": "setfield"
            }
        ],
        "desc": "Defines a handler function that is called when a window receives a\nmessage. If `unregister` is set to true, the function `f` will no longer\nbe called when this event occurs, but it will error if you never\nregistered the function.\n\n@*param* `f` โ takes the following parameters:",
        "name": "emu.atwindowmessage",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 420028,
                            "name": "message",
                            "start": 420021,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Displays the text message in the console.\nSimilar to `print`, but only accepts strings",
                    "finish": 420033,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 420000,
                    "type": "function",
                    "view": "function emu.console(message: string)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_tjk.lua",
                "finish": 420020,
                "start": 420009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 380024,
                            "name": "str",
                            "start": 380021,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Similar to print, but only accepts strings",
                    "finish": 390003,
                    "start": 380000,
                    "type": "function",
                    "view": "function emu.console(str: string)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 380020,
                "start": 380009,
                "type": "setfield"
            }
        ],
        "desc": "Similar to print, but only accepts strings",
        "name": "emu.console",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Seems to do nothing.",
                    "finish": 460028,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 460000,
                    "type": "function",
                    "view": "function emu.debugview()\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_tjk.lua",
                "finish": 460022,
                "start": 460009,
                "type": "setfield"
            }
        ],
        "desc": "Seems to do nothing.",
        "name": "emu.debugview",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Returns the number of VIs since the last movie was played. This should match the statusbar (assuming you have `0-index statusbar` off). If no movie has been played, it returns the number of VIs since the emulator was started, not reset",
                    "finish": 970003,
                    "returns": [
                        {
                            "name": "framecount",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 960000,
                    "type": "function",
                    "view": "function emu.framecount()\n  -> framecount: integer"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 960023,
                "start": 960009,
                "type": "setfield"
            }
        ],
        "desc": "Returns the number of VIs since the last movie was played. This should match the statusbar (assuming you have `0-index statusbar` off). If no movie has been played, it returns the number of VIs since the emulator was started, not reset",
        "name": "emu.framecount",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1420031,
                            "name": "address",
                            "start": 1420024,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "?",
                    "finish": 1430003,
                    "start": 1420000,
                    "type": "function",
                    "view": "function emu.getaddress(address: string)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 1420023,
                "start": 1420009,
                "type": "setfield"
            }
        ],
        "desc": "?",
        "name": "emu.getaddress",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Returns `1` if the emulator is paused and `0` if it is not",
                    "finish": 1230003,
                    "returns": [
                        {
                            "name": "emu_paused",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 1220000,
                    "type": "function",
                    "view": "function emu.getpause()\n  -> emu_paused: boolean"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 1220021,
                "start": 1220009,
                "type": "setfield"
            }
        ],
        "desc": "Returns `1` if the emulator is paused and `0` if it is not",
        "name": "emu.getpause",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Returns the current speed limit of the emulator",
                    "finish": 1280003,
                    "returns": [
                        {
                            "name": "speed_limit",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1270000,
                    "type": "function",
                    "view": "function emu.getspeed()\n  -> speed_limit: integer"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 1270021,
                "start": 1270009,
                "type": "setfield"
            }
        ],
        "desc": "Returns the current speed limit of the emulator",
        "name": "emu.getspeed",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1530035,
                            "name": "param",
                            "start": 1530030,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Gets a system metric using the windows [GetSystemMetrics](https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getsystemmetrics) function",
                    "finish": 1540003,
                    "returns": [
                        {
                            "name": "metric",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1530000,
                    "type": "function",
                    "view": "function emu.getsystemmetrics(param: integer)\n  -> metric: integer"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 1530029,
                "start": 1530009,
                "type": "setfield"
            }
        ],
        "desc": "Gets a system metric using the windows [GetSystemMetrics](https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getsystemmetrics) function",
        "name": "emu.getsystemmetrics",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "`1` returns `Mupen 64 {version}`. `2` returns `{version}`",
                            "finish": 1120028,
                            "name": "type",
                            "start": 1120024,
                            "type": "local",
                            "view": "1|2"
                        }
                    ],
                    "desc": "Returns the current mupen version\n\n@*param* `type` โ `1` returns `Mupen 64 {version}`. `2` returns `{version}`\n\n```lua\ntype:\n    | 1\n    | 2\n```",
                    "finish": 1130003,
                    "returns": [
                        {
                            "name": "version",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1120000,
                    "type": "function",
                    "view": "function emu.getversion(type: 1|2)\n  -> version: string"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 1120023,
                "start": 1120009,
                "type": "setfield"
            }
        ],
        "desc": "Returns the current mupen version\n\n@*param* `type` โ `1` returns `Mupen 64 {version}`. `2` returns `{version}`\n\n```lua\ntype:\n    | 1\n    | 2\n```",
        "name": "emu.getversion",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Returns the number of input frames that have happened since the emulator was started. It does not reset when a movie is started",
                    "finish": 1070003,
                    "returns": [
                        {
                            "name": "inputcount",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1060000,
                    "type": "function",
                    "view": "function emu.inputcount()\n  -> inputcount: integer"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 1060023,
                "start": 1060009,
                "type": "setfield"
            }
        ],
        "desc": "Returns the number of input frames that have happened since the emulator was started. It does not reset when a movie is started",
        "name": "emu.inputcount",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Returns true if the currently playing movie is read only",
                    "finish": 1480003,
                    "returns": [
                        {
                            "name": "read_only",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 1470000,
                    "type": "function",
                    "view": "function emu.isreadonly()\n  -> read_only: boolean"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 1470023,
                "start": 1470009,
                "type": "setfield"
            }
        ],
        "desc": "Returns true if the currently playing movie is read only",
        "name": "emu.isreadonly",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "True pauses the emulator and false resumes the emulator",
                            "finish": 1170024,
                            "name": "pause",
                            "start": 1170019,
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "Pauses or unpauses the emulator\n\n@*param* `pause` โ True pauses the emulator and false resumes the emulator",
                    "finish": 1180003,
                    "start": 1170000,
                    "type": "function",
                    "view": "function emu.pause(pause: boolean)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 1170018,
                "start": 1170009,
                "type": "setfield"
            }
        ],
        "desc": "Pauses or unpauses the emulator\n\n@*param* `pause` โ True pauses the emulator and false resumes the emulator",
        "name": "emu.pause",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Returns the number of input frames since the last movie was played. This should match the statusbar (assuming you have `0-index statusbar` off). If no movie is playing, it will return the last value when a movie was playing. If no movie has been played yet, it will return -1",
                    "finish": 1020003,
                    "returns": [
                        {
                            "name": "samplecount",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1010000,
                    "type": "function",
                    "view": "function emu.samplecount()\n  -> samplecount: integer"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 1010024,
                "start": 1010009,
                "type": "setfield"
            }
        ],
        "desc": "Returns the number of input frames since the last movie was played. This should match the statusbar (assuming you have `0-index statusbar` off). If no movie is playing, it will return the last value when a movie was playing. If no movie has been played yet, it will return -1",
        "name": "emu.samplecount",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1320030,
                            "name": "speed_limit",
                            "start": 1320019,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Sets the speed limit of the emulator",
                    "finish": 1330003,
                    "start": 1320000,
                    "type": "function",
                    "view": "function emu.speed(speed_limit: integer)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 1320018,
                "start": 1320009,
                "type": "setfield"
            }
        ],
        "desc": "Sets the speed limit of the emulator",
        "name": "emu.speed",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1370027,
                            "name": "mode",
                            "start": 1370023,
                            "type": "local",
                            "view": "\"maximum\"|\"normal\""
                        }
                    ],
                    "desc": "Sets the speed mode of the emulator\n\n```lua\nmode:\n    | \"normal\"\n    | \"maximum\"\n```",
                    "finish": 1380003,
                    "start": 1370000,
                    "type": "function",
                    "view": "function emu.speedmode(mode: \"maximum\"|\"normal\")"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 1370022,
                "start": 1370009,
                "type": "setfield"
            }
        ],
        "desc": "Sets the speed mode of the emulator\n\n```lua\nmode:\n    | \"normal\"\n    | \"maximum\"\n```",
        "name": "emu.speedmode",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 530030,
                            "name": "message",
                            "start": 530023,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Displays the text `message` in the status bar\non the bottom while replacing any other text.\nThe message will only display until the next frame.",
                    "finish": 530035,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": 530000,
                    "type": "function",
                    "view": "function emu.statusbar(message: string)\n  -> nil"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_tjk.lua",
                "finish": 530022,
                "start": 530009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 430026,
                            "name": "str",
                            "start": 430023,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Sets the statusbar text to `str`",
                    "finish": 440003,
                    "start": 430000,
                    "type": "function",
                    "view": "function emu.statusbar(str: string)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 430022,
                "start": 430009,
                "type": "setfield"
            }
        ],
        "desc": "Sets the statusbar text to `str`",
        "name": "emu.statusbar",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 600022,
                            "name": "message",
                            "start": 600015,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 600029,
                            "name": "level",
                            "start": 600024,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nTerminates the last protected function called and returns message as the error object.\n\nUsually, `error` adds some information about the error position at the beginning of the message, if the message is a string.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-error\"])",
                    "finish": 600034,
                    "start": 600000,
                    "type": "function",
                    "view": "function error(message: any, level?: integer)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 600014,
                "start": 600009,
                "type": "setglobal"
            }
        ],
        "desc": "\nTerminates the last protected function called and returns message as the error object.\n\nUsually, `error` adds some information about the error position at the beginning of the message, if the message is a string.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-error\"])",
        "name": "error",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 790018,
                            "name": "f",
                            "start": 790017,
                            "type": "local",
                            "view": "(integer|fun(...any):...unknown)?"
                        }
                    ],
                    "desc": "\nReturns the current environment in use by the function. `f` can be a Lua function or a number that specifies the function at that stack level.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-getfenv\"])",
                    "finish": 790023,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 790000,
                    "type": "function",
                    "view": "function getfenv(f?: integer|fun(...any):...unknown)\n  -> table"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 790016,
                "start": 790009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReturns the current environment in use by the function. `f` can be a Lua function or a number that specifies the function at that stack level.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-getfenv\"])",
        "name": "getfenv",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 890028,
                            "name": "object",
                            "start": 890022,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nIf object does not have a metatable, returns nil. Otherwise, if the object's metatable has a __metatable field, returns the associated value. Otherwise, returns the metatable of the given object.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-getmetatable\"])",
                    "finish": 890033,
                    "returns": [
                        {
                            "name": "metatable",
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 890000,
                    "type": "function",
                    "view": "function getmetatable(object: any)\n  -> metatable: table"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 890021,
                "start": 890009,
                "type": "setglobal"
            }
        ],
        "desc": "\nIf object does not have a metatable, returns nil. Otherwise, if the object's metatable has a __metatable field, returns the associated value. Otherwise, returns the metatable of the given object.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-getmetatable\"])",
        "name": "getmetatable",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 100008,
                    "start": 100006,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_tjk.lua",
                "finish": 100003,
                "start": 100000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 100008,
                    "start": 100006,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 100003,
                "start": 100000,
                "type": "setglobal"
            }
        ],
        "name": "gui",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 120010,
                    "start": 120008,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_tjk.lua",
                "finish": 120005,
                "start": 120000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 120010,
                    "start": 120008,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 120005,
                "start": 120000,
                "type": "setglobal"
            }
        ],
        "name": "input",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4480022,
                            "name": "t1",
                            "start": 4480020,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 4480026,
                            "name": "t2",
                            "start": 4480024,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "Gets the difference in two input tables",
                    "finish": 4490003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 4480000,
                    "type": "function",
                    "view": "function input.diff(t1: table, t2: table)\n  -> table"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 4480019,
                "start": 4480009,
                "type": "setfield"
            }
        ],
        "desc": "Gets the difference in two input tables",
        "name": "input.diff",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Returns a table of booleans corresponding to which keys are pressed",
                    "finish": 4420003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 4410000,
                    "type": "function",
                    "view": "function input.get()\n  -> table"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 4410018,
                "start": 4410009,
                "type": "setfield"
            }
        ],
        "desc": "Returns a table of booleans corresponding to which keys are pressed",
        "name": "input.get",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Unknown",
                    "finish": 4530003,
                    "start": 4520000,
                    "type": "function",
                    "view": "function input.prompt()"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 4520021,
                "start": 4520009,
                "type": "setfield"
            }
        ],
        "desc": "Unknown",
        "name": "input.prompt",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 260007,
                    "start": 260005,
                    "type": "table",
                    "view": "iolib"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 260002,
                "start": 260000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io\"])\n",
        "name": "io",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "finish": 510022,
                            "name": "file",
                            "start": 510018,
                            "type": "local",
                            "view": "file*?"
                        }
                    ],
                    "desc": "\nClose `file` or default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.close\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                    "finish": 510027,
                    "returns": [
                        {
                            "name": "suc",
                            "type": "function.return",
                            "view": "boolean?"
                        },
                        {
                            "name": "exitcode",
                            "type": "function.return",
                            "view": "exitcode?"
                        },
                        {
                            "name": "code",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": 510000,
                    "type": "function",
                    "view": "function io.close(file?: file*)\n  -> suc: boolean?\n  2. exitcode: exitcode?\n  3. code: integer?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 510017,
                "start": 510009,
                "type": "setfield"
            }
        ],
        "desc": "\nClose `file` or default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.close\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
        "name": "io.close",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nSaves any written data to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.flush\"])",
                    "finish": 580023,
                    "start": 580000,
                    "type": "function",
                    "view": "function io.flush()"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 580017,
                "start": 580009,
                "type": "setfield"
            }
        ],
        "desc": "\nSaves any written data to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.flush\"])",
        "name": "io.flush",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "finish": 670022,
                            "name": "file",
                            "start": 670018,
                            "type": "local",
                            "view": "string|file*"
                        }
                    ],
                    "desc": "\nSets `file` as the default input file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.input\"])",
                    "finish": 670027,
                    "start": 670000,
                    "type": "function",
                    "view": "function io.input(file: string|file*)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 670017,
                "start": 670009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets `file` as the default input file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.input\"])",
        "name": "io.input",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 830026,
                            "name": "filename",
                            "start": 830018,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": 830031,
                            "start": 830028,
                            "type": "...",
                            "view": "readmode"
                        }
                    ],
                    "desc": "\n------\n```lua\nfor c in io.lines(filename, ...) do\n    body\nend\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.lines\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                    "finish": 830036,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun():any, ...unknown"
                        }
                    ],
                    "start": 830000,
                    "type": "function",
                    "view": "function io.lines(filename?: string, ...readmode)\n  -> fun():any, ...unknown"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 830017,
                "start": 830009,
                "type": "setfield"
            }
        ],
        "desc": "\n------\n```lua\nfor c in io.lines(filename, ...) do\n    body\nend\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.lines\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
        "name": "io.lines",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 950025,
                            "name": "filename",
                            "start": 950017,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 950031,
                            "name": "mode",
                            "start": 950027,
                            "type": "local",
                            "view": "openmode?"
                        }
                    ],
                    "desc": "\nOpens a file, in the mode specified in the string `mode`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.open\"])\n\n\n```lua\nmode:\n   -> \"r\" -- Read mode.\n    | \"w\" -- Write mode.\n    | \"a\" -- Append mode.\n    | \"r+\" -- Update mode, all previous data is preserved.\n    | \"w+\" -- Update mode, all previous data is erased.\n    | \"a+\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file.\n    | \"rb\" -- Read mode. (in binary mode.)\n    | \"wb\" -- Write mode. (in binary mode.)\n    | \"ab\" -- Append mode. (in binary mode.)\n    | \"r+b\" -- Update mode, all previous data is preserved. (in binary mode.)\n    | \"w+b\" -- Update mode, all previous data is erased. (in binary mode.)\n    | \"a+b\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file. (in binary mode.)\n```",
                    "finish": 950036,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*?"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 950000,
                    "type": "function",
                    "view": "function io.open(filename: string, mode?: openmode)\n  -> file*?\n  2. errmsg: string?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 950016,
                "start": 950009,
                "type": "setfield"
            }
        ],
        "desc": "\nOpens a file, in the mode specified in the string `mode`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.open\"])\n\n\n```lua\nmode:\n   -> \"r\" -- Read mode.\n    | \"w\" -- Write mode.\n    | \"a\" -- Append mode.\n    | \"r+\" -- Update mode, all previous data is preserved.\n    | \"w+\" -- Update mode, all previous data is erased.\n    | \"a+\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file.\n    | \"rb\" -- Read mode. (in binary mode.)\n    | \"wb\" -- Write mode. (in binary mode.)\n    | \"ab\" -- Append mode. (in binary mode.)\n    | \"r+b\" -- Update mode, all previous data is preserved. (in binary mode.)\n    | \"w+b\" -- Update mode, all previous data is erased. (in binary mode.)\n    | \"a+b\" -- Append update mode, previous data is preserved, writing is only allowed at the end of file. (in binary mode.)\n```",
        "name": "io.open",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "finish": 1040023,
                            "name": "file",
                            "start": 1040019,
                            "type": "local",
                            "view": "string|file*"
                        }
                    ],
                    "desc": "\nSets `file` as the default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.output\"])",
                    "finish": 1040028,
                    "start": 1040000,
                    "type": "function",
                    "view": "function io.output(file: string|file*)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 1040018,
                "start": 1040009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets `file` as the default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.output\"])",
        "name": "io.output",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1190022,
                            "name": "prog",
                            "start": 1190018,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 1190028,
                            "name": "mode",
                            "start": 1190024,
                            "type": "local",
                            "view": "popenmode?"
                        }
                    ],
                    "desc": "\nStarts program prog in a separated process.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.popen\"])\n\n\n```lua\nmode:\n    | \"r\" -- Read data from this program by `file`.\n    | \"w\" -- Write data to this program by `file`.\n```",
                    "finish": 1190033,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*?"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1190000,
                    "type": "function",
                    "view": "function io.popen(prog: string, mode?: popenmode)\n  -> file*?\n  2. errmsg: string?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 1190017,
                "start": 1190009,
                "type": "setfield"
            }
        ],
        "desc": "\nStarts program prog in a separated process.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.popen\"])\n\n\n```lua\nmode:\n    | \"r\" -- Read data from this program by `file`.\n    | \"w\" -- Write data to this program by `file`.\n```",
        "name": "io.popen",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1300020,
                            "start": 1300017,
                            "type": "...",
                            "view": "readmode"
                        }
                    ],
                    "desc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.read\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
                    "finish": 1300025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 1300000,
                    "type": "function",
                    "view": "function io.read(...readmode)\n  -> any\n  2. ...any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 1300016,
                "start": 1300009,
                "type": "setfield"
            }
        ],
        "desc": "\nReads the `file`, according to the given formats, which specify what to read.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.read\"])\n\n\n```lua\n...(param):\n    | \"n\" -- Reads a numeral and returns it as number.\n    | \"a\" -- Reads the whole file.\n   -> \"l\" -- Reads the next line skipping the end of line.\n    | \"L\" -- Reads the next line keeping the end of line.\n```",
        "name": "io.read",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nIn case of success, returns a handle for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.tmpfile\"])",
                    "finish": 1390025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*"
                        }
                    ],
                    "start": 1390000,
                    "type": "function",
                    "view": "function io.tmpfile()\n  -> file*"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 1390019,
                "start": 1390009,
                "type": "setfield"
            }
        ],
        "desc": "\nIn case of success, returns a handle for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.tmpfile\"])",
        "name": "io.tmpfile",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-file\"])\n",
                            "finish": 1540021,
                            "name": "file",
                            "start": 1540017,
                            "type": "local",
                            "view": "file*"
                        }
                    ],
                    "desc": "\nChecks whether `obj` is a valid file handle.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.type\"])\n\n\n```lua\nreturn #1:\n    | \"file\" -- Is an open file handle.\n    | \"closed file\" -- Is a closed file handle.\n    | `nil` -- Is not a file handle.\n```",
                    "finish": 1540026,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "filetype"
                        }
                    ],
                    "start": 1540000,
                    "type": "function",
                    "view": "function io.type(file: file*)\n  -> filetype"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 1540016,
                "start": 1540009,
                "type": "setfield"
            }
        ],
        "desc": "\nChecks whether `obj` is a valid file handle.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.type\"])\n\n\n```lua\nreturn #1:\n    | \"file\" -- Is an open file handle.\n    | \"closed file\" -- Is a closed file handle.\n    | `nil` -- Is not a file handle.\n```",
        "name": "io.type",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1630021,
                            "start": 1630018,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nWrites the value of each of its arguments to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.write\"])",
                    "finish": 1630026,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "file*"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1630000,
                    "type": "function",
                    "view": "function io.write(...any)\n  -> file*\n  2. errmsg: string?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/io.lua",
                "finish": 1630017,
                "start": 1630009,
                "type": "setfield"
            }
        ],
        "desc": "\nWrites the value of each of its arguments to default output file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.write\"])",
        "name": "io.write",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 160013,
                    "start": 160011,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_tjk.lua",
                "finish": 160008,
                "start": 160000,
                "type": "setglobal"
            }
        ],
        "name": "ioHelper",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 150013,
                    "start": 150011,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 150008,
                "start": 150000,
                "type": "setglobal"
            }
        ],
        "name": "iohelper",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1060017,
                            "name": "t",
                            "start": 1060016,
                            "type": "local",
                            "view": "<T:table>"
                        }
                    ],
                    "desc": "\nReturns three values (an iterator function, the table `t`, and `0`) so that the construction\n```lua\n    for i,v in ipairs(t) do body end\n```\nwill iterate over the keyโvalue pairs `(1,t[1]), (2,t[2]), ...`, up to the first absent index.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-ipairs\"])",
                    "finish": 1060022,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun(table: <V>[], i?: integer):integer, <V>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T:table>"
                        },
                        {
                            "name": "i",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1060000,
                    "type": "function",
                    "view": "function ipairs(t: <T:table>)\n  -> fun(table: <V>[], i?: integer):integer, <V>\n  2. <T:table>\n  3. i: integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 1060015,
                "start": 1060009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReturns three values (an iterator function, the table `t`, and `0`) so that the construction\n```lua\n    for i,v in ipairs(t) do body end\n```\nwill iterate over the keyโvalue pairs `(1,t[1]), (2,t[2]), ...`, up to the first absent index.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-ipairs\"])",
        "name": "ipairs",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 130011,
                    "start": 130009,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_tjk.lua",
                "finish": 130006,
                "start": 130000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 130011,
                    "start": 130009,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 130006,
                "start": 130000,
                "type": "setglobal"
            }
        ],
        "name": "joypad",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1280019,
                            "name": "chunk",
                            "start": 1280014,
                            "type": "local",
                            "view": "string|function"
                        },
                        {
                            "finish": 1280030,
                            "name": "chunkname",
                            "start": 1280021,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": 1280036,
                            "name": "mode",
                            "start": 1280032,
                            "type": "local",
                            "view": "loadmode?"
                        },
                        {
                            "finish": 1280041,
                            "name": "env",
                            "start": 1280038,
                            "type": "local",
                            "view": "table?"
                        }
                    ],
                    "desc": "\nLoads a chunk.\n\nIf `chunk` is a string, the chunk is this string. If `chunk` is a function, `load` calls it repeatedly to get the chunk pieces. Each call to `chunk` must return a string that concatenates with previous results. A return of an empty string, `nil`, or no value signals the end of the chunk.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-load\"])\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
                    "finish": 1280046,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function?"
                        },
                        {
                            "name": "error_message",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1280000,
                    "type": "function",
                    "view": "function load(chunk: string|function, chunkname?: string, mode?: loadmode, env?: table)\n  -> function?\n  2. error_message: string?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 1280013,
                "start": 1280009,
                "type": "setglobal"
            }
        ],
        "desc": "\nLoads a chunk.\n\nIf `chunk` is a string, the chunk is this string. If `chunk` is a function, `load` calls it repeatedly to get the chunk pieces. Each call to `chunk` must return a string that concatenates with previous results. A return of an empty string, `nil`, or no value signals the end of the chunk.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-load\"])\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
        "name": "load",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1410026,
                            "name": "filename",
                            "start": 1410018,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": 1410032,
                            "name": "mode",
                            "start": 1410028,
                            "type": "local",
                            "view": "loadmode?"
                        },
                        {
                            "finish": 1410037,
                            "name": "env",
                            "start": 1410034,
                            "type": "local",
                            "view": "table?"
                        }
                    ],
                    "desc": "\nLoads a chunk from file `filename` or from the standard input, if no file name is given.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-loadfile\"])\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
                    "finish": 1410042,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function?"
                        },
                        {
                            "name": "error_message",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1410000,
                    "type": "function",
                    "view": "function loadfile(filename?: string, mode?: loadmode, env?: table)\n  -> function?\n  2. error_message: string?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 1410017,
                "start": 1410009,
                "type": "setglobal"
            }
        ],
        "desc": "\nLoads a chunk from file `filename` or from the standard input, if no file name is given.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-loadfile\"])\n\n\n```lua\nmode:\n    | \"b\" -- Only binary chunks.\n    | \"t\" -- Only text chunks.\n   -> \"bt\" -- Both binary and text.\n```",
        "name": "loadfile",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1540024,
                            "name": "text",
                            "start": 1540020,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 1540035,
                            "name": "chunkname",
                            "start": 1540026,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nLoads a chunk from the given string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-loadstring\"])",
                    "finish": 1540040,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function?"
                        },
                        {
                            "name": "error_message",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1540000,
                    "type": "function",
                    "view": "function loadstring(text: string, chunkname?: string)\n  -> function?\n  2. error_message: string?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 1540019,
                "start": 1540009,
                "type": "setglobal"
            }
        ],
        "desc": "\nLoads a chunk from the given string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-loadstring\"])",
        "name": "loadstring",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 320009,
                    "start": 320007,
                    "type": "table",
                    "view": "mathlib"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 320004,
                "start": 320000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math\"])\n",
        "name": "math",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 430019,
                            "name": "x",
                            "start": 430018,
                            "type": "local",
                            "view": "<Number:number>"
                        }
                    ],
                    "desc": "\nReturns the absolute value of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.abs\"])",
                    "finish": 430024,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<Number:number>"
                        }
                    ],
                    "start": 430000,
                    "type": "function",
                    "view": "function math.abs(x: <Number:number>)\n  -> <Number:number>"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 430017,
                "start": 430009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the absolute value of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.abs\"])",
        "name": "math.abs",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 530020,
                            "name": "x",
                            "start": 530019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the arc cosine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.acos\"])",
                    "finish": 530025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 530000,
                    "type": "function",
                    "view": "function math.acos(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 530018,
                "start": 530009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the arc cosine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.acos\"])",
        "name": "math.acos",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 630020,
                            "name": "x",
                            "start": 630019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the arc sine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.asin\"])",
                    "finish": 630025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 630000,
                    "type": "function",
                    "view": "function math.asin(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 630018,
                "start": 630009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the arc sine of `x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.asin\"])",
        "name": "math.asin",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 740020,
                            "name": "y",
                            "start": 740019,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 740023,
                            "name": "x",
                            "start": 740022,
                            "type": "local",
                            "view": "number?"
                        }
                    ],
                    "desc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.atan\"])",
                    "finish": 740028,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 740000,
                    "type": "function",
                    "view": "function math.atan(y: number, x?: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 740018,
                "start": 740009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.atan\"])",
        "name": "math.atan",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 860021,
                            "name": "y",
                            "start": 860020,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 860024,
                            "name": "x",
                            "start": 860023,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.atan2\"])",
                    "finish": 860029,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 860000,
                    "type": "function",
                    "view": "function math.atan2(y: number, x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 860019,
                "start": 860009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the arc tangent of `y/x` (in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.atan2\"])",
        "name": "math.atan2",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 960020,
                            "name": "x",
                            "start": 960019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the smallest integral value larger than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ceil\"])",
                    "finish": 960025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 960000,
                    "type": "function",
                    "view": "function math.ceil(x: number)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 960018,
                "start": 960009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the smallest integral value larger than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ceil\"])",
        "name": "math.ceil",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1060019,
                            "name": "x",
                            "start": 1060018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.cos\"])",
                    "finish": 1060024,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1060000,
                    "type": "function",
                    "view": "function math.cos(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1060017,
                "start": 1060009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.cos\"])",
        "name": "math.cos",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1170020,
                            "name": "x",
                            "start": 1170019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the hyperbolic cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.cosh\"])",
                    "finish": 1170025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1170000,
                    "type": "function",
                    "view": "function math.cosh(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1170018,
                "start": 1170009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the hyperbolic cosine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.cosh\"])",
        "name": "math.cosh",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1270019,
                            "name": "x",
                            "start": 1270018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nConverts the angle `x` from radians to degrees.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.deg\"])",
                    "finish": 1270024,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1270000,
                    "type": "function",
                    "view": "function math.deg(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1270017,
                "start": 1270009,
                "type": "setfield"
            }
        ],
        "desc": "\nConverts the angle `x` from radians to degrees.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.deg\"])",
        "name": "math.deg",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1370019,
                            "name": "x",
                            "start": 1370018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the value `e^x` (where `e` is the base of natural logarithms).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.exp\"])",
                    "finish": 1370024,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1370000,
                    "type": "function",
                    "view": "function math.exp(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1370017,
                "start": 1370009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the value `e^x` (where `e` is the base of natural logarithms).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.exp\"])",
        "name": "math.exp",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1470021,
                            "name": "x",
                            "start": 1470020,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the largest integral value smaller than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.floor\"])",
                    "finish": 1470026,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1470000,
                    "type": "function",
                    "view": "function math.floor(x: number)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1470019,
                "start": 1470009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the largest integral value smaller than or equal to `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.floor\"])",
        "name": "math.floor",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1580020,
                            "name": "x",
                            "start": 1580019,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 1580023,
                            "name": "y",
                            "start": 1580022,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the remainder of the division of `x` by `y` that rounds the quotient towards zero.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.fmod\"])",
                    "finish": 1580028,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1580000,
                    "type": "function",
                    "view": "function math.fmod(x: number, y: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1580018,
                "start": 1580009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the remainder of the division of `x` by `y` that rounds the quotient towards zero.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.fmod\"])",
        "name": "math.fmod",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1700021,
                            "name": "x",
                            "start": 1700020,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nDecompose `x` into tails and exponents. Returns `m` and `e` such that `x = m * (2 ^ e)`, `e` is an integer and the absolute value of `m` is in the range [0.5, 1) (or zero when `x` is zero).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.frexp\"])",
                    "finish": 1700026,
                    "returns": [
                        {
                            "name": "m",
                            "type": "function.return",
                            "view": "number"
                        },
                        {
                            "name": "e",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1700000,
                    "type": "function",
                    "view": "function math.frexp(x: number)\n  -> m: number\n  2. e: number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1700019,
                "start": 1700009,
                "type": "setfield"
            }
        ],
        "desc": "\nDecompose `x` into tails and exponents. Returns `m` and `e` such that `x = m * (2 ^ e)`, `e` is an integer and the absolute value of `m` is in the range [0.5, 1) (or zero when `x` is zero).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.frexp\"])",
        "name": "math.frexp",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1820021,
                            "name": "m",
                            "start": 1820020,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 1820024,
                            "name": "e",
                            "start": 1820023,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns `m * (2 ^ e)` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ldexp\"])",
                    "finish": 1820029,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1820000,
                    "type": "function",
                    "view": "function math.ldexp(m: number, e: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1820019,
                "start": 1820009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns `m * (2 ^ e)` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ldexp\"])",
        "name": "math.ldexp",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1930019,
                            "name": "x",
                            "start": 1930018,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 1930025,
                            "name": "base",
                            "start": 1930021,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the logarithm of `x` in the given base.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.log\"])",
                    "finish": 1930030,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 1930000,
                    "type": "function",
                    "view": "function math.log(x: number, base?: integer)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 1930017,
                "start": 1930009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the logarithm of `x` in the given base.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.log\"])",
        "name": "math.log",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2040021,
                            "name": "x",
                            "start": 2040020,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the base-10 logarithm of x.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.log10\"])",
                    "finish": 2040026,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2040000,
                    "type": "function",
                    "view": "function math.log10(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2040019,
                "start": 2040009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the base-10 logarithm of x.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.log10\"])",
        "name": "math.log10",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2160019,
                            "name": "x",
                            "start": 2160018,
                            "type": "local",
                            "view": "<Number:number>"
                        },
                        {
                            "finish": 2160024,
                            "start": 2160021,
                            "type": "...",
                            "view": "<Number:number>"
                        }
                    ],
                    "desc": "\nReturns the argument with the maximum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.max\"])",
                    "finish": 2160029,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<Number:number>"
                        }
                    ],
                    "start": 2160000,
                    "type": "function",
                    "view": "function math.max(x: <Number:number>, ...<Number:number>)\n  -> <Number:number>"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2160017,
                "start": 2160009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the argument with the maximum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.max\"])",
        "name": "math.max",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2280019,
                            "name": "x",
                            "start": 2280018,
                            "type": "local",
                            "view": "<Number:number>"
                        },
                        {
                            "finish": 2280024,
                            "start": 2280021,
                            "type": "...",
                            "view": "<Number:number>"
                        }
                    ],
                    "desc": "\nReturns the argument with the minimum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.min\"])",
                    "finish": 2280029,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<Number:number>"
                        }
                    ],
                    "start": 2280000,
                    "type": "function",
                    "view": "function math.min(x: <Number:number>, ...<Number:number>)\n  -> <Number:number>"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2280017,
                "start": 2280009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the argument with the minimum value, according to the Lua operator `<`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.min\"])",
        "name": "math.min",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2390020,
                            "name": "x",
                            "start": 2390019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the integral part of `x` and the fractional part of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.modf\"])",
                    "finish": 2390025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        },
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2390000,
                    "type": "function",
                    "view": "function math.modf(x: number)\n  -> integer\n  2. number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2390018,
                "start": 2390009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the integral part of `x` and the fractional part of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.modf\"])",
        "name": "math.modf",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2510019,
                            "name": "x",
                            "start": 2510018,
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": 2510022,
                            "name": "y",
                            "start": 2510021,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns `x ^ y` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.pow\"])",
                    "finish": 2510027,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2510000,
                    "type": "function",
                    "view": "function math.pow(x: number, y: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2510017,
                "start": 2510009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns `x ^ y` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.pow\"])",
        "name": "math.pow",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2610019,
                            "name": "x",
                            "start": 2610018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nConverts the angle `x` from degrees to radians.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.rad\"])",
                    "finish": 2610024,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2610000,
                    "type": "function",
                    "view": "function math.rad(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2610017,
                "start": 2610009,
                "type": "setfield"
            }
        ],
        "desc": "\nConverts the angle `x` from degrees to radians.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.rad\"])",
        "name": "math.rad",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2770022,
                            "name": "m",
                            "start": 2770021,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 2770025,
                            "name": "n",
                            "start": 2770024,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\n* `math.random()`: Returns a float in the range [0,1).\n* `math.random(n)`: Returns a integer in the range [1, n].\n* `math.random(m, n)`: Returns a integer in the range [m, n].\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.random\"])",
                    "finish": 2770030,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 2770000,
                    "type": "function",
                    "view": "function math.random(m: integer, n: integer)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2770020,
                "start": 2770009,
                "type": "setfield"
            }
        ],
        "desc": "\n* `math.random()`: Returns a float in the range [0,1).\n* `math.random(n)`: Returns a integer in the range [1, n].\n* `math.random(m, n)`: Returns a integer in the range [m, n].\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.random\"])",
        "name": "math.random",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2890026,
                            "name": "x",
                            "start": 2890025,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 2890029,
                            "name": "y",
                            "start": 2890028,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\n* `math.randomseed(x, y)`: Concatenate `x` and `y` into a 128-bit `seed` to reinitialize the pseudo-random generator.\n* `math.randomseed(x)`: Equate to `math.randomseed(x, 0)` .\n* `math.randomseed()`: Generates a seed with a weak attempt for randomness.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.randomseed\"])",
                    "finish": 2890034,
                    "start": 2890000,
                    "type": "function",
                    "view": "function math.randomseed(x?: integer, y?: integer)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2890024,
                "start": 2890009,
                "type": "setfield"
            }
        ],
        "desc": "\n* `math.randomseed(x, y)`: Concatenate `x` and `y` into a 128-bit `seed` to reinitialize the pseudo-random generator.\n* `math.randomseed(x)`: Equate to `math.randomseed(x, 0)` .\n* `math.randomseed()`: Generates a seed with a weak attempt for randomness.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.randomseed\"])",
        "name": "math.randomseed",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2990019,
                            "name": "x",
                            "start": 2990018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sin\"])",
                    "finish": 2990024,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2990000,
                    "type": "function",
                    "view": "function math.sin(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 2990017,
                "start": 2990009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sin\"])",
        "name": "math.sin",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3100020,
                            "name": "x",
                            "start": 3100019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the hyperbolic sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sinh\"])",
                    "finish": 3100025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 3100000,
                    "type": "function",
                    "view": "function math.sinh(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 3100018,
                "start": 3100009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the hyperbolic sine of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sinh\"])",
        "name": "math.sinh",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3200020,
                            "name": "x",
                            "start": 3200019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the square root of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sqrt\"])",
                    "finish": 3200025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 3200000,
                    "type": "function",
                    "view": "function math.sqrt(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 3200018,
                "start": 3200009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the square root of `x`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.sqrt\"])",
        "name": "math.sqrt",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3300019,
                            "name": "x",
                            "start": 3300018,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tan\"])",
                    "finish": 3300024,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 3300000,
                    "type": "function",
                    "view": "function math.tan(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 3300017,
                "start": 3300009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tan\"])",
        "name": "math.tan",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3410020,
                            "name": "x",
                            "start": 3410019,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "\nReturns the hyperbolic tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tanh\"])",
                    "finish": 3410025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 3410000,
                    "type": "function",
                    "view": "function math.tanh(x: number)\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 3410018,
                "start": 3410009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the hyperbolic tangent of `x` (assumed to be in radians).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tanh\"])",
        "name": "math.tanh",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3520025,
                            "name": "x",
                            "start": 3520024,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nIf the value `x` is convertible to an integer, returns that integer.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tointeger\"])",
                    "finish": 3520030,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": 3520000,
                    "type": "function",
                    "view": "function math.tointeger(x: any)\n  -> integer?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 3520023,
                "start": 3520009,
                "type": "setfield"
            }
        ],
        "desc": "\nIf the value `x` is convertible to an integer, returns that integer.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.tointeger\"])",
        "name": "math.tointeger",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3650020,
                            "name": "x",
                            "start": 3650019,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns `\"integer\"` if `x` is an integer, `\"float\"` if it is a float, or `nil` if `x` is not a number.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.type\"])\n\n\n```lua\nreturn #1:\n    | \"integer\"\n    | \"float\"\n    | 'nil'\n```",
                    "finish": 3650025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "\"float\"|\"integer\"|'nil'"
                        }
                    ],
                    "start": 3650000,
                    "type": "function",
                    "view": "function math.type(x: any)\n  -> \"float\"|\"integer\"|'nil'"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 3650018,
                "start": 3650009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns `\"integer\"` if `x` is an integer, `\"float\"` if it is a float, or `nil` if `x` is not a number.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.type\"])\n\n\n```lua\nreturn #1:\n    | \"integer\"\n    | \"float\"\n    | 'nil'\n```",
        "name": "math.type",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3760019,
                            "name": "m",
                            "start": 3760018,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3760022,
                            "name": "n",
                            "start": 3760021,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns `true` if and only if `m` is below `n` when they are compared as unsigned integers.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ult\"])",
                    "finish": 3760027,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 3760000,
                    "type": "function",
                    "view": "function math.ult(m: integer, n: integer)\n  -> boolean"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/math.lua",
                "finish": 3760017,
                "start": 3760009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns `true` if and only if `m` is below `n` when they are compared as unsigned integers.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-math.ult\"])",
        "name": "math.ult",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 90011,
                    "start": 90009,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_tjk.lua",
                "finish": 90006,
                "start": 90000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 90011,
                    "start": 90009,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 90006,
                "start": 90000,
                "type": "setglobal"
            }
        ],
        "name": "memory",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The address to read from",
                            "finish": 1700026,
                            "name": "address",
                            "start": 1700019,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Loads a signed byte from rdram and returns it. Alias for `memory.readbytesigned`\n\n@*param* `address` โ The address to read from\n\n@*return* `value` โ The signed byte at `address`",
                    "finish": 1710003,
                    "returns": [
                        {
                            "desc": "The signed byte at `address`",
                            "name": "value",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1700000,
                    "type": "function",
                    "view": "function memory.LB(address: integer)\n  -> value: integer"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 1700018,
                "start": 1700009,
                "type": "setfield"
            }
        ],
        "desc": "Loads a signed byte from rdram and returns it. Alias for `memory.readbytesigned`\n\n@*param* `address` โ The address to read from\n\n@*return* `value` โ The signed byte at `address`",
        "name": "memory.LB",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The address to read from",
                            "finish": 1640027,
                            "name": "address",
                            "start": 1640020,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Loads an unsigned byte from rdram and returns it. Alias for `memory.readbyte`\n\n@*param* `address` โ The address to read from\n\n@*return* `value` โ The unsigned byte at `address`",
                    "finish": 1650003,
                    "returns": [
                        {
                            "desc": "The unsigned byte at `address`",
                            "name": "value",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1640000,
                    "type": "function",
                    "view": "function memory.LBU(address: integer)\n  -> value: integer"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 1640019,
                "start": 1640009,
                "type": "setfield"
            }
        ],
        "desc": "Loads an unsigned byte from rdram and returns it. Alias for `memory.readbyte`\n\n@*param* `address` โ The address to read from\n\n@*return* `value` โ The unsigned byte at `address`",
        "name": "memory.LBU",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The address to read from",
                            "finish": 2060026,
                            "name": "address",
                            "start": 2060019,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Loads a signed long long (8 bytes) from rdram and returns it in a table of 2 integers. Alias for `memory.readqwordsigned`\n\n@*param* `address` โ The address to read from\n\n@*return* `value` โ A table containing the the upper and lower 4 bytes of the signed long at `address`",
                    "finish": 2070003,
                    "returns": [
                        {
                            "desc": "A table containing the the upper and lower 4 bytes of the signed long at `address`",
                            "name": "value",
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 2060000,
                    "type": "function",
                    "view": "function memory.LD(address: integer)\n  -> value: table"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 2060018,
                "start": 2060009,
                "type": "setfield"
            }
        ],
        "desc": "Loads a signed long long (8 bytes) from rdram and returns it in a table of 2 integers. Alias for `memory.readqwordsigned`\n\n@*param* `address` โ The address to read from\n\n@*return* `value` โ A table containing the the upper and lower 4 bytes of the signed long at `address`",
        "name": "memory.LD",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The address to read from",
                            "finish": 2180028,
                            "name": "address",
                            "start": 2180021,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Loads a double (8 bytes) from rdram and returns it. Alias for `memory.readdouble`\n\n@*param* `address` โ The address to read from\n\n@*return* `value` โ The double at `address`",
                    "finish": 2190003,
                    "returns": [
                        {
                            "desc": "The double at `address`",
                            "name": "value",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2180000,
                    "type": "function",
                    "view": "function memory.LDC1(address: integer)\n  -> value: number"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 2180020,
                "start": 2180009,
                "type": "setfield"
            }
        ],
        "desc": "Loads a double (8 bytes) from rdram and returns it. Alias for `memory.readdouble`\n\n@*param* `address` โ The address to read from\n\n@*return* `value` โ The double at `address`",
        "name": "memory.LDC1",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The address to read from",
                            "finish": 2000027,
                            "name": "address",
                            "start": 2000020,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Loads a unsigned long long (8 bytes) from rdram and returns it in a table of 2 integers. Alias for `memory.readqword`\n\n@*param* `address` โ The address to read from\n\n@*return* `value` โ A table containing the the upper and lower 4 bytes of the unsigned long long at `address`",
                    "finish": 2010003,
                    "returns": [
                        {
                            "desc": "A table containing the the upper and lower 4 bytes of the unsigned long long at `address`",
                            "name": "value",
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 2000000,
                    "type": "function",
                    "view": "function memory.LDU(address: integer)\n  -> value: table"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 2000019,
                "start": 2000009,
                "type": "setfield"
            }
        ],
        "desc": "Loads a unsigned long long (8 bytes) from rdram and returns it in a table of 2 integers. Alias for `memory.readqword`\n\n@*param* `address` โ The address to read from\n\n@*return* `value` โ A table containing the the upper and lower 4 bytes of the unsigned long long at `address`",
        "name": "memory.LDU",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The address to read from",
                            "finish": 1820026,
                            "name": "address",
                            "start": 1820019,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Loads a signed short (2 bytes) from rdram and returns it. Alias for `memory.readwordsigned`\n\n@*param* `address` โ The address to read from\n\n@*return* `value` โ The signed short at `address`",
                    "finish": 1830003,
                    "returns": [
                        {
                            "desc": "The signed short at `address`",
                            "name": "value",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1820000,
                    "type": "function",
                    "view": "function memory.LH(address: integer)\n  -> value: integer"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 1820018,
                "start": 1820009,
                "type": "setfield"
            }
        ],
        "desc": "Loads a signed short (2 bytes) from rdram and returns it. Alias for `memory.readwordsigned`\n\n@*param* `address` โ The address to read from\n\n@*return* `value` โ The signed short at `address`",
        "name": "memory.LH",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The address to read from",
                            "finish": 1760027,
                            "name": "address",
                            "start": 1760020,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Loads an unsigned short (2 bytes) from rdram and returns it. Alias for `memory.readword`\n\n@*param* `address` โ The address to read from\n\n@*return* `value` โ The unsigned short at `address`",
                    "finish": 1770003,
                    "returns": [
                        {
                            "desc": "The unsigned short at `address`",
                            "name": "value",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1760000,
                    "type": "function",
                    "view": "function memory.LHU(address: integer)\n  -> value: integer"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 1760019,
                "start": 1760009,
                "type": "setfield"
            }
        ],
        "desc": "Loads an unsigned short (2 bytes) from rdram and returns it. Alias for `memory.readword`\n\n@*param* `address` โ The address to read from\n\n@*return* `value` โ The unsigned short at `address`",
        "name": "memory.LHU",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The address to read from",
                            "finish": 1940026,
                            "name": "address",
                            "start": 1940019,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Loads a signed long (4 bytes) from rdram and returns it. Alias for `memory.readdwordsigned`\n\n@*param* `address` โ The address to read from\n\n@*return* `value` โ The signed long at `address`",
                    "finish": 1950003,
                    "returns": [
                        {
                            "desc": "The signed long at `address`",
                            "name": "value",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1940000,
                    "type": "function",
                    "view": "function memory.LW(address: integer)\n  -> value: integer"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 1940018,
                "start": 1940009,
                "type": "setfield"
            }
        ],
        "desc": "Loads a signed long (4 bytes) from rdram and returns it. Alias for `memory.readdwordsigned`\n\n@*param* `address` โ The address to read from\n\n@*return* `value` โ The signed long at `address`",
        "name": "memory.LW",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The address to read from",
                            "finish": 2120028,
                            "name": "address",
                            "start": 2120021,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Loads a float (4 bytes) from rdram and returns it. Alias for `memory.readfloat`\n\n@*param* `address` โ The address to read from\n\n@*return* `value` โ The float at `address`",
                    "finish": 2130003,
                    "returns": [
                        {
                            "desc": "The float at `address`",
                            "name": "value",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2120000,
                    "type": "function",
                    "view": "function memory.LWC1(address: integer)\n  -> value: number"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 2120020,
                "start": 2120009,
                "type": "setfield"
            }
        ],
        "desc": "Loads a float (4 bytes) from rdram and returns it. Alias for `memory.readfloat`\n\n@*param* `address` โ The address to read from\n\n@*return* `value` โ The float at `address`",
        "name": "memory.LWC1",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The address to read from",
                            "finish": 1880027,
                            "name": "address",
                            "start": 1880020,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Loads an unsigned long (4 bytes) from rdram and returns it. Alias for `memory.readdword`\n\n@*param* `address` โ The address to read from\n\n@*return* `value` โ The unsigned long at `address`",
                    "finish": 1890003,
                    "returns": [
                        {
                            "desc": "The unsigned long at `address`",
                            "name": "value",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1880000,
                    "type": "function",
                    "view": "function memory.LWU(address: integer)\n  -> value: integer"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 1880019,
                "start": 1880009,
                "type": "setfield"
            }
        ],
        "desc": "Loads an unsigned long (4 bytes) from rdram and returns it. Alias for `memory.readdword`\n\n@*param* `address` โ The address to read from\n\n@*return* `value` โ The unsigned long at `address`",
        "name": "memory.LWU",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The address to read from",
                            "finish": 2250032,
                            "name": "address",
                            "start": 2250025,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "The size to read. Must be `1`, `2`, `4`, or `8`",
                            "finish": 2250038,
                            "name": "size",
                            "start": 2250034,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Loads `size` bytes at `address` from rdram and returns it. Alias for `memory.readsize`\n\n@*param* `address` โ The address to read from\n\n@*param* `size` โ The size to read. Must be `1`, `2`, `4`, or `8`\n\n@*return* `value` โ `size` bytes at `address`",
                    "finish": 2260003,
                    "returns": [
                        {
                            "desc": "`size` bytes at `address`",
                            "name": "value",
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 2250000,
                    "type": "function",
                    "view": "function memory.loadsize(address: integer, size: integer)\n  -> value: number"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 2250024,
                "start": 2250009,
                "type": "setfield"
            }
        ],
        "desc": "Loads `size` bytes at `address` from rdram and returns it. Alias for `memory.readsize`\n\n@*param* `address` โ The address to read from\n\n@*param* `size` โ The size to read. Must be `1`, `2`, `4`, or `8`\n\n@*return* `value` โ `size` bytes at `address`",
        "name": "memory.loadsize",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1690020,
                            "name": "name",
                            "start": 1690016,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 1690025,
                            "start": 1690022,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nCreates a module.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-module\"])",
                    "finish": 1690030,
                    "start": 1690000,
                    "type": "function",
                    "view": "function module(name: string, ...any)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 1690015,
                "start": 1690009,
                "type": "setglobal"
            }
        ],
        "desc": "\nCreates a module.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-module\"])",
        "name": "module",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 140010,
                    "start": 140008,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_tjk.lua",
                "finish": 140005,
                "start": 140000,
                "type": "setglobal"
            }
        ],
        "name": "movie",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1600023,
                            "name": "proxy",
                            "start": 1600018,
                            "type": "local",
                            "view": "boolean|table|userdata"
                        }
                    ],
                    "finish": 1600028,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "userdata"
                        }
                    ],
                    "start": 1600000,
                    "type": "function",
                    "view": "function newproxy(proxy: boolean|table|userdata)\n  -> userdata"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 1600017,
                "start": 1600009,
                "type": "setglobal"
            }
        ],
        "name": "newproxy",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1870019,
                            "name": "table",
                            "start": 1870014,
                            "type": "local",
                            "view": "table<<K>, <V>>"
                        },
                        {
                            "finish": 1870026,
                            "name": "index",
                            "start": 1870021,
                            "type": "local",
                            "view": "<K>?"
                        }
                    ],
                    "desc": "\nAllows a program to traverse all fields of a table. Its first argument is a table and its second argument is an index in this table. A call to `next` returns the next index of the table and its associated value. When called with `nil` as its second argument, `next` returns an initial index and its associated value. When called with the last index, or with `nil` in an empty table, `next` returns `nil`. If the second argument is absent, then it is interpreted as `nil`. In particular, you can use `next(t)` to check whether a table is empty.\n\nThe order in which the indices are enumerated is not specified, *even for numeric indices*. (To traverse a table in numerical order, use a numerical `for`.)\n\nThe behavior of `next` is undefined if, during the traversal, you assign any value to a non-existent field in the table. You may however modify existing fields. In particular, you may set existing fields to nil.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-next\"])",
                    "finish": 1870031,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<K>?"
                        },
                        {
                            "type": "function.return",
                            "view": "<V>?"
                        }
                    ],
                    "start": 1870000,
                    "type": "function",
                    "view": "function next(table: table<<K>, <V>>, index?: <K>)\n  -> <K>?\n  2. <V>?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 1870013,
                "start": 1870009,
                "type": "setglobal"
            }
        ],
        "desc": "\nAllows a program to traverse all fields of a table. Its first argument is a table and its second argument is an index in this table. A call to `next` returns the next index of the table and its associated value. When called with `nil` as its second argument, `next` returns an initial index and its associated value. When called with the last index, or with `nil` in an empty table, `next` returns `nil`. If the second argument is absent, then it is interpreted as `nil`. In particular, you can use `next(t)` to check whether a table is empty.\n\nThe order in which the indices are enumerated is not specified, *even for numeric indices*. (To traverse a table in numerical order, use a numerical `for`.)\n\nThe behavior of `next` is undefined if, during the traversal, you assign any value to a non-existent field in the table. You may however modify existing fields. In particular, you may set existing fields to nil.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-next\"])",
        "name": "next",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 80007,
                    "start": 80005,
                    "type": "table",
                    "view": "oslib"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 80002,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os\"])\n",
        "name": "os",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nReturns an approximation of the amount in seconds of CPU time used by the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.clock\"])",
                    "finish": 170023,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": 170000,
                    "type": "function",
                    "view": "function os.clock()\n  -> number"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 170017,
                "start": 170009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns an approximation of the amount in seconds of CPU time used by the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.clock\"])",
        "name": "os.clock",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 840023,
                            "name": "format",
                            "start": 840017,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": 840029,
                            "name": "time",
                            "start": 840025,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns a string or a table containing date and time, formatted according to the given string `format`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.date\"])",
                    "finish": 840034,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string|osdate"
                        }
                    ],
                    "start": 840000,
                    "type": "function",
                    "view": "function os.date(format?: string, time?: integer)\n  -> string|osdate"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 840016,
                "start": 840009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string or a table containing date and time, formatted according to the given string `format`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.date\"])",
        "name": "os.date",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 950023,
                            "name": "t2",
                            "start": 950021,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 950027,
                            "name": "t1",
                            "start": 950025,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns the difference, in seconds, from time `t1` to time `t2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.difftime\"])",
                    "finish": 950032,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 950000,
                    "type": "function",
                    "view": "function os.difftime(t2: integer, t1: integer)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 950020,
                "start": 950009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the difference, in seconds, from time `t1` to time `t2`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.difftime\"])",
        "name": "os.difftime",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1060027,
                            "name": "command",
                            "start": 1060020,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nPasses `command` to be executed by an operating system shell.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.execute\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
                    "finish": 1060032,
                    "returns": [
                        {
                            "name": "suc",
                            "type": "function.return",
                            "view": "boolean?"
                        },
                        {
                            "name": "exitcode",
                            "type": "function.return",
                            "view": "exitcode?"
                        },
                        {
                            "name": "code",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": 1060000,
                    "type": "function",
                    "view": "function os.execute(command?: string)\n  -> suc: boolean?\n  2. exitcode: exitcode?\n  3. code: integer?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 1060019,
                "start": 1060009,
                "type": "setfield"
            }
        ],
        "desc": "\nPasses `command` to be executed by an operating system shell.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.execute\"])\n\n\n```lua\nexitcode:\n    | \"exit\"\n    | \"signal\"\n```",
        "name": "os.execute",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1150021,
                            "name": "code",
                            "start": 1150017,
                            "type": "local",
                            "view": "(boolean|integer)?"
                        },
                        {
                            "finish": 1150028,
                            "name": "close",
                            "start": 1150023,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nCalls the ISO C function `exit` to terminate the host program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.exit\"])",
                    "finish": 1150033,
                    "start": 1150000,
                    "type": "function",
                    "view": "function os.exit(code?: boolean|integer, close?: boolean)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 1150016,
                "start": 1150009,
                "type": "setfield"
            }
        ],
        "desc": "\nCalls the ISO C function `exit` to terminate the host program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.exit\"])",
        "name": "os.exit",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1250026,
                            "name": "varname",
                            "start": 1250019,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nReturns the value of the process environment variable `varname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.getenv\"])",
                    "finish": 1250031,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1250000,
                    "type": "function",
                    "view": "function os.getenv(varname: string)\n  -> string?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 1250018,
                "start": 1250009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the value of the process environment variable `varname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.getenv\"])",
        "name": "os.getenv",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1350027,
                            "name": "filename",
                            "start": 1350019,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nDeletes the file with the given name.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.remove\"])",
                    "finish": 1350032,
                    "returns": [
                        {
                            "name": "suc",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1350000,
                    "type": "function",
                    "view": "function os.remove(filename: string)\n  -> suc: boolean\n  2. errmsg: string?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 1350018,
                "start": 1350009,
                "type": "setfield"
            }
        ],
        "desc": "\nDeletes the file with the given name.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.remove\"])",
        "name": "os.remove",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1460026,
                            "name": "oldname",
                            "start": 1460019,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 1460035,
                            "name": "newname",
                            "start": 1460028,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nRenames the file or directory named `oldname` to `newname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.rename\"])",
                    "finish": 1460040,
                    "returns": [
                        {
                            "name": "suc",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 1460000,
                    "type": "function",
                    "view": "function os.rename(oldname: string, newname: string)\n  -> suc: boolean\n  2. errmsg: string?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 1460018,
                "start": 1460009,
                "type": "setfield"
            }
        ],
        "desc": "\nRenames the file or directory named `oldname` to `newname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.rename\"])",
        "name": "os.rename",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1640028,
                            "name": "locale",
                            "start": 1640022,
                            "type": "local",
                            "view": "string|nil"
                        },
                        {
                            "finish": 1640038,
                            "name": "category",
                            "start": 1640030,
                            "type": "local",
                            "view": "localecategory?"
                        }
                    ],
                    "desc": "\nSets the current locale of the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.setlocale\"])\n\n\n```lua\ncategory:\n   -> \"all\"\n    | \"collate\"\n    | \"ctype\"\n    | \"monetary\"\n    | \"numeric\"\n    | \"time\"\n```",
                    "finish": 1640043,
                    "returns": [
                        {
                            "name": "localecategory",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1640000,
                    "type": "function",
                    "view": "function os.setlocale(locale: string|nil, category?: localecategory)\n  -> localecategory: string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 1640021,
                "start": 1640009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets the current locale of the program.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.setlocale\"])\n\n\n```lua\ncategory:\n   -> \"all\"\n    | \"collate\"\n    | \"ctype\"\n    | \"monetary\"\n    | \"numeric\"\n    | \"time\"\n```",
        "name": "os.setlocale",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1740021,
                            "name": "date",
                            "start": 1740017,
                            "type": "local",
                            "view": "osdate?"
                        }
                    ],
                    "desc": "\nReturns the current time when called without arguments, or a time representing the local date and time specified by the given table.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.time\"])",
                    "finish": 1740026,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1740000,
                    "type": "function",
                    "view": "function os.time(date?: osdate)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 1740016,
                "start": 1740009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the current time when called without arguments, or a time representing the local date and time specified by the given table.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.time\"])",
        "name": "os.time",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "\nReturns a string with a file name that can be used for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.tmpname\"])",
                    "finish": 1830025,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1830000,
                    "type": "function",
                    "view": "function os.tmpname()\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/os.lua",
                "finish": 1830019,
                "start": 1830009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string with a file name that can be used for a temporary file.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-os.tmpname\"])",
        "name": "os.tmpname",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 420012,
                    "start": 420010,
                    "type": "table",
                    "view": "packagelib"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 420007,
                "start": 420000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package\"])\n",
        "name": "package",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 540003,
                    "start": 490017,
                    "type": "string",
                    "view": "string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 490014,
                "start": 490000,
                "type": "setfield"
            }
        ],
        "desc": "\nA string describing some compile-time configurations for packages.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.config\"])\n",
        "name": "package.config",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 620020,
                    "start": 620018,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 620015,
                "start": 620000,
                "type": "setfield"
            }
        ],
        "desc": "\nA table used by `require` to control how to load modules.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.loaders\"])\n",
        "name": "package.loaders",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 720032,
                            "name": "libname",
                            "start": 720025,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 720042,
                            "name": "funcname",
                            "start": 720034,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nDynamically links the host program with the C library `libname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.loadlib\"])",
                    "finish": 720047,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 720000,
                    "type": "function",
                    "view": "function package.loadlib(libname: string, funcname: string)\n  -> any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 720024,
                "start": 720009,
                "type": "setfield"
            }
        ],
        "desc": "\nDynamically links the host program with the C library `libname`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.loadlib\"])",
        "name": "package.loadlib",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 800022,
                    "start": 800020,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 800017,
                "start": 800000,
                "type": "setfield"
            }
        ],
        "desc": "\nA table used by `require` to control how to load modules.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.searchers\"])\n",
        "name": "package.searchers",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 950032,
                            "name": "name",
                            "start": 950028,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 950038,
                            "name": "path",
                            "start": 950034,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 950043,
                            "name": "sep",
                            "start": 950040,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": 950048,
                            "name": "rep",
                            "start": 950045,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "\nSearches for the given `name` in the given `path`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.searchpath\"])",
                    "finish": 950053,
                    "returns": [
                        {
                            "name": "filename",
                            "type": "function.return",
                            "view": "string?"
                        },
                        {
                            "name": "errmsg",
                            "type": "function.return",
                            "view": "string?"
                        }
                    ],
                    "start": 950000,
                    "type": "function",
                    "view": "function package.searchpath(name: string, path: string, sep?: string, rep?: string)\n  -> filename: string?\n  2. errmsg: string?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 950027,
                "start": 950009,
                "type": "setfield"
            }
        ],
        "desc": "\nSearches for the given `name` in the given `path`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.searchpath\"])",
        "name": "package.searchpath",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1040030,
                            "name": "module",
                            "start": 1040024,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nSets a metatable for `module` with its `__index` field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to function `module` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.seeall\"])",
                    "finish": 1040035,
                    "start": 1040000,
                    "type": "function",
                    "view": "function package.seeall(module: table)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 1040023,
                "start": 1040009,
                "type": "setfield"
            }
        ],
        "desc": "\nSets a metatable for `module` with its `__index` field referring to the global environment, so that this module inherits values from the global environment. To be used as an option to function `module` .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-package.seeall\"])",
        "name": "package.seeall",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2070016,
                            "name": "t",
                            "start": 2070015,
                            "type": "local",
                            "view": "<T:table>"
                        }
                    ],
                    "desc": "\nIf `t` has a metamethod `__pairs`, calls it with t as argument and returns the first three results from the call.\n\nOtherwise, returns three values: the [next](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-next\"]) function, the table `t`, and `nil`, so that the construction\n```lua\n    for k,v in pairs(t) do body end\n```\nwill iterate over all keyโvalue pairs of table `t`.\n\nSee function [next](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-next\"]) for the caveats of modifying the table during its traversal.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-pairs\"])",
                    "finish": 2070021,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun(table: table<<K>, <V>>, index?: <K>):<K>, <V>"
                        },
                        {
                            "type": "function.return",
                            "view": "<T:table>"
                        }
                    ],
                    "start": 2070000,
                    "type": "function",
                    "view": "function pairs(t: <T:table>)\n  -> fun(table: table<<K>, <V>>, index?: <K>):<K>, <V>\n  2. <T:table>"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2070014,
                "start": 2070009,
                "type": "setglobal"
            }
        ],
        "desc": "\nIf `t` has a metamethod `__pairs`, calls it with t as argument and returns the first three results from the call.\n\nOtherwise, returns three values: the [next](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-next\"]) function, the table `t`, and `nil`, so that the construction\n```lua\n    for k,v in pairs(t) do body end\n```\nwill iterate over all keyโvalue pairs of table `t`.\n\nSee function [next](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-next\"]) for the caveats of modifying the table during its traversal.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-pairs\"])",
        "name": "pairs",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2200016,
                            "name": "f",
                            "start": 2200015,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 2200022,
                            "name": "arg1",
                            "start": 2200018,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2200027,
                            "start": 2200024,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nCalls the function `f` with the given arguments in *protected mode*. This means that any error inside `f` is not propagated; instead, `pcall` catches the error and returns a status code. Its first result is the status code (a boolean), which is true if the call succeeds without errors. In such case, `pcall` also returns all results from the call, after this first result. In case of any error, `pcall` returns `false` plus the error object.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-pcall\"])",
                    "finish": 2200032,
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "result",
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 2200000,
                    "type": "function",
                    "view": "function pcall(f: fun(...any):...unknown, arg1?: any, ...any)\n  -> success: boolean\n  2. result: any\n  3. ...any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2200014,
                "start": 2200009,
                "type": "setglobal"
            }
        ],
        "desc": "\nCalls the function `f` with the given arguments in *protected mode*. This means that any error inside `f` is not propagated; instead, `pcall` catches the error and returns a status code. Its first result is the status code (a boolean), which is true if the call succeeds without errors. In such case, `pcall` also returns all results from the call, after this first result. In case of any error, `pcall` returns `false` plus the error object.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-pcall\"])",
        "name": "pcall",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2290018,
                            "start": 2290015,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nReceives any number of arguments and prints their values to `stdout`, converting each argument to a string following the same rules of [tostring](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-tostring\"]).\nThe function print is not intended for formatted output, but only as a quick way to show a value, for instance for debugging. For complete control over the output, use [string.format](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"]) and [io.write](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-io.write\"]).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-print\"])",
                    "finish": 2290023,
                    "start": 2290000,
                    "type": "function",
                    "view": "function print(...any)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2290014,
                "start": 2290009,
                "type": "setglobal"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 250019,
                            "name": "data",
                            "start": 250015,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "Prints a value to the lua console",
                    "finish": 260003,
                    "start": 250000,
                    "type": "function",
                    "view": "function print(data: any)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_tjk.lua",
                "finish": 250014,
                "start": 250009,
                "type": "setglobal"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 230019,
                            "name": "data",
                            "start": 230015,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "Prints a value to the lua console",
                    "finish": 240003,
                    "start": 230000,
                    "type": "function",
                    "view": "function print(data: any)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 230014,
                "start": 230009,
                "type": "setglobal"
            }
        ],
        "desc": "Prints a value to the lua console",
        "name": "print",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2400020,
                            "name": "v1",
                            "start": 2400018,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2400024,
                            "name": "v2",
                            "start": 2400022,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nChecks whether v1 is equal to v2, without invoking the `__eq` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawequal\"])",
                    "finish": 2400029,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": 2400000,
                    "type": "function",
                    "view": "function rawequal(v1: any, v2: any)\n  -> boolean"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2400017,
                "start": 2400009,
                "type": "setglobal"
            }
        ],
        "desc": "\nChecks whether v1 is equal to v2, without invoking the `__eq` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawequal\"])",
        "name": "rawequal",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2510021,
                            "name": "table",
                            "start": 2510016,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 2510028,
                            "name": "index",
                            "start": 2510023,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nGets the real value of `table[index]`, without invoking the `__index` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawget\"])",
                    "finish": 2510033,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 2510000,
                    "type": "function",
                    "view": "function rawget(table: table, index: any)\n  -> any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2510015,
                "start": 2510009,
                "type": "setglobal"
            }
        ],
        "desc": "\nGets the real value of `table[index]`, without invoking the `__index` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawget\"])",
        "name": "rawget",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2610017,
                            "name": "v",
                            "start": 2610016,
                            "type": "local",
                            "view": "string|table"
                        }
                    ],
                    "desc": "\nReturns the length of the object `v`, without invoking the `__len` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawlen\"])",
                    "finish": 2610022,
                    "returns": [
                        {
                            "name": "len",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 2610000,
                    "type": "function",
                    "view": "function rawlen(v: string|table)\n  -> len: integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2610015,
                "start": 2610009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReturns the length of the object `v`, without invoking the `__len` metamethod.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawlen\"])",
        "name": "rawlen",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2740021,
                            "name": "table",
                            "start": 2740016,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 2740028,
                            "name": "index",
                            "start": 2740023,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 2740035,
                            "name": "value",
                            "start": 2740030,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nSets the real value of `table[index]` to `value`, without using the `__newindex` metavalue. `table` must be a table, `index` any value different from `nil` and `NaN`, and `value` any Lua value.\nThis function returns `table`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawset\"])",
                    "finish": 2740040,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 2740000,
                    "type": "function",
                    "view": "function rawset(table: table, index: any, value: any)\n  -> table"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2740015,
                "start": 2740009,
                "type": "setglobal"
            }
        ],
        "desc": "\nSets the real value of `table[index]` to `value`, without using the `__newindex` metavalue. `table` must be a table, `index` any value different from `nil` and `NaN`, and `value` any Lua value.\nThis function returns `table`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-rawset\"])",
        "name": "rawset",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 100024,
                            "name": "modname",
                            "start": 100017,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nLoads the given module, returns any value returned by the searcher(`true` when `nil`). Besides that value, also returns as a second result the loader data returned by the searcher, which indicates how `require` found the module. (For instance, if the module came from a file, this loader data is the file path.)\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-require\"])",
                    "finish": 100029,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        },
                        {
                            "name": "loaderdata",
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": 100000,
                    "type": "function",
                    "view": "function require(modname: string)\n  -> unknown\n  2. loaderdata: unknown"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/package.lua",
                "finish": 100016,
                "start": 100009,
                "type": "setglobal"
            }
        ],
        "desc": "\nLoads the given module, returns any value returned by the searcher(`true` when `nil`). Besides that value, also returns as a second result the loader data returned by the searcher, which indicates how `require` found the module. (For instance, if the module came from a file, this loader data is the file path.)\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-require\"])",
        "name": "require",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 150014,
                    "start": 150012,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_tjk.lua",
                "finish": 150009,
                "start": 150000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 140014,
                    "start": 140012,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 140009,
                "start": 140000,
                "type": "setglobal"
            }
        ],
        "name": "savestate",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2840021,
                            "name": "index",
                            "start": 2840016,
                            "type": "local",
                            "view": "integer|\"#\""
                        },
                        {
                            "finish": 2840026,
                            "start": 2840023,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nIf `index` is a number, returns all arguments after argument number `index`; a negative number indexes from the end (`-1` is the last argument). Otherwise, `index` must be the string `\"#\"`, and `select` returns the total number of extra arguments it received.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-select\"])\n\n\n```lua\nindex:\n    | \"#\"\n```",
                    "finish": 2840031,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 2840000,
                    "type": "function",
                    "view": "function select(index: integer|\"#\", ...any)\n  -> any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2840015,
                "start": 2840009,
                "type": "setglobal"
            }
        ],
        "desc": "\nIf `index` is a number, returns all arguments after argument number `index`; a negative number indexes from the end (`-1` is the last argument). Otherwise, `index` must be the string `\"#\"`, and `select` returns the total number of extra arguments it received.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-select\"])\n\n\n```lua\nindex:\n    | \"#\"\n```",
        "name": "select",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2950018,
                            "name": "f",
                            "start": 2950017,
                            "type": "local",
                            "view": "fun(...any):...integer|unknown"
                        },
                        {
                            "finish": 2950025,
                            "name": "table",
                            "start": 2950020,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nSets the environment to be used by the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-setfenv\"])",
                    "finish": 2950030,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "function"
                        }
                    ],
                    "start": 2950000,
                    "type": "function",
                    "view": "function setfenv(f: fun(...any):...integer|unknown, table: table)\n  -> function"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 2950016,
                "start": 2950009,
                "type": "setglobal"
            }
        ],
        "desc": "\nSets the environment to be used by the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-setfenv\"])",
        "name": "setfenv",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3100027,
                            "name": "table",
                            "start": 3100022,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 3100038,
                            "name": "metatable",
                            "start": 3100029,
                            "type": "local",
                            "view": "table?"
                        }
                    ],
                    "desc": "\nSets the metatable for the given table. If `metatable` is `nil`, removes the metatable of the given table. If the original metatable has a `__metatable` field, raises an error.\n\nThis function returns `table`.\n\nTo change the metatable of other types from Lua code, you must use the debug library ([ยง6.10](command:extension.lua.doc?[\"en-us/54/manual.html/6.10\"])).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-setmetatable\"])",
                    "finish": 3100043,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 3100000,
                    "type": "function",
                    "view": "function setmetatable(table: table, metatable?: table)\n  -> table"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 3100021,
                "start": 3100009,
                "type": "setglobal"
            }
        ],
        "desc": "\nSets the metatable for the given table. If `metatable` is `nil`, removes the metatable of the given table. If the original metatable has a `__metatable` field, raises an error.\n\nThis function returns `table`.\n\nTo change the metatable of other types from Lua code, you must use the debug library ([ยง6.10](command:extension.lua.doc?[\"en-us/54/manual.html/6.10\"])).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-setmetatable\"])",
        "name": "setmetatable",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Stops script execution",
                    "finish": 300003,
                    "start": 290000,
                    "type": "function",
                    "view": "function stop()"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_tjk.lua",
                "finish": 290013,
                "start": 290009,
                "type": "setglobal"
            },
            {
                "extends": {
                    "args": [],
                    "desc": "Stops script execution",
                    "finish": 280003,
                    "start": 270000,
                    "type": "function",
                    "view": "function stop()"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 270013,
                "start": 270009,
                "type": "setglobal"
            }
        ],
        "desc": "Stops script execution",
        "name": "stop",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 80011,
                    "start": 80009,
                    "type": "table",
                    "view": "stringlib"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 80006,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string\"])\n",
        "name": "string",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 200022,
                            "name": "s",
                            "start": 200021,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 200025,
                            "name": "i",
                            "start": 200024,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 200028,
                            "name": "j",
                            "start": 200027,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.byte\"])",
                    "finish": 200033,
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 200000,
                    "type": "function",
                    "view": "function string.byte(s: string|number, i?: integer, j?: integer)\n  -> ...integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 200020,
                "start": 200009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the internal numeric codes of the characters `s[i], s[i+1], ..., s[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.byte\"])",
        "name": "string.byte",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 310025,
                            "name": "byte",
                            "start": 310021,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 310030,
                            "start": 310027,
                            "type": "...",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.char\"])",
                    "finish": 310035,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 310000,
                    "type": "function",
                    "view": "function string.char(byte: integer, ...integer)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 310020,
                "start": 310009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string with length equal to the number of arguments, in which each character has the internal numeric code equal to its corresponding argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.char\"])",
        "name": "string.char",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 420022,
                            "name": "f",
                            "start": 420021,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 420029,
                            "name": "strip",
                            "start": 420024,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.dump\"])",
                    "finish": 420034,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 420000,
                    "type": "function",
                    "view": "function string.dump(f: fun(...any):...unknown, strip?: boolean)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 420020,
                "start": 420009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string containing a binary representation (a *binary chunk*) of the given function.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.dump\"])",
        "name": "string.dump",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 570022,
                            "name": "s",
                            "start": 570021,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 570031,
                            "name": "pattern",
                            "start": 570024,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 570037,
                            "name": "init",
                            "start": 570033,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 570044,
                            "name": "plain",
                            "start": 570039,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nLooks for the first match of `pattern` (see [ยง6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.find\"])\n\n@*return* `start`\n\n@*return* `end`\n\n@*return* `...` โ captured",
                    "finish": 570049,
                    "returns": [
                        {
                            "name": "start",
                            "type": "function.return",
                            "view": "integer"
                        },
                        {
                            "name": "end",
                            "type": "function.return",
                            "view": "integer"
                        },
                        {
                            "desc": "captured",
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 570000,
                    "type": "function",
                    "view": "function string.find(s: string|number, pattern: string|number, init?: integer, plain?: boolean)\n  -> start: integer\n  2. end: integer\n  3. ...any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 570020,
                "start": 570009,
                "type": "setfield"
            }
        ],
        "desc": "\nLooks for the first match of `pattern` (see [ยง6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.find\"])\n\n@*return* `start`\n\n@*return* `end`\n\n@*return* `...` โ captured",
        "name": "string.find",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 680024,
                            "name": "s",
                            "start": 680023,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 680029,
                            "start": 680026,
                            "type": "...",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"])",
                    "finish": 680034,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 680000,
                    "type": "function",
                    "view": "function string.format(s: string|number, ...any)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 680022,
                "start": 680009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a formatted version of its variable number of arguments following the description given in its first argument.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"])",
        "name": "string.format",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 890024,
                            "name": "s",
                            "start": 890023,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 890033,
                            "name": "pattern",
                            "start": 890026,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 890039,
                            "name": "init",
                            "start": 890035,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [ยง6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gmatch\"])",
                    "finish": 890044,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun():string, ...unknown"
                        }
                    ],
                    "start": 890000,
                    "type": "function",
                    "view": "function string.gmatch(s: string|number, pattern: string|number, init?: integer)\n  -> fun():string, ...unknown"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 890022,
                "start": 890009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns an iterator function that, each time it is called, returns the next captures from `pattern` (see [ยง6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) over the string s.\n\nAs an example, the following loop will iterate over all the words from string s, printing one per line:\n```lua\n    s =\n\"hello world from Lua\"\n    for w in string.gmatch(s, \"%a+\") do\n        print(w)\n    end\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gmatch\"])",
        "name": "string.gmatch",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1030022,
                            "name": "s",
                            "start": 1030021,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1030031,
                            "name": "pattern",
                            "start": 1030024,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1030037,
                            "name": "repl",
                            "start": 1030033,
                            "type": "local",
                            "view": "string|number|function|table"
                        },
                        {
                            "finish": 1030040,
                            "name": "n",
                            "start": 1030039,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [ยง6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) have been replaced by a replacement string specified by `repl`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gsub\"])",
                    "finish": 1030045,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        },
                        {
                            "name": "count",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1030000,
                    "type": "function",
                    "view": "function string.gsub(s: string|number, pattern: string|number, repl: string|number|function|table, n?: integer)\n  -> string\n  2. count: integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1030020,
                "start": 1030009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a copy of s in which all (or the first `n`, if given) occurrences of the `pattern` (see [ยง6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) have been replaced by a replacement string specified by `repl`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.gsub\"])",
        "name": "string.gsub",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1130021,
                            "name": "s",
                            "start": 1130020,
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns its length.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.len\"])",
                    "finish": 1130026,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1130000,
                    "type": "function",
                    "view": "function string.len(s: string|number)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1130019,
                "start": 1130009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns its length.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.len\"])",
        "name": "string.len",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1230023,
                            "name": "s",
                            "start": 1230022,
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.lower\"])",
                    "finish": 1230028,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1230000,
                    "type": "function",
                    "view": "function string.lower(s: string|number)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1230021,
                "start": 1230009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a copy of this string with all uppercase letters changed to lowercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.lower\"])",
        "name": "string.lower",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1350023,
                            "name": "s",
                            "start": 1350022,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1350032,
                            "name": "pattern",
                            "start": 1350025,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1350038,
                            "name": "init",
                            "start": 1350034,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nLooks for the first match of `pattern` (see [ยง6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.match\"])",
                    "finish": 1350043,
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 1350000,
                    "type": "function",
                    "view": "function string.match(s: string|number, pattern: string|number, init?: integer)\n  -> ...any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1350021,
                "start": 1350009,
                "type": "setfield"
            }
        ],
        "desc": "\nLooks for the first match of `pattern` (see [ยง6.4.1](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.1\"])) in the string.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.match\"])",
        "name": "string.match",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1480024,
                            "name": "fmt",
                            "start": 1480021,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 1480028,
                            "name": "v1",
                            "start": 1480026,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1480032,
                            "name": "v2",
                            "start": 1480030,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1480037,
                            "start": 1480034,
                            "type": "...",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [ยง6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.pack\"])",
                    "finish": 1480042,
                    "returns": [
                        {
                            "name": "binary",
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1480000,
                    "type": "function",
                    "view": "function string.pack(fmt: string, v1: string|number, v2: any, ...string|number)\n  -> binary: string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1480020,
                "start": 1480009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a binary string containing the values `v1`, `v2`, etc. packed (that is, serialized in binary form) according to the format string `fmt` (see [ยง6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.pack\"])",
        "name": "string.pack",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1590028,
                            "name": "fmt",
                            "start": 1590025,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [ยง6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.packsize\"])",
                    "finish": 1590033,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1590000,
                    "type": "function",
                    "view": "function string.packsize(fmt: string)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1590024,
                "start": 1590009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the size of a string resulting from `string.pack` with the given format string `fmt` (see [ยง6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.packsize\"])",
        "name": "string.packsize",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1710021,
                            "name": "s",
                            "start": 1710020,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1710024,
                            "name": "n",
                            "start": 1710023,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 1710029,
                            "name": "sep",
                            "start": 1710026,
                            "type": "local",
                            "view": "(string|number)?"
                        }
                    ],
                    "desc": "\nReturns a string that is the concatenation of `n` copies of the string `s` separated by the string `sep`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.rep\"])",
                    "finish": 1710034,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1710000,
                    "type": "function",
                    "view": "function string.rep(s: string|number, n: integer, sep?: string|number)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1710019,
                "start": 1710009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string that is the concatenation of `n` copies of the string `s` separated by the string `sep`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.rep\"])",
        "name": "string.rep",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1810025,
                            "name": "s",
                            "start": 1810024,
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.reverse\"])",
                    "finish": 1810030,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1810000,
                    "type": "function",
                    "view": "function string.reverse(s: string|number)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1810023,
                "start": 1810009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a string that is the string `s` reversed.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.reverse\"])",
        "name": "string.reverse",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1930021,
                            "name": "s",
                            "start": 1930020,
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": 1930024,
                            "name": "i",
                            "start": 1930023,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 1930027,
                            "name": "j",
                            "start": 1930026,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.sub\"])",
                    "finish": 1930032,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 1930000,
                    "type": "function",
                    "view": "function string.sub(s: string|number, i: integer, j?: integer)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 1930019,
                "start": 1930009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the substring of the string that starts at `i` and continues until `j`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.sub\"])",
        "name": "string.sub",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2070026,
                            "name": "fmt",
                            "start": 2070023,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 2070029,
                            "name": "s",
                            "start": 2070028,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 2070034,
                            "name": "pos",
                            "start": 2070031,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the values packed in string according to the format string `fmt` (see [ยง6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.unpack\"])",
                    "finish": 2070039,
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "name": "offset",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 2070000,
                    "type": "function",
                    "view": "function string.unpack(fmt: string, s: string, pos?: integer)\n  -> ...any\n  2. offset: integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 2070022,
                "start": 2070009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the values packed in string according to the format string `fmt` (see [ยง6.4.2](command:extension.lua.doc?[\"en-us/54/manual.html/6.4.2\"])) .\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.unpack\"])",
        "name": "string.unpack",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2170023,
                            "name": "s",
                            "start": 2170022,
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "desc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.upper\"])",
                    "finish": 2170028,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 2170000,
                    "type": "function",
                    "view": "function string.upper(s: string|number)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/string.lua",
                "finish": 2170021,
                "start": 2170009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a copy of this string with all lowercase letters changed to uppercase.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.upper\"])",
        "name": "string.upper",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 80010,
                    "start": 80008,
                    "type": "table",
                    "view": "tablelib"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 80005,
                "start": 80000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table\"])\n",
        "name": "table",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 210026,
                            "name": "list",
                            "start": 210022,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 210031,
                            "name": "sep",
                            "start": 210028,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "finish": 210034,
                            "name": "i",
                            "start": 210033,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 210037,
                            "name": "j",
                            "start": 210036,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nGiven a list where all elements are strings or numbers, returns the string `list[i]..sep..list[i+1] ยทยทยท sep..list[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.concat\"])",
                    "finish": 210042,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 210000,
                    "type": "function",
                    "view": "function table.concat(list: table, sep?: string, i?: integer, j?: integer)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 210021,
                "start": 210009,
                "type": "setfield"
            }
        ],
        "desc": "\nGiven a list where all elements are strings or numbers, returns the string `list[i]..sep..list[i+1] ยทยทยท sep..list[j]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.concat\"])",
        "name": "table.concat",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1250027,
                            "name": "list",
                            "start": 1250023,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1250037,
                            "name": "callback",
                            "start": 1250029,
                            "type": "local",
                            "view": "fun(key: string, value: any):<T>|nil"
                        }
                    ],
                    "desc": "\nExecutes the given f over all elements of table. For each element, f is called with the index and respective value as arguments. If f returns a non-nil value, then the loop is broken, and this value is returned as the final value of foreach.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.foreach\"])",
                    "finish": 1250042,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T>|nil"
                        }
                    ],
                    "start": 1250000,
                    "type": "function",
                    "view": "function table.foreach(list: any, callback: fun(key: string, value: any):<T>|nil)\n  -> <T>|nil"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 1250022,
                "start": 1250009,
                "type": "setfield"
            }
        ],
        "desc": "\nExecutes the given f over all elements of table. For each element, f is called with the index and respective value as arguments. If f returns a non-nil value, then the loop is broken, and this value is returned as the final value of foreach.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.foreach\"])",
        "name": "table.foreach",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1380028,
                            "name": "list",
                            "start": 1380024,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 1380038,
                            "name": "callback",
                            "start": 1380030,
                            "type": "local",
                            "view": "fun(key: string, value: any):<T>|nil"
                        }
                    ],
                    "desc": "\nExecutes the given f over the numerical indices of table. For each index, f is called with the index and respective value as arguments. Indices are visited in sequential order, from 1 to n, where n is the size of the table. If f returns a non-nil value, then the loop is broken and this value is returned as the result of foreachi.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.foreachi\"])",
                    "finish": 1380043,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "<T>|nil"
                        }
                    ],
                    "start": 1380000,
                    "type": "function",
                    "view": "function table.foreachi(list: any, callback: fun(key: string, value: any):<T>|nil)\n  -> <T>|nil"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 1380023,
                "start": 1380009,
                "type": "setfield"
            }
        ],
        "desc": "\nExecutes the given f over the numerical indices of table. For each index, f is called with the index and respective value as arguments. Indices are visited in sequential order, from 1 to n, where n is the size of the table. If f returns a non-nil value, then the loop is broken and this value is returned as the result of foreachi.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.foreachi\"])",
        "name": "table.foreachi",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1510024,
                            "name": "list",
                            "start": 1510020,
                            "type": "local",
                            "view": "<T>[]"
                        }
                    ],
                    "desc": "\nReturns the number of elements in the table. This function is equivalent to `#list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.getn\"])",
                    "finish": 1510029,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 1510000,
                    "type": "function",
                    "view": "function table.getn(list: <T>[])\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 1510019,
                "start": 1510009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the number of elements in the table. This function is equivalent to `#list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.getn\"])",
        "name": "table.getn",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 320026,
                            "name": "list",
                            "start": 320022,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 320031,
                            "name": "pos",
                            "start": 320028,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 320038,
                            "name": "value",
                            "start": 320033,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nInserts element `value` at position `pos` in `list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.insert\"])",
                    "finish": 320043,
                    "start": 320000,
                    "type": "function",
                    "view": "function table.insert(list: table, pos: integer, value: any)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 320021,
                "start": 320009,
                "type": "setfield"
            }
        ],
        "desc": "\nInserts element `value` at position `pos` in `list`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.insert\"])",
        "name": "table.insert",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 430025,
                            "name": "table",
                            "start": 430020,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "\nReturns the largest positive numerical index of the given table, or zero if the table has no positive numerical indices.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.maxn\"])",
                    "finish": 430030,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 430000,
                    "type": "function",
                    "view": "function table.maxn(table: table)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 430019,
                "start": 430009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the largest positive numerical index of the given table, or zero if the table has no positive numerical indices.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.maxn\"])",
        "name": "table.maxn",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 630022,
                            "name": "a1",
                            "start": 630020,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 630025,
                            "name": "f",
                            "start": 630024,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 630028,
                            "name": "e",
                            "start": 630027,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 630031,
                            "name": "t",
                            "start": 630030,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 630035,
                            "name": "a2",
                            "start": 630033,
                            "type": "local",
                            "view": "table?"
                        }
                    ],
                    "desc": "\nMoves elements from table `a1` to table `a2`.\n```lua\na2[t],ยทยทยท =\na1[f],ยทยทยท,a1[e]\nreturn a2\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.move\"])",
                    "finish": 630040,
                    "returns": [
                        {
                            "name": "a2",
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 630000,
                    "type": "function",
                    "view": "function table.move(a1: table, f: integer, e: integer, t: integer, a2?: table)\n  -> a2: table"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 630019,
                "start": 630009,
                "type": "setfield"
            }
        ],
        "desc": "\nMoves elements from table `a1` to table `a2`.\n```lua\na2[t],ยทยทยท =\na1[f],ยทยทยท,a1[e]\nreturn a2\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.move\"])",
        "name": "table.move",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 730023,
                            "start": 730020,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nReturns a new table with all arguments stored into keys `1`, `2`, etc. and with a field `\"n\"` with the total number of arguments.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.pack\"])",
                    "finish": 730028,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "table"
                        }
                    ],
                    "start": 730000,
                    "type": "function",
                    "view": "function table.pack(...any)\n  -> table"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 730019,
                "start": 730009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns a new table with all arguments stored into keys `1`, `2`, etc. and with a field `\"n\"` with the total number of arguments.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.pack\"])",
        "name": "table.pack",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 830026,
                            "name": "list",
                            "start": 830022,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 830031,
                            "name": "pos",
                            "start": 830028,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nRemoves from `list` the element at position `pos`, returning the value of the removed element.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.remove\"])",
                    "finish": 830036,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 830000,
                    "type": "function",
                    "view": "function table.remove(list: table, pos?: integer)\n  -> any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 830021,
                "start": 830009,
                "type": "setfield"
            }
        ],
        "desc": "\nRemoves from `list` the element at position `pos`, returning the value of the removed element.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.remove\"])",
        "name": "table.remove",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 930024,
                            "name": "list",
                            "start": 930020,
                            "type": "local",
                            "view": "<T>[]"
                        },
                        {
                            "finish": 930030,
                            "name": "comp",
                            "start": 930026,
                            "type": "local",
                            "view": "(fun(a: <T>, b: <T>):boolean)?"
                        }
                    ],
                    "desc": "\nSorts list elements in a given order, *in-place*, from `list[1]` to `list[#list]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.sort\"])",
                    "finish": 930035,
                    "start": 930000,
                    "type": "function",
                    "view": "function table.sort(list: <T>[], comp?: fun(a: <T>, b: <T>):boolean)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 930019,
                "start": 930009,
                "type": "setfield"
            }
        ],
        "desc": "\nSorts list elements in a given order, *in-place*, from `list[1]` to `list[#list]`.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.sort\"])",
        "name": "table.sort",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 1120026,
                            "name": "list",
                            "start": 1120022,
                            "type": "local",
                            "view": "<T>[]"
                        },
                        {
                            "finish": 1120029,
                            "name": "i",
                            "start": 1120028,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 1120032,
                            "name": "j",
                            "start": 1120031,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the elements from the given list. This function is equivalent to\n```lua\n    return list[i], list[i+1], ยทยทยท, list[j]\n```\nBy default, `i` is `1` and `j` is `#list`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.unpack\"])",
                    "finish": 1120037,
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "<T>"
                        }
                    ],
                    "start": 1120000,
                    "type": "function",
                    "view": "function table.unpack(list: <T>[], i?: integer, j?: integer)\n  -> ...<T>"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/table.lua",
                "finish": 1120021,
                "start": 1120009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the elements from the given list. This function is equivalent to\n```lua\n    return list[i], list[i+1], ยทยทยท, list[j]\n```\nBy default, `i` is `1` and `j` is `#list`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-table.unpack\"])",
        "name": "table.unpack",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3240019,
                            "name": "e",
                            "start": 3240018,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nWhen called with no `base`, `tonumber` tries to convert its argument to a number. If the argument is already a number or a string convertible to a number, then `tonumber` returns this number; otherwise, it returns `fail`.\n\nThe conversion of strings can result in integers or floats, according to the lexical conventions of Lua (see [ยง3.1](command:extension.lua.doc?[\"en-us/54/manual.html/3.1\"])). The string may have leading and trailing spaces and a sign.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-tonumber\"])",
                    "finish": 3240024,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number?"
                        }
                    ],
                    "start": 3240000,
                    "type": "function",
                    "view": "function tonumber(e: any)\n  -> number?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 3240017,
                "start": 3240009,
                "type": "setglobal"
            }
        ],
        "desc": "\nWhen called with no `base`, `tonumber` tries to convert its argument to a number. If the argument is already a number or a string convertible to a number, then `tonumber` returns this number; otherwise, it returns `fail`.\n\nThe conversion of strings can result in integers or floats, according to the lexical conventions of Lua (see [ยง3.1](command:extension.lua.doc?[\"en-us/54/manual.html/3.1\"])). The string may have leading and trailing spaces and a sign.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-tonumber\"])",
        "name": "tonumber",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3390019,
                            "name": "v",
                            "start": 3390018,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReceives a value of any type and converts it to a string in a human-readable format.\n\nIf the metatable of `v` has a `__tostring` field, then `tostring` calls the corresponding value with `v` as argument, and uses the result of the call as its result. Otherwise, if the metatable of `v` has a `__name` field with a string value, `tostring` may use that string in its final result.\n\nFor complete control of how numbers are converted, use [string.format](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"]).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-tostring\"])",
                    "finish": 3390024,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 3390000,
                    "type": "function",
                    "view": "function tostring(v: any)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 3390017,
                "start": 3390009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReceives a value of any type and converts it to a string in a human-readable format.\n\nIf the metatable of `v` has a `__tostring` field, then `tostring` calls the corresponding value with `v` as argument, and uses the result of the call as its result. Otherwise, if the metatable of `v` has a `__name` field with a string value, `tostring` may use that string in its final result.\n\nFor complete control of how numbers are converted, use [string.format](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-string.format\"]).\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-tostring\"])",
        "name": "tostring",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3600015,
                            "name": "v",
                            "start": 3600014,
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "desc": "\nReturns the type of its only argument, coded as a string. The possible results of this function are `\"nil\"` (a string, not the value `nil`), `\"number\"`, `\"string\"`, `\"boolean\"`, `\"table\"`, `\"function\"`, `\"thread\"`, and `\"userdata\"`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-type\"])\n\n\n```lua\ntype:\n    | \"nil\"\n    | \"number\"\n    | \"string\"\n    | \"boolean\"\n    | \"table\"\n    | \"function\"\n    | \"thread\"\n    | \"userdata\"\n```",
                    "finish": 3600020,
                    "returns": [
                        {
                            "name": "type",
                            "type": "function.return",
                            "view": "type"
                        }
                    ],
                    "start": 3600000,
                    "type": "function",
                    "view": "function type(v: any)\n  -> type: type"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 3600013,
                "start": 3600009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReturns the type of its only argument, coded as a string. The possible results of this function are `\"nil\"` (a string, not the value `nil`), `\"number\"`, `\"string\"`, `\"boolean\"`, `\"table\"`, `\"function\"`, `\"thread\"`, and `\"userdata\"`.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-type\"])\n\n\n```lua\ntype:\n    | \"nil\"\n    | \"number\"\n    | \"string\"\n    | \"boolean\"\n    | \"table\"\n    | \"function\"\n    | \"thread\"\n    | \"userdata\"\n```",
        "name": "type",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4070020,
                            "name": "list",
                            "start": 4070016,
                            "type": "local",
                            "view": "<T>[]"
                        },
                        {
                            "finish": 4070023,
                            "name": "i",
                            "start": 4070022,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 4070026,
                            "name": "j",
                            "start": 4070025,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the elements from the given `list`. This function is equivalent to\n```lua\n    return list[i], list[i+1], ยทยทยท, list[j]\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-unpack\"])",
                    "finish": 4070031,
                    "returns": [
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "<T>"
                        }
                    ],
                    "start": 4070000,
                    "type": "function",
                    "view": "function unpack(list: <T>[], i?: integer, j?: integer)\n  -> ...<T>"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 4070015,
                "start": 4070009,
                "type": "setglobal"
            }
        ],
        "desc": "\nReturns the elements from the given `list`. This function is equivalent to\n```lua\n    return list[i], list[i+1], ยทยทยท, list[j]\n```\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-unpack\"])",
        "name": "unpack",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 150009,
                    "start": 150007,
                    "type": "table",
                    "view": "utf8lib"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": 150004,
                "start": 150000,
                "type": "setglobal"
            }
        ],
        "desc": "\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8\"])\n",
        "name": "utf8",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 260023,
                            "name": "code",
                            "start": 260019,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 260028,
                            "start": 260025,
                            "type": "...",
                            "view": "integer"
                        }
                    ],
                    "desc": "\nReceives zero or more integers, converts each one to its corresponding UTF-8 byte sequence and returns a string with the concatenation of all these sequences.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.char\"])",
                    "finish": 260033,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": 260000,
                    "type": "function",
                    "view": "function utf8.char(code: integer, ...integer)\n  -> string"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": 260018,
                "start": 260009,
                "type": "setfield"
            }
        ],
        "desc": "\nReceives zero or more integers, converts each one to its corresponding UTF-8 byte sequence and returns a string with the concatenation of all these sequences.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.char\"])",
        "name": "utf8.char",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 570025,
                            "name": "s",
                            "start": 570024,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 570028,
                            "name": "i",
                            "start": 570027,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 570031,
                            "name": "j",
                            "start": 570030,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 570036,
                            "name": "lax",
                            "start": 570033,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nReturns the codepoints (as integers) from all characters in `s` that start between byte position `i` and `j` (both included).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.codepoint\"])",
                    "finish": 570041,
                    "returns": [
                        {
                            "name": "code",
                            "type": "function.return",
                            "view": "integer"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 570000,
                    "type": "function",
                    "view": "function utf8.codepoint(s: string, i?: integer, j?: integer, lax?: boolean)\n  -> code: integer\n  2. ...integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": 570023,
                "start": 570009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the codepoints (as integers) from all characters in `s` that start between byte position `i` and `j` (both included).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.codepoint\"])",
        "name": "utf8.codepoint",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 430021,
                            "name": "s",
                            "start": 430020,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 430026,
                            "name": "lax",
                            "start": 430023,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nReturns values so that the construction\n```lua\nfor p, c in utf8.codes(s) do\n    body\nend\n```\nwill iterate over all UTF-8 characters in string s, with p being the position (in bytes) and c the code point of each character. It raises an error if it meets any invalid byte sequence.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.codes\"])",
                    "finish": 430031,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "fun(s: string, p: integer):integer, integer"
                        }
                    ],
                    "start": 430000,
                    "type": "function",
                    "view": "function utf8.codes(s: string, lax?: boolean)\n  -> fun(s: string, p: integer):integer, integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": 430019,
                "start": 430009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns values so that the construction\n```lua\nfor p, c in utf8.codes(s) do\n    body\nend\n```\nwill iterate over all UTF-8 characters in string s, with p being the position (in bytes) and c the code point of each character. It raises an error if it meets any invalid byte sequence.\n\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.codes\"])",
        "name": "utf8.codes",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 710019,
                            "name": "s",
                            "start": 710018,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 710022,
                            "name": "i",
                            "start": 710021,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 710025,
                            "name": "j",
                            "start": 710024,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "finish": 710030,
                            "name": "lax",
                            "start": 710027,
                            "type": "local",
                            "view": "boolean?"
                        }
                    ],
                    "desc": "\nReturns the number of UTF-8 characters in string `s` that start between positions `i` and `j` (both inclusive).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.len\"])",
                    "finish": 710035,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer?"
                        },
                        {
                            "name": "errpos",
                            "type": "function.return",
                            "view": "integer?"
                        }
                    ],
                    "start": 710000,
                    "type": "function",
                    "view": "function utf8.len(s: string, i?: integer, j?: integer, lax?: boolean)\n  -> integer?\n  2. errpos: integer?"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": 710017,
                "start": 710009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the number of UTF-8 characters in string `s` that start between positions `i` and `j` (both inclusive).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.len\"])",
        "name": "utf8.len",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 830022,
                            "name": "s",
                            "start": 830021,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 830025,
                            "name": "n",
                            "start": 830024,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 830028,
                            "name": "i",
                            "start": 830027,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "\nReturns the position (in bytes) where the encoding of the `n`-th character of `s` (counting from position `i`) starts.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.offset\"])",
                    "finish": 830033,
                    "returns": [
                        {
                            "name": "p",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 830000,
                    "type": "function",
                    "view": "function utf8.offset(s: string, n: integer, i?: integer)\n  -> p: integer"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/utf8.lua",
                "finish": 830020,
                "start": 830009,
                "type": "setfield"
            }
        ],
        "desc": "\nReturns the position (in bytes) where the encoding of the `n`-th character of `s` (counting from position `i`) starts.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-utf8.offset\"])",
        "name": "utf8.offset",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3760021,
                            "name": "message",
                            "start": 3760014,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 3760026,
                            "start": 3760023,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nEmits a warning with a message composed by the concatenation of all its arguments (which should be strings).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-warn\"])",
                    "finish": 3760031,
                    "start": 3760000,
                    "type": "function",
                    "view": "function warn(message: string, ...any)"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 3760013,
                "start": 3760009,
                "type": "setglobal"
            }
        ],
        "desc": "\nEmits a warning with a message composed by the concatenation of all its arguments (which should be strings).\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-warn\"])",
        "name": "warn",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "finish": 110009,
                    "start": 110007,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_tjk.lua",
                "finish": 110004,
                "start": 110000,
                "type": "setglobal"
            },
            {
                "extends": {
                    "finish": 110009,
                    "start": 110007,
                    "type": "table",
                    "view": "table"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 110004,
                "start": 110000,
                "type": "setglobal"
            }
        ],
        "name": "wgui",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The identifier of the image to clear. If it is 0, clear all iamges",
                            "finish": 3460029,
                            "name": "idx",
                            "start": 3460026,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Clears one of all images\n\n@*param* `idx` โ The identifier of the image to clear. If it is 0, clear all iamges",
                    "finish": 3470003,
                    "start": 3460000,
                    "type": "function",
                    "view": "function wgui.deleteimage(idx: integer)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 3460025,
                "start": 3460009,
                "type": "setfield"
            }
        ],
        "desc": "Clears one of all images\n\n@*param* `idx` โ The identifier of the image to clear. If it is 0, clear all iamges",
        "name": "wgui.deleteimage",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3530027,
                            "name": "idx",
                            "start": 3530024,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3530030,
                            "name": "x",
                            "start": 3530029,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3530033,
                            "name": "y",
                            "start": 3530032,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Draws the image at index `idx` at the specified coordinates",
                    "finish": 3540003,
                    "start": 3530000,
                    "type": "function",
                    "view": "function wgui.drawimage(idx: integer, x: integer, y: integer)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 3530023,
                "start": 3530009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3610027,
                            "name": "idx",
                            "start": 3610024,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3610030,
                            "name": "x",
                            "start": 3610029,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3610033,
                            "name": "y",
                            "start": 3610032,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3610036,
                            "name": "s",
                            "start": 3610035,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Draws the image at index `idx` at the specified coordinates and scale",
                    "finish": 3620003,
                    "start": 3610000,
                    "type": "function",
                    "view": "function wgui.drawimage(idx: integer, x: integer, y: integer, s: number)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 3610023,
                "start": 3610009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3700027,
                            "name": "idx",
                            "start": 3700024,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3700030,
                            "name": "x",
                            "start": 3700029,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3700033,
                            "name": "y",
                            "start": 3700032,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3700036,
                            "name": "w",
                            "start": 3700035,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3700039,
                            "name": "h",
                            "start": 3700038,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Draws the image at index `idx` at the specified coordinates and size",
                    "finish": 3710003,
                    "start": 3700000,
                    "type": "function",
                    "view": "function wgui.drawimage(idx: integer, x: integer, y: integer, w: integer, h: integer)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 3700023,
                "start": 3700009,
                "type": "setfield"
            },
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3840027,
                            "name": "idx",
                            "start": 3840024,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3840030,
                            "name": "x",
                            "start": 3840029,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3840033,
                            "name": "y",
                            "start": 3840032,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3840036,
                            "name": "w",
                            "start": 3840035,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3840039,
                            "name": "h",
                            "start": 3840038,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3840045,
                            "name": "srcx",
                            "start": 3840041,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3840051,
                            "name": "srcy",
                            "start": 3840047,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3840057,
                            "name": "srcw",
                            "start": 3840053,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3840063,
                            "name": "srch",
                            "start": 3840059,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3840071,
                            "name": "rotate",
                            "start": 3840065,
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Draws the image at index `idx` at the specified coordinates, size, and rotation, using a part of the source image given by the `src` parameters",
                    "finish": 3850003,
                    "start": 3840000,
                    "type": "function",
                    "view": "function wgui.drawimage(idx: integer, x: integer, y: integer, w: integer, h: integer, srcx: integer, srcy: integer, srcw: integer, srch: integer, rotate: number)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 3840023,
                "start": 3840009,
                "type": "setfield"
            }
        ],
        "desc": "Draws the image at index `idx` at the specified coordinates",
        "name": "wgui.drawimage",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2890027,
                            "name": "text",
                            "start": 2890023,
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": 2890033,
                            "name": "rect",
                            "start": 2890029,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "finish": 2890041,
                            "name": "format",
                            "start": 2890035,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "GDI: Draws text in a rectangle (more documentation soon)",
                    "finish": 2900003,
                    "start": 2890000,
                    "type": "function",
                    "view": "function wgui.drawtext(text: string, rect: table, format?: string)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 2890022,
                "start": 2890009,
                "type": "setfield"
            }
        ],
        "desc": "GDI: Draws text in a rectangle (more documentation soon)",
        "name": "wgui.drawtext",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4070026,
                            "name": "left",
                            "start": 4070022,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4070031,
                            "name": "top",
                            "start": 4070028,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4070038,
                            "name": "right",
                            "start": 4070033,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4070046,
                            "name": "bottom",
                            "start": 4070040,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Draws an ellipse at the specified coordinates and size. Uses the GDI brush color for the background and a 1 pixel border of the GDI pen color",
                    "finish": 4080003,
                    "start": 4070000,
                    "type": "function",
                    "view": "function wgui.ellipse(left: integer, top: integer, right: integer, bottom: integer)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 4070021,
                "start": 4070009,
                "type": "setfield"
            }
        ],
        "desc": "Draws an ellipse at the specified coordinates and size. Uses the GDI brush color for the background and a 1 pixel border of the GDI pen color",
        "name": "wgui.ellipse",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3290028,
                            "name": "x",
                            "start": 3290027,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3290031,
                            "name": "y",
                            "start": 3290030,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3290034,
                            "name": "w",
                            "start": 3290033,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3290037,
                            "name": "h",
                            "start": 3290036,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "Color names are currently broken",
                            "finish": 3290044,
                            "name": "color",
                            "start": 3290039,
                            "type": "local",
                            "view": "color"
                        }
                    ],
                    "desc": "GDIPlus: Draws an ellipse at the specified coordinates, size, and color\n\n@*param* `color` โ Color names are currently broken\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
                    "finish": 3300003,
                    "start": 3290000,
                    "type": "function",
                    "view": "function wgui.fillellipsea(x: integer, y: integer, w: integer, h: integer, color: color)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 3290026,
                "start": 3290009,
                "type": "setfield"
            }
        ],
        "desc": "GDIPlus: Draws an ellipse at the specified coordinates, size, and color\n\n@*param* `color` โ Color names are currently broken\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "name": "wgui.fillellipsea",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "Ex: `\\{\\{x1, y1\\}, \\{x2, y2\\}, \\{x3, y3\\}\\}`",
                            "finish": 3350033,
                            "name": "points",
                            "start": 3350027,
                            "type": "local",
                            "view": "table"
                        },
                        {
                            "desc": "Color names are currently broken",
                            "finish": 3350040,
                            "name": "color",
                            "start": 3350035,
                            "type": "local",
                            "view": "color"
                        }
                    ],
                    "desc": "Draws a filled in polygon using the points in `points`\n\n@*param* `points` โ Ex: `\\{\\{x1, y1\\}, \\{x2, y2\\}, \\{x3, y3\\}\\}`\n\n@*param* `color` โ Color names are currently broken\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
                    "finish": 3360003,
                    "start": 3350000,
                    "type": "function",
                    "view": "function wgui.fillpolygona(points: table, color: color)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 3350026,
                "start": 3350009,
                "type": "setfield"
            }
        ],
        "desc": "Draws a filled in polygon using the points in `points`\n\n@*param* `points` โ Ex: `\\{\\{x1, y1\\}, \\{x2, y2\\}, \\{x3, y3\\}\\}`\n\n@*param* `color` โ Color names are currently broken\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "name": "wgui.fillpolygona",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3110027,
                            "name": "left",
                            "start": 3110023,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3110032,
                            "name": "top",
                            "start": 3110029,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3110039,
                            "name": "right",
                            "start": 3110034,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3110047,
                            "name": "bottom",
                            "start": 3110041,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3110052,
                            "name": "red",
                            "start": 3110049,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3110059,
                            "name": "green",
                            "start": 3110054,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3110065,
                            "name": "blue",
                            "start": 3110061,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Draws a rectangle at the specified coordinates with the specified color",
                    "finish": 3120003,
                    "start": 3110000,
                    "type": "function",
                    "view": "function wgui.fillrect(left: integer, top: integer, right: integer, bottom: integer, red: integer, green: integer, blue: integer)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 3110022,
                "start": 3110009,
                "type": "setfield"
            }
        ],
        "desc": "Draws a rectangle at the specified coordinates with the specified color",
        "name": "wgui.fillrect",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3200025,
                            "name": "x",
                            "start": 3200024,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3200028,
                            "name": "y",
                            "start": 3200027,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3200031,
                            "name": "w",
                            "start": 3200030,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3200034,
                            "name": "h",
                            "start": 3200033,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "Color names are currently broken",
                            "finish": 3200041,
                            "name": "color",
                            "start": 3200036,
                            "type": "local",
                            "view": "color"
                        }
                    ],
                    "desc": "GDIPlus: Draws a rectangle at the specified coordinates, size and color\n\n@*param* `color` โ Color names are currently broken\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
                    "finish": 3210003,
                    "start": 3200000,
                    "type": "function",
                    "view": "function wgui.fillrecta(x: integer, y: integer, w: integer, h: integer, color: color)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 3200023,
                "start": 3200009,
                "type": "setfield"
            }
        ],
        "desc": "GDIPlus: Draws a rectangle at the specified coordinates, size and color\n\n@*param* `color` โ Color names are currently broken\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "name": "wgui.fillrecta",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3990030,
                            "name": "idx",
                            "start": 3990027,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Returns the width and height of the image at `idx`",
                    "finish": 4000003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "{ width: integer, height: integer }"
                        }
                    ],
                    "start": 3990000,
                    "type": "function",
                    "view": "function wgui.getimageinfo(idx: integer)\n  -> { width: integer, height: integer }"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 3990026,
                "start": 3990009,
                "type": "setfield"
            }
        ],
        "desc": "Returns the width and height of the image at `idx`",
        "name": "wgui.getimageinfo",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Returns the current width and height of the mupen window in a table",
                    "finish": 4260003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "{ width: integer, height: integer }"
                        }
                    ],
                    "start": 4250000,
                    "type": "function",
                    "view": "function wgui.info()\n  -> { width: integer, height: integer }"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 4250018,
                "start": 4250009,
                "type": "setfield"
            }
        ],
        "desc": "Returns the current width and height of the mupen window in a table",
        "name": "wgui.info",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4200021,
                            "name": "x1",
                            "start": 4200019,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4200025,
                            "name": "y1",
                            "start": 4200023,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4200029,
                            "name": "x2",
                            "start": 4200027,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4200033,
                            "name": "y2",
                            "start": 4200031,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Draws a line from `(x1, y1)` to `(x2, y2)`",
                    "finish": 4210003,
                    "start": 4200000,
                    "type": "function",
                    "view": "function wgui.line(x1: integer, y1: integer, x2: integer, y2: integer)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 4200018,
                "start": 4200009,
                "type": "setfield"
            }
        ],
        "desc": "Draws a line from `(x1, y1)` to `(x2, y2)`",
        "name": "wgui.line",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3410028,
                            "name": "path",
                            "start": 3410024,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Loads an image file from `path` and returns the identifier of that image",
                    "finish": 3420003,
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 3410000,
                    "type": "function",
                    "view": "function wgui.loadimage(path: string)\n  -> integer"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 3410023,
                "start": 3410009,
                "type": "setfield"
            }
        ],
        "desc": "Loads an image file from `path` and returns the identifier of that image",
        "name": "wgui.loadimage",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Captures the current screen and saves it as an image\n\n@*return* `The` โ identifier of the saved image",
                    "finish": 3900003,
                    "returns": [
                        {
                            "desc": "identifier of the saved image",
                            "name": "The",
                            "type": "function.return",
                            "view": "integer"
                        }
                    ],
                    "start": 3890000,
                    "type": "function",
                    "view": "function wgui.loadscreen()\n  -> The: integer"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 3890024,
                "start": 3890009,
                "type": "setfield"
            }
        ],
        "desc": "Captures the current screen and saves it as an image\n\n@*return* `The` โ identifier of the saved image",
        "name": "wgui.loadscreen",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [],
                    "desc": "Re-initializes loadscreen",
                    "finish": 3940003,
                    "start": 3930000,
                    "type": "function",
                    "view": "function wgui.loadscreenreset()"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 3930029,
                "start": 3930009,
                "type": "setfield"
            }
        ],
        "desc": "Re-initializes loadscreen",
        "name": "wgui.loadscreenreset",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4120028,
                            "name": "points",
                            "start": 4120022,
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "Draws a polygon with the given points. Uses the GDI brush color for the background and a 1 pixel border of the GDI pen color",
                    "finish": 4130003,
                    "start": 4120000,
                    "type": "function",
                    "view": "function wgui.polygon(points: table)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 4120021,
                "start": 4120009,
                "type": "setfield"
            }
        ],
        "desc": "Draws a polygon with the given points. Uses the GDI brush color for the background and a 1 pixel border of the GDI pen color",
        "name": "wgui.polygon",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3000023,
                            "name": "left",
                            "start": 3000019,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3000028,
                            "name": "top",
                            "start": 3000025,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3000035,
                            "name": "right",
                            "start": 3000030,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 3000043,
                            "name": "bottom",
                            "start": 3000037,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "desc": "The width of the ellipse used to draw the rounded corners. (currently don't seem to be working)",
                            "finish": 3000058,
                            "name": "rounded_width",
                            "start": 3000045,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "The height of the ellipse used to draw the rounded corners.",
                            "finish": 3000074,
                            "name": "rounded_height",
                            "start": 3000060,
                            "type": "local",
                            "view": "integer?"
                        }
                    ],
                    "desc": "GDI: Draws a rectangle at the specified coordinates with the current GDI background color and a 1 pixel border of the GDI pen color.\n\n@*param* `rounded_width` โ The width of the ellipse used to draw the rounded corners. (currently don't seem to be working)\n\n@*param* `rounded_height` โ The height of the ellipse used to draw the rounded corners.",
                    "finish": 3010003,
                    "start": 3000000,
                    "type": "function",
                    "view": "function wgui.rect(left: integer, top: integer, right: integer, bottom: integer, rounded_width?: integer, rounded_height?: integer)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 3000018,
                "start": 3000009,
                "type": "setfield"
            }
        ],
        "desc": "GDI: Draws a rectangle at the specified coordinates with the current GDI background color and a 1 pixel border of the GDI pen color.\n\n@*param* `rounded_width` โ The width of the ellipse used to draw the rounded corners. (currently don't seem to be working)\n\n@*param* `rounded_height` โ The height of the ellipse used to draw the rounded corners.",
        "name": "wgui.rect",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 4310022,
                            "name": "w",
                            "start": 4310021,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 4310025,
                            "name": "h",
                            "start": 4310024,
                            "type": "local",
                            "view": "integer"
                        }
                    ],
                    "desc": "Resizes the mupen window to `w` x `h`",
                    "finish": 4320003,
                    "start": 4310000,
                    "type": "function",
                    "view": "function wgui.resize(w: integer, h: integer)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 4310020,
                "start": 4310009,
                "type": "setfield"
            }
        ],
        "desc": "Resizes the mupen window to `w` x `h`",
        "name": "wgui.resize",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": " colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"",
                            "finish": 2670025,
                            "name": "color",
                            "start": 2670020,
                            "type": "local",
                            "view": "color"
                        }
                    ],
                    "desc": "GDI: Sets the current GDI background color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
                    "finish": 2680003,
                    "start": 2670000,
                    "type": "function",
                    "view": "function wgui.setbk(color: color)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 2670019,
                "start": 2670009,
                "type": "setfield"
            }
        ],
        "desc": "GDI: Sets the current GDI background color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "name": "wgui.setbk",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": " colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"",
                            "finish": 2520028,
                            "name": "color",
                            "start": 2520023,
                            "type": "local",
                            "view": "color"
                        }
                    ],
                    "desc": "GDI: Sets the current GDI brush color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
                    "finish": 2530003,
                    "start": 2520000,
                    "type": "function",
                    "view": "function wgui.setbrush(color: color)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 2520022,
                "start": 2520009,
                "type": "setfield"
            }
        ],
        "desc": "GDI: Sets the current GDI brush color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "name": "wgui.setbrush",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": " colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"",
                            "finish": 2620028,
                            "name": "color",
                            "start": 2620023,
                            "type": "local",
                            "view": "color"
                        }
                    ],
                    "desc": "GDI: Sets the current GDI text color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
                    "finish": 2630003,
                    "start": 2620000,
                    "type": "function",
                    "view": "function wgui.setcolor(color: color)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 2620022,
                "start": 2620009,
                "type": "setfield"
            }
        ],
        "desc": "GDI: Sets the current GDI text color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "name": "wgui.setcolor",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": "The size of the font. Defaults to 0 if not given",
                            "finish": 2740026,
                            "name": "size",
                            "start": 2740022,
                            "type": "local",
                            "view": "integer?"
                        },
                        {
                            "desc": "The name of the font from the operating system. Dafaults to \"MS Gothic\" if not given",
                            "finish": 2740032,
                            "name": "font",
                            "start": 2740028,
                            "type": "local",
                            "view": "string?"
                        },
                        {
                            "desc": "Each character in this string sets one style of the font, applied in chronological order. `b` sets bold, `i` sets italics, `u` sets underline, `s` sets strikethrough, and `a` sets antialiased. Defaults to \"\" if not given",
                            "finish": 2740039,
                            "name": "style",
                            "start": 2740034,
                            "type": "local",
                            "view": "string?"
                        }
                    ],
                    "desc": "Sets the font, font size, and font style\n\n@*param* `size` โ The size of the font. Defaults to 0 if not given\n\n@*param* `font` โ The name of the font from the operating system. Dafaults to \"MS Gothic\" if not given\n\n@*param* `style` โ Each character in this string sets one style of the font, applied in chronological order. `b` sets bold, `i` sets italics, `u` sets underline, `s` sets strikethrough, and `a` sets antialiased. Defaults to \"\" if not given",
                    "finish": 2750003,
                    "start": 2740000,
                    "type": "function",
                    "view": "function wgui.setfont(size?: integer, font?: string, style?: string)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 2740021,
                "start": 2740009,
                "type": "setfield"
            }
        ],
        "desc": "Sets the font, font size, and font style\n\n@*param* `size` โ The size of the font. Defaults to 0 if not given\n\n@*param* `font` โ The name of the font from the operating system. Dafaults to \"MS Gothic\" if not given\n\n@*param* `style` โ Each character in this string sets one style of the font, applied in chronological order. `b` sets bold, `i` sets italics, `u` sets underline, `s` sets strikethrough, and `a` sets antialiased. Defaults to \"\" if not given",
        "name": "wgui.setfont",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "desc": " colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"",
                            "finish": 2570026,
                            "name": "color",
                            "start": 2570021,
                            "type": "local",
                            "view": "color"
                        }
                    ],
                    "desc": "GDI: Sets the current GDI pen color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
                    "finish": 2580003,
                    "start": 2570000,
                    "type": "function",
                    "view": "function wgui.setpen(color: color)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 2570020,
                "start": 2570009,
                "type": "setfield"
            }
        ],
        "desc": "GDI: Sets the current GDI pen color to `color`\n\n```lua\n--  colors can be any of these or \"#RGB\", \"#RGBA\", \"#RRGGBB\", or \"#RRGGBBA\"\ncolor:\n    | \"white\"\n    | \"black\"\n    | \"clear\"\n    | \"gray\"\n    | \"red\"\n    | \"orange\"\n    | \"yellow\"\n    | \"chartreuse\"\n    | \"green\"\n    | \"teal\"\n    | \"cyan\"\n    | \"blue\"\n    | \"purple\"\n```",
        "name": "wgui.setpen",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 2820020,
                            "name": "x",
                            "start": 2820019,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 2820023,
                            "name": "y",
                            "start": 2820022,
                            "type": "local",
                            "view": "integer"
                        },
                        {
                            "finish": 2820029,
                            "name": "text",
                            "start": 2820025,
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "GDI: Displays text in one line with the current GDI background color and GDI text color",
                    "finish": 2830003,
                    "start": 2820000,
                    "type": "function",
                    "view": "function wgui.text(x: integer, y: integer, text: string)"
                },
                "file": "file:///c%3A/Users/david/OneDrive/Desktop/Code/MupenLuaDoc/api_wade7.lua",
                "finish": 2820018,
                "start": 2820009,
                "type": "setfield"
            }
        ],
        "desc": "GDI: Displays text in one line with the current GDI background color and GDI text color",
        "name": "wgui.text",
        "type": "variable"
    },
    {
        "defines": [
            {
                "extends": {
                    "args": [
                        {
                            "finish": 3890017,
                            "name": "f",
                            "start": 3890016,
                            "type": "local",
                            "view": "fun(...any):...unknown"
                        },
                        {
                            "finish": 3890023,
                            "name": "msgh",
                            "start": 3890019,
                            "type": "local",
                            "view": "function"
                        },
                        {
                            "finish": 3890029,
                            "name": "arg1",
                            "start": 3890025,
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": 3890034,
                            "start": 3890031,
                            "type": "...",
                            "view": "unknown"
                        }
                    ],
                    "desc": "\nCalls function `f` with the given arguments in protected mode with a new message handler.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-xpcall\"])",
                    "finish": 3890039,
                    "returns": [
                        {
                            "name": "success",
                            "type": "function.return",
                            "view": "boolean"
                        },
                        {
                            "name": "result",
                            "type": "function.return",
                            "view": "any"
                        },
                        {
                            "name": "...",
                            "type": "function.return",
                            "view": "any"
                        }
                    ],
                    "start": 3890000,
                    "type": "function",
                    "view": "function xpcall(f: fun(...any):...unknown, msgh: function, arg1?: any, ...any)\n  -> success: boolean\n  2. result: any\n  3. ...any"
                },
                "file": "file:///c%3A/Users/david/.vscode/extensions/sumneko.lua-3.6.21-win32-x64/server/meta/Lua%205.4%20en-us%20utf8/basic.lua",
                "finish": 3890015,
                "start": 3890009,
                "type": "setglobal"
            }
        ],
        "desc": "\nCalls function `f` with the given arguments in protected mode with a new message handler.\n\n[View documents](command:extension.lua.doc?[\"en-us/54/manual.html/pdf-xpcall\"])",
        "name": "xpcall",
        "type": "variable"
    }
]