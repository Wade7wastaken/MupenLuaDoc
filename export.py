import markdown
import json

# only accept documentation from file paths ending in this
api_filename_ending = "api.lua"

# custom write function I wrote to automatically add \n


def write(strings, f):
    for string in strings:
        f.write(f"{string}\n")


# read in the json into data
with open("export/doc.json", "rt") as f:
    data = json.loads(f.read())

# open the html file to write to it later
with open("index.html", "wt") as f:

    # data is an array with all the variables
    for variable in data:
        # store the name of the variable
        variable_name = variable["name"]
        # each variable can have multiple definitions (print has 2, one is for mupen and one is the regular lua one)
        for definition in variable["defines"]:
            # get the source file name for every definition
            file_name = definition["file"]
            # only process the definition if it is one we want
            if file_name.endswith(api_filename_ending):
                # only process functions (ill loosen this a bit later)
                variable_type = definition["extends"]["type"]
                if variable_type == "function":
                    # write markdown code similar to the code generated by LuaLS
                    html = markdown.markdown(f'''
---

# {variable_name}

{definition["extends"]["desc"]}


```lua
{definition["extends"]["desc"]}
```


''')
                    f.write(html)